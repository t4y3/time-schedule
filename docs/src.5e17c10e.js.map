{"version":3,"sources":["../node_modules/process/browser.js","../node_modules/mobx/lib/mobx.module.js","_store.ts","../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/directives/repeat.ts","../src/directives/class-map.ts","_debounce.ts","_app.ts","index.ts"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","extendStatics","Object","setPrototypeOf","__proto__","d","b","p","hasOwnProperty","__extends","__","constructor","create","__assign","assign","t","s","n","__values","o","m","Symbol","iterator","next","value","done","__read","r","ar","error","__spread","OBFUSCATED_ERROR$$1","EMPTY_ARRAY$$1","freeze","EMPTY_OBJECT$$1","getNextId$$1","globalState$$1","mobxGuid","fail$$1","message","invariant$$1","check","deprecatedMessages","deprecated$$1","msg","thing","once$$1","func","invoked","noop$$1","unique$$1","list","res","forEach","item","indexOf","isObject$$1","isPlainObject$$1","proto","getPrototypeOf","addHiddenProp$$1","object","propName","defineProperty","enumerable","writable","configurable","addHiddenFinalProp$$1","isPropertyConfigurable$$1","prop","descriptor","getOwnPropertyDescriptor","assertPropertyConfigurable$$1","createInstanceofPredicate$$1","clazz","x","isArrayLike$$1","isArray","isObservableArray$$1","isES6Map$$1","Map","isES6Set$$1","Set","getMapLikeKeys$$1","map","keys","_a","key","isObservableMap$$1","from","toPrimitive$$1","$mobx$$1","Atom$$1","isPendingUnobservation","isBeingObserved","observers","diffValue","lastAccessedBy","lowestObserverState","IDerivationState","NOT_TRACKING","onBecomeObserved","onBecomeObservedListeners","listener","onBecomeUnobserved","onBecomeUnobservedListeners","reportObserved","reportObserved$$1","reportChanged","startBatch$$1","propagateChanged$$1","endBatch$$1","toString","isAtom$$1","createAtom$$1","onBecomeObservedHandler","onBecomeUnobservedHandler","atom","onBecomeObserved$$1","onBecomeUnobserved$$1","identityComparer","a","structuralComparer","deepEqual$$1","defaultComparer","is","comparer$$1","identity","structural","default","mobxDidRunLazyInitializersSymbol$$1","mobxPendingDecorators$$1","enumerableDescriptorCache","nonEnumerableDescriptorCache","createPropertyInitializerDescriptor","cache","get","initializeInstance$$1","set","target","decorators","propertyCreator","decoratorTarget","decoratorArguments","createPropDecorator$$1","propertyInitiallyEnumerable","decorator","applyImmediately","inheritedDecorators","quacksLikeADecorator$$1","slice","deepEnhancer$$1","v","_","isObservable$$1","observable$$1","undefined","shallowEnhancer$$1","isObservableObject$$1","isObservableSet$$1","deep","referenceEnhancer$$1","newValue","refStructEnhancer$$1","oldValue","createDecoratorForEnhancer$$1","enhancer","propertyName","_decoratorTarget","decoratorArgs","initialValue","initializer","asObservableObject$$1","addObservableProp","defaultCreateObservableOptions$$1","defaultDecorator","proxy","assertValidOption","test","asCreateObservableOptions$$1","deepDecorator$$1","shallowDecorator","refDecorator$$1","refStructDecorator","getEnhancerFromOptions","options","createObservable","arg2","arg3","observableFactories","box","incorrectlyUsedAsDecorator","ObservableValue$$1","equals","initialValues","createObservableArray$$1","ObservableMap$$1","ObservableSet$$1","props","extendObservable$$1","getDefaultDecoratorFromObjectOptions$$1","createDynamicObservableObject$$1","extendObservableObjectWithProperties$$1","ref","shallow","struct","methodName","computedDecorator$$1","instance","get$$1","set$$1","addComputedProp","context","computedStructDecorator","computed$$1","arg1","opts","ComputedValue$$1","createAction$$1","actionName","fn","executeAction$$1","isMobxAction","scope","runInfo","startAction","shouldSupressReactionError","suppressReactionErrors","endAction","notifySpy","isSpyEnabled$$1","startTime","prevDerivation","untrackedStart$$1","prevAllowStateChanges","allowStateChangesStart$$1","allowStateChangesEnd$$1","untrackedEnd$$1","allowStateChanges$$1","prev","allowStateChanges","allowStateChangesInsideComputed$$1","computationDepth","_super","_this","hasUnreportedChange","dehanceValue","dehancer","prepareNewValue","UNCHANGED","setNewValue","hasInterceptors$$1","checkIfStateModificationsAreAllowed$$1","change","interceptChange$$1","type","hasListeners$$1","notifyListeners$$1","intercept","handler","registerInterceptor$$1","observe","fireImmediately","registerListener$$1","toJSON","valueOf","toPrimitive","isObservableValue$$1","TraceMode$$1","dependenciesState","observing","newObserving","runId","UP_TO_DATE","unboundDepsCount","__mapid","CaughtException$$1","isComputing","isRunningSetter","isTracing","NONE","derivation","setter","compareStructural","requiresReaction","keepAlive","onBecomeStale","propagateMaybeChanged$$1","inBatch","size","shouldCompute$$1","trackAndCompute","propagateChangeConfirmed$$1","warnAboutUntrackedRead","computeValue","result","isCaughtException$$1","cause","peek","wasSuspended","changed","track","trackDerivedFunction$$1","disableErrorBoundaries","suspend","clearObserving$$1","firstTime","prevValue","autorun$$1","prevU","isComputedValue$$1","IDerivationState$$1","STALE","POSSIBLY_STALE","prevUntracked","obs","l","obj","changeDependenciesStateTo0$$1","isComputingDerivation$$1","trackingDerivation","hasObservers$$1","enforceActions","f","prevTracking","bindDependencies","prevObserving","lowestNewObservingDerivationState","i0","dep","removeObserver$$1","addObserver$$1","untracked$$1","action$$1","persistentKeys","MobXGlobals$$1","pendingUnobservations","pendingReactions","isRunningReactions","spyListeners","globalReactionErrorHandlers","computedRequiresReaction","canMergeGlobalState","isolateCalled","global","getGlobal$$1","__mobxInstanceCount","__mobxGlobals","isolateGlobalState$$1","getGlobalState$$1","resetGlobalState$$1","defaultGlobals","window","getObservers$$1","node","add","delete","queueForUnobservation$$1","runReactions$$1","logTraceInfo","console","log","BREAK","lines","printDepTree","getDependencyTree$$1","Function","replace","join","tree","depth","dependencies","child","Reaction$$1","onInvalidate","errorHandler","isDisposed","_isScheduled","_isTrackPending","_isRunning","schedule","isScheduled","runReaction","reportExceptionInDerivation","warn","spyReport$$1","dispose","getDisposer","bind","trace","enterBreakPoint","trace$$1","onReactionError$$1","idx","splice","MAX_REACTION_ITERATIONS","reactionScheduler","runReactionsHelper","allReactions","iterations","remainingReactions","isReaction$$1","setReactionScheduler$$1","baseScheduler","event","spyReportStart$$1","END_EVENT","spyReportEnd","spyReportEnd$$1","spy$$1","dontReassignFields","namedActionDecorator$$1","initializer_1","actionFieldDecorator$$1","boundActionDecorator$$1","applyToInstance","defineBoundAction$$1","arg4","runInAction$$1","isAction$$1","view","reaction$$1","runSync","scheduler","delay","reactionRunner","onError","scheduler_1","createSchedulerFromOptions","isScheduled_1","bound","expression","effect","effectAction","wrapErrorHandler","nextValue","baseFn","interceptHook","hook","getAtom$$1","cb","listenersKey","hookListeners","configure$$1","isolateGlobalState","ea","decorate$$1","_loop_1","propertyDecorators","newDescriptor","reduce","accDescriptor","properties","resultDescriptor","property","nodeToDependencyTree","getObserverTree$$1","nodeToObserverTree","generatorId","flow$$1","generator","ctx","rejector","gen","pendingPromise","promise","Promise","resolve","reject","stepId","onFulfilled","ret","onRejected","err","throw","then","cancel","cancelPromise","return","yieldedPromise","interceptReads$$1","propOrHandler","getAdministration$$1","intercept$$1","interceptProperty","interceptInterceptable","_isComputed$$1","values","has","isComputed$$1","isComputedProp$$1","_isObservable","isObservableProp$$1","keys$$1","getKeys","index","values$$1","entries$$1","entries","adm","write","defaultEnhancer","parseInt","values_1","key_1","remove$$1","remove","has$$1","observe$$1","propOrCb","cbOrFire","observeObservableProperty","observeObservable","defaultOptions","detectCycles","exportMapsAsObjects","recurseEverything","toJSHelper","source","__alreadySeen","Date","res_1","toAdd","res_2","res_3","res_4","res_5","toJS$$1","_i","pop","getAtomFromArgs","LOG","transaction$$1","thisArg","when$$1","predicate","whenPromise","_when","timeoutHandle","disposer","getAdm","objectProxyTraps","deleteProperty","ownKeys","Reflect","keysAtom","preventExtensions","base","Proxy","interceptable","interceptors","listenable","changeListeners","MAX_SPLICE_SIZE","arrayTraps","getArrayLength","arrayExtensions","isNaN","setArrayLength","owned","ObservableArrayAdministration","spliceWithArray","lastKnownLength","newV","oldV","dehanceValues","added","addedCount","removed","removedCount","newLength","currentLength","newItems","updateArrayLength","oldLength","delta","deleteCount","Math","max","min","spliceItemsIntoValues","notifyArraySplice","notifyArrayChildUpdate","notify","clear","toJS","items","shift","unshift","reverse","clone","sort","compareFn","funcName","isObservableArrayAdministration","ObservableMapMarker","initialData","_keysAtom","toStringTag","_data","_hasMap","merge","_has","_updateHasMapEntry","hasKey","_updateValue","_addValue","entry","stringifyKey","self","nextIndex","makeIterable","callback","e_1","_b","_c","_d","e_1_1","other","e_2","e_2_1","newKeys","filter","k","toPOJO","e_3","e_3_1","String","_a$1","ObservableSetMarker","_atom","callbackFn","observableValues","ObservableObjectAdministration$$1","read","pendingKeys","exists","generateObservablePropConfig$$1","notifyPropertyAddition","propertyOwner","generateComputedPropConfig$$1","oldObservable","illegalAccess","owner","observablePropertyConfigs","computedPropertyConfigs","getAdministrationForComputedPropOwner","isObservableObjectAdministration","anyThing","getDebugName$$1","named","g","eq","aStack","bStack","deepEq","unwrap","className","areArrays","aCtor","bCtor","has$1","__MOBX_DEVTOOLS_GLOBAL_HOOK__","injectMobx","spy","extras","getDebugName","$mobx"],"mappings":"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","file":"src.5e17c10e.js","sourceRoot":"../src","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/** MobX - (c) Michel Weststrate 2015 - 2018 - MIT Licensed */\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar OBFUSCATED_ERROR$$1 = \"An invariant failed, however the error is obfuscated because this is an production build.\";\nvar EMPTY_ARRAY$$1 = [];\nObject.freeze(EMPTY_ARRAY$$1);\nvar EMPTY_OBJECT$$1 = {};\nObject.freeze(EMPTY_OBJECT$$1);\nfunction getNextId$$1() {\n    return ++globalState$$1.mobxGuid;\n}\nfunction fail$$1(message) {\n    invariant$$1(false, message);\n    throw \"X\"; // unreachable\n}\nfunction invariant$$1(check, message) {\n    if (!check)\n        throw new Error(\"[mobx] \" + (message || OBFUSCATED_ERROR$$1));\n}\n/**\n * Prints a deprecation message, but only one time.\n * Returns false if the deprecated message was already printed before\n */\nvar deprecatedMessages = [];\nfunction deprecated$$1(msg, thing) {\n    if (process.env.NODE_ENV === \"production\")\n        return false;\n    if (thing) {\n        return deprecated$$1(\"'\" + msg + \"', use '\" + thing + \"' instead.\");\n    }\n    if (deprecatedMessages.indexOf(msg) !== -1)\n        return false;\n    deprecatedMessages.push(msg);\n    console.error(\"[mobx] Deprecated: \" + msg);\n    return true;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nfunction once$$1(func) {\n    var invoked = false;\n    return function () {\n        if (invoked)\n            return;\n        invoked = true;\n        return func.apply(this, arguments);\n    };\n}\nvar noop$$1 = function () { };\nfunction unique$$1(list) {\n    var res = [];\n    list.forEach(function (item) {\n        if (res.indexOf(item) === -1)\n            res.push(item);\n    });\n    return res;\n}\nfunction isObject$$1(value) {\n    return value !== null && typeof value === \"object\";\n}\nfunction isPlainObject$$1(value) {\n    if (value === null || typeof value !== \"object\")\n        return false;\n    var proto = Object.getPrototypeOf(value);\n    return proto === Object.prototype || proto === null;\n}\n\nfunction addHiddenProp$$1(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value: value\n    });\n}\nfunction addHiddenFinalProp$$1(object, propName, value) {\n    Object.defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value: value\n    });\n}\nfunction isPropertyConfigurable$$1(object, prop) {\n    var descriptor = Object.getOwnPropertyDescriptor(object, prop);\n    return !descriptor || (descriptor.configurable !== false && descriptor.writable !== false);\n}\nfunction assertPropertyConfigurable$$1(object, prop) {\n    if (process.env.NODE_ENV !== \"production\" && !isPropertyConfigurable$$1(object, prop))\n        fail$$1(\"Cannot make property '\" + prop.toString() + \"' observable, it is not configurable and writable in the target object\");\n}\nfunction createInstanceofPredicate$$1(name, clazz) {\n    var propName = \"isMobX\" + name;\n    clazz.prototype[propName] = true;\n    return function (x) {\n        return isObject$$1(x) && x[propName] === true;\n    };\n}\n/**\n * Returns whether the argument is an array, disregarding observability.\n */\nfunction isArrayLike$$1(x) {\n    return Array.isArray(x) || isObservableArray$$1(x);\n}\nfunction isES6Map$$1(thing) {\n    return thing instanceof Map;\n}\nfunction isES6Set$$1(thing) {\n    return thing instanceof Set;\n}\nfunction getMapLikeKeys$$1(map) {\n    if (isPlainObject$$1(map))\n        return Object.keys(map);\n    if (Array.isArray(map))\n        return map.map(function (_a) {\n            var _b = __read(_a, 1), key = _b[0];\n            return key;\n        });\n    if (isES6Map$$1(map) || isObservableMap$$1(map))\n        return Array.from(map.keys());\n    return fail$$1(\"Cannot get keys from '\" + map + \"'\");\n}\nfunction toPrimitive$$1(value) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\n\nvar $mobx$$1 = Symbol(\"mobx administration\");\nvar Atom$$1 = /** @class */ (function () {\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    function Atom$$1(name) {\n        if (name === void 0) { name = \"Atom@\" + getNextId$$1(); }\n        this.name = name;\n        this.isPendingUnobservation = false; // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n        this.isBeingObserved = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.NOT_TRACKING;\n    }\n    Atom$$1.prototype.onBecomeObserved = function () {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    Atom$$1.prototype.onBecomeUnobserved = function () {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    Atom$$1.prototype.reportObserved = function () {\n        return reportObserved$$1(this);\n    };\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    Atom$$1.prototype.reportChanged = function () {\n        startBatch$$1();\n        propagateChanged$$1(this);\n        endBatch$$1();\n    };\n    Atom$$1.prototype.toString = function () {\n        return this.name;\n    };\n    return Atom$$1;\n}());\nvar isAtom$$1 = createInstanceofPredicate$$1(\"Atom\", Atom$$1);\nfunction createAtom$$1(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {\n    if (onBecomeObservedHandler === void 0) { onBecomeObservedHandler = noop$$1; }\n    if (onBecomeUnobservedHandler === void 0) { onBecomeUnobservedHandler = noop$$1; }\n    var atom = new Atom$$1(name);\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop$$1) {\n        onBecomeObserved$$1(atom, onBecomeObservedHandler);\n    }\n    if (onBecomeUnobservedHandler !== noop$$1) {\n        onBecomeUnobserved$$1(atom, onBecomeUnobservedHandler);\n    }\n    return atom;\n}\n\nfunction identityComparer(a, b) {\n    return a === b;\n}\nfunction structuralComparer(a, b) {\n    return deepEqual$$1(a, b);\n}\nfunction defaultComparer(a, b) {\n    return Object.is(a, b);\n}\nvar comparer$$1 = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer\n};\n\nvar mobxDidRunLazyInitializersSymbol$$1 = Symbol(\"mobx did run lazy initializers\");\nvar mobxPendingDecorators$$1 = Symbol(\"mobx pending decorators\");\nvar enumerableDescriptorCache = {};\nvar nonEnumerableDescriptorCache = {};\nfunction createPropertyInitializerDescriptor(prop, enumerable) {\n    var cache = enumerable ? enumerableDescriptorCache : nonEnumerableDescriptorCache;\n    return (cache[prop] ||\n        (cache[prop] = {\n            configurable: true,\n            enumerable: enumerable,\n            get: function () {\n                initializeInstance$$1(this);\n                return this[prop];\n            },\n            set: function (value) {\n                initializeInstance$$1(this);\n                this[prop] = value;\n            }\n        }));\n}\nfunction initializeInstance$$1(target) {\n    if (target[mobxDidRunLazyInitializersSymbol$$1] === true)\n        return;\n    var decorators = target[mobxPendingDecorators$$1];\n    if (decorators) {\n        addHiddenProp$$1(target, mobxDidRunLazyInitializersSymbol$$1, true);\n        for (var key in decorators) {\n            var d = decorators[key];\n            d.propertyCreator(target, d.prop, d.descriptor, d.decoratorTarget, d.decoratorArguments);\n        }\n    }\n}\nfunction createPropDecorator$$1(propertyInitiallyEnumerable, propertyCreator) {\n    return function decoratorFactory() {\n        var decoratorArguments;\n        var decorator = function decorate$$1(target, prop, descriptor, applyImmediately\n        // This is a special parameter to signal the direct application of a decorator, allow extendObservable to skip the entire type decoration part,\n        // as the instance to apply the decorator to equals the target\n        ) {\n            if (applyImmediately === true) {\n                propertyCreator(target, prop, descriptor, target, decoratorArguments);\n                return null;\n            }\n            if (process.env.NODE_ENV !== \"production\" && !quacksLikeADecorator$$1(arguments))\n                fail$$1(\"This function is a decorator, but it wasn't invoked like a decorator\");\n            if (!Object.prototype.hasOwnProperty.call(target, mobxPendingDecorators$$1)) {\n                var inheritedDecorators = target[mobxPendingDecorators$$1];\n                addHiddenProp$$1(target, mobxPendingDecorators$$1, __assign({}, inheritedDecorators));\n            }\n            target[mobxPendingDecorators$$1][prop] = {\n                prop: prop,\n                propertyCreator: propertyCreator,\n                descriptor: descriptor,\n                decoratorTarget: target,\n                decoratorArguments: decoratorArguments\n            };\n            return createPropertyInitializerDescriptor(prop, propertyInitiallyEnumerable);\n        };\n        if (quacksLikeADecorator$$1(arguments)) {\n            // @decorator\n            decoratorArguments = EMPTY_ARRAY$$1;\n            return decorator.apply(null, arguments);\n        }\n        else {\n            // @decorator(args)\n            decoratorArguments = Array.prototype.slice.call(arguments);\n            return decorator;\n        }\n    };\n}\nfunction quacksLikeADecorator$$1(args) {\n    return (((args.length === 2 || args.length === 3) && typeof args[1] === \"string\") ||\n        (args.length === 4 && args[3] === true));\n}\n\nfunction deepEnhancer$$1(v, _, name) {\n    // it is an observable already, done\n    if (isObservable$$1(v))\n        return v;\n    // something that can be converted and mutated?\n    if (Array.isArray(v))\n        return observable$$1.array(v, { name: name });\n    if (isPlainObject$$1(v))\n        return observable$$1.object(v, undefined, { name: name });\n    if (isES6Map$$1(v))\n        return observable$$1.map(v, { name: name });\n    if (isES6Set$$1(v))\n        return observable$$1.set(v, { name: name });\n    return v;\n}\nfunction shallowEnhancer$$1(v, _, name) {\n    if (v === undefined || v === null)\n        return v;\n    if (isObservableObject$$1(v) || isObservableArray$$1(v) || isObservableMap$$1(v) || isObservableSet$$1(v))\n        return v;\n    if (Array.isArray(v))\n        return observable$$1.array(v, { name: name, deep: false });\n    if (isPlainObject$$1(v))\n        return observable$$1.object(v, undefined, { name: name, deep: false });\n    if (isES6Map$$1(v))\n        return observable$$1.map(v, { name: name, deep: false });\n    if (isES6Set$$1(v))\n        return observable$$1.set(v, { name: name, deep: false });\n    return fail$$1(process.env.NODE_ENV !== \"production\" &&\n        \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\n}\nfunction referenceEnhancer$$1(newValue) {\n    // never turn into an observable\n    return newValue;\n}\nfunction refStructEnhancer$$1(v, oldValue, name) {\n    if (process.env.NODE_ENV !== \"production\" && isObservable$$1(v))\n        throw \"observable.struct should not be used with observable values\";\n    if (deepEqual$$1(v, oldValue))\n        return oldValue;\n    return v;\n}\n\nfunction createDecoratorForEnhancer$$1(enhancer) {\n    invariant$$1(enhancer);\n    var decorator = createPropDecorator$$1(true, function (target, propertyName, descriptor, _decoratorTarget, decoratorArgs) {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant$$1(!descriptor || !descriptor.get, \"@observable cannot be used on getter (property \\\"\" + propertyName + \"\\\"), use @computed instead.\");\n        }\n        var initialValue = descriptor\n            ? descriptor.initializer\n                ? descriptor.initializer.call(target)\n                : descriptor.value\n            : undefined;\n        asObservableObject$$1(target).addObservableProp(propertyName, initialValue, enhancer);\n    });\n    var res = \n    // Extra process checks, as this happens during module initialization\n    typeof process !== \"undefined\" && process.env && process.env.NODE_ENV !== \"production\"\n        ? function observableDecorator() {\n            // This wrapper function is just to detect illegal decorator invocations, deprecate in a next version\n            // and simply return the created prop decorator\n            if (arguments.length < 2)\n                return fail$$1(\"Incorrect decorator invocation. @observable decorator doesn't expect any arguments\");\n            return decorator.apply(null, arguments);\n        }\n        : decorator;\n    res.enhancer = enhancer;\n    return res;\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nvar defaultCreateObservableOptions$$1 = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n};\nObject.freeze(defaultCreateObservableOptions$$1);\nfunction assertValidOption(key) {\n    if (!/^(deep|name|equals|defaultDecorator|proxy)$/.test(key))\n        fail$$1(\"invalid option for (extend)observable: \" + key);\n}\nfunction asCreateObservableOptions$$1(thing) {\n    if (thing === null || thing === undefined)\n        return defaultCreateObservableOptions$$1;\n    if (typeof thing === \"string\")\n        return { name: thing, deep: true, proxy: true };\n    if (process.env.NODE_ENV !== \"production\") {\n        if (typeof thing !== \"object\")\n            return fail$$1(\"expected options object\");\n        Object.keys(thing).forEach(assertValidOption);\n    }\n    return thing;\n}\nvar deepDecorator$$1 = createDecoratorForEnhancer$$1(deepEnhancer$$1);\nvar shallowDecorator = createDecoratorForEnhancer$$1(shallowEnhancer$$1);\nvar refDecorator$$1 = createDecoratorForEnhancer$$1(referenceEnhancer$$1);\nvar refStructDecorator = createDecoratorForEnhancer$$1(refStructEnhancer$$1);\nfunction getEnhancerFromOptions(options) {\n    return options.defaultDecorator\n        ? options.defaultDecorator.enhancer\n        : options.deep === false\n            ? referenceEnhancer$$1\n            : deepEnhancer$$1;\n}\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v, arg2, arg3) {\n    // @observable someProp;\n    if (typeof arguments[1] === \"string\") {\n        return deepDecorator$$1.apply(null, arguments);\n    }\n    // it is an observable already, done\n    if (isObservable$$1(v))\n        return v;\n    // something that can be converted and mutated?\n    var res = isPlainObject$$1(v)\n        ? observable$$1.object(v, arg2, arg3)\n        : Array.isArray(v)\n            ? observable$$1.array(v, arg2)\n            : isES6Map$$1(v)\n                ? observable$$1.map(v, arg2)\n                : isES6Set$$1(v)\n                    ? observable$$1.set(v, arg2)\n                    : v;\n    // this value could be converted to a new observable data structure, return it\n    if (res !== v)\n        return res;\n    // otherwise, just box it\n    fail$$1(process.env.NODE_ENV !== \"production\" &&\n        \"The provided value could not be converted into an observable. If you want just create an observable reference to the object use 'observable.box(value)'\");\n}\nvar observableFactories = {\n    box: function (value, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"box\");\n        var o = asCreateObservableOptions$$1(options);\n        return new ObservableValue$$1(value, getEnhancerFromOptions(o), o.name, true, o.equals);\n    },\n    array: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"array\");\n        var o = asCreateObservableOptions$$1(options);\n        return createObservableArray$$1(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    map: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"map\");\n        var o = asCreateObservableOptions$$1(options);\n        return new ObservableMap$$1(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    set: function (initialValues, options) {\n        if (arguments.length > 2)\n            incorrectlyUsedAsDecorator(\"set\");\n        var o = asCreateObservableOptions$$1(options);\n        return new ObservableSet$$1(initialValues, getEnhancerFromOptions(o), o.name);\n    },\n    object: function (props, decorators, options) {\n        if (typeof arguments[1] === \"string\")\n            incorrectlyUsedAsDecorator(\"object\");\n        var o = asCreateObservableOptions$$1(options);\n        if (o.proxy === false) {\n            return extendObservable$$1({}, props, decorators, o);\n        }\n        else {\n            var defaultDecorator = getDefaultDecoratorFromObjectOptions$$1(o);\n            var base = extendObservable$$1({}, undefined, undefined, o);\n            var proxy = createDynamicObservableObject$$1(base);\n            extendObservableObjectWithProperties$$1(proxy, props, decorators, defaultDecorator);\n            return proxy;\n        }\n    },\n    ref: refDecorator$$1,\n    shallow: shallowDecorator,\n    deep: deepDecorator$$1,\n    struct: refStructDecorator\n};\nvar observable$$1 = createObservable;\n// weird trick to keep our typings nicely with our funcs, and still extend the observable function\nObject.keys(observableFactories).forEach(function (name) { return (observable$$1[name] = observableFactories[name]); });\nfunction incorrectlyUsedAsDecorator(methodName) {\n    fail$$1(\n    // process.env.NODE_ENV !== \"production\" &&\n    \"Expected one or two arguments to observable.\" + methodName + \". Did you accidentally try to use observable.\" + methodName + \" as decorator?\");\n}\n\nvar computedDecorator$$1 = createPropDecorator$$1(false, function (instance, propertyName, descriptor, decoratorTarget, decoratorArgs) {\n    var get$$1 = descriptor.get, set$$1 = descriptor.set; // initialValue is the descriptor for get / set props\n    // Optimization: faster on decorator target or instance? Assuming target\n    // Optimization: find out if declaring on instance isn't just faster. (also makes the property descriptor simpler). But, more memory usage..\n    // Forcing instance now, fixes hot reloadig issues on React Native:\n    var options = decoratorArgs[0] || {};\n    asObservableObject$$1(instance).addComputedProp(instance, propertyName, __assign({ get: get$$1,\n        set: set$$1, context: instance }, options));\n});\nvar computedStructDecorator = computedDecorator$$1({ equals: comparer$$1.structural });\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nvar computed$$1 = function computed$$1(arg1, arg2, arg3) {\n    if (typeof arg2 === \"string\") {\n        // @computed\n        return computedDecorator$$1.apply(null, arguments);\n    }\n    if (arg1 !== null && typeof arg1 === \"object\" && arguments.length === 1) {\n        // @computed({ options })\n        return computedDecorator$$1.apply(null, arguments);\n    }\n    // computed(expr, options?)\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(typeof arg1 === \"function\", \"First argument to `computed` should be an expression.\");\n        invariant$$1(arguments.length < 3, \"Computed takes one or two arguments if used as function\");\n    }\n    var opts = typeof arg2 === \"object\" ? arg2 : {};\n    opts.get = arg1;\n    opts.set = typeof arg2 === \"function\" ? arg2 : opts.set;\n    opts.name = opts.name || arg1.name || \"\"; /* for generated name */\n    return new ComputedValue$$1(opts);\n};\ncomputed$$1.struct = computedStructDecorator;\n\nfunction createAction$$1(actionName, fn, ref) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(typeof fn === \"function\", \"`action` can only be invoked on functions\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail$$1(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n    var res = function () {\n        return executeAction$$1(actionName, fn, ref || this, arguments);\n    };\n    res.isMobxAction = true;\n    return res;\n}\nfunction executeAction$$1(actionName, fn, scope, args) {\n    var runInfo = startAction(actionName, fn, scope, args);\n    var shouldSupressReactionError = true;\n    try {\n        var res = fn.apply(scope, args);\n        shouldSupressReactionError = false;\n        return res;\n    }\n    finally {\n        if (shouldSupressReactionError) {\n            globalState$$1.suppressReactionErrors = shouldSupressReactionError;\n            endAction(runInfo);\n            globalState$$1.suppressReactionErrors = false;\n        }\n        else {\n            endAction(runInfo);\n        }\n    }\n}\nfunction startAction(actionName, fn, scope, args) {\n    var notifySpy = isSpyEnabled$$1() && !!actionName;\n    var startTime = 0;\n    if (notifySpy && process.env.NODE_ENV !== \"production\") {\n        startTime = Date.now();\n        var l = (args && args.length) || 0;\n        var flattendArgs = new Array(l);\n        if (l > 0)\n            for (var i = 0; i < l; i++)\n                flattendArgs[i] = args[i];\n        spyReportStart$$1({\n            type: \"action\",\n            name: actionName,\n            object: scope,\n            arguments: flattendArgs\n        });\n    }\n    var prevDerivation = untrackedStart$$1();\n    startBatch$$1();\n    var prevAllowStateChanges = allowStateChangesStart$$1(true);\n    return {\n        prevDerivation: prevDerivation,\n        prevAllowStateChanges: prevAllowStateChanges,\n        notifySpy: notifySpy,\n        startTime: startTime\n    };\n}\nfunction endAction(runInfo) {\n    allowStateChangesEnd$$1(runInfo.prevAllowStateChanges);\n    endBatch$$1();\n    untrackedEnd$$1(runInfo.prevDerivation);\n    if (runInfo.notifySpy && process.env.NODE_ENV !== \"production\")\n        spyReportEnd$$1({ time: Date.now() - runInfo.startTime });\n}\nfunction allowStateChanges$$1(allowStateChanges$$1, func) {\n    var prev = allowStateChangesStart$$1(allowStateChanges$$1);\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        allowStateChangesEnd$$1(prev);\n    }\n    return res;\n}\nfunction allowStateChangesStart$$1(allowStateChanges$$1) {\n    var prev = globalState$$1.allowStateChanges;\n    globalState$$1.allowStateChanges = allowStateChanges$$1;\n    return prev;\n}\nfunction allowStateChangesEnd$$1(prev) {\n    globalState$$1.allowStateChanges = prev;\n}\nfunction allowStateChangesInsideComputed$$1(func) {\n    var prev = globalState$$1.computationDepth;\n    globalState$$1.computationDepth = 0;\n    var res;\n    try {\n        res = func();\n    }\n    finally {\n        globalState$$1.computationDepth = prev;\n    }\n    return res;\n}\n\nvar ObservableValue$$1 = /** @class */ (function (_super) {\n    __extends(ObservableValue$$1, _super);\n    function ObservableValue$$1(value, enhancer, name, notifySpy, equals) {\n        if (name === void 0) { name = \"ObservableValue@\" + getNextId$$1(); }\n        if (notifySpy === void 0) { notifySpy = true; }\n        if (equals === void 0) { equals = comparer$$1.default; }\n        var _this = _super.call(this, name) || this;\n        _this.enhancer = enhancer;\n        _this.name = name;\n        _this.equals = equals;\n        _this.hasUnreportedChange = false;\n        _this.value = enhancer(value, undefined, name);\n        if (notifySpy && isSpyEnabled$$1() && process.env.NODE_ENV !== \"production\") {\n            // only notify spy if this is a stand-alone observable\n            spyReport$$1({ type: \"create\", name: _this.name, newValue: \"\" + _this.value });\n        }\n        return _this;\n    }\n    ObservableValue$$1.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableValue$$1.prototype.set = function (newValue) {\n        var oldValue = this.value;\n        newValue = this.prepareNewValue(newValue);\n        if (newValue !== globalState$$1.UNCHANGED) {\n            var notifySpy = isSpyEnabled$$1();\n            if (notifySpy && process.env.NODE_ENV !== \"production\") {\n                spyReportStart$$1({\n                    type: \"update\",\n                    name: this.name,\n                    newValue: newValue,\n                    oldValue: oldValue\n                });\n            }\n            this.setNewValue(newValue);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n        }\n    };\n    ObservableValue$$1.prototype.prepareNewValue = function (newValue) {\n        checkIfStateModificationsAreAllowed$$1(this);\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                object: this,\n                type: \"update\",\n                newValue: newValue\n            });\n            if (!change)\n                return globalState$$1.UNCHANGED;\n            newValue = change.newValue;\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value, this.name);\n        return this.equals(this.value, newValue) ? globalState$$1.UNCHANGED : newValue;\n    };\n    ObservableValue$$1.prototype.setNewValue = function (newValue) {\n        var oldValue = this.value;\n        this.value = newValue;\n        this.reportChanged();\n        if (hasListeners$$1(this)) {\n            notifyListeners$$1(this, {\n                type: \"update\",\n                object: this,\n                newValue: newValue,\n                oldValue: oldValue\n            });\n        }\n    };\n    ObservableValue$$1.prototype.get = function () {\n        this.reportObserved();\n        return this.dehanceValue(this.value);\n    };\n    ObservableValue$$1.prototype.intercept = function (handler) {\n        return registerInterceptor$$1(this, handler);\n    };\n    ObservableValue$$1.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately)\n            listener({\n                object: this,\n                type: \"update\",\n                newValue: this.value,\n                oldValue: undefined\n            });\n        return registerListener$$1(this, listener);\n    };\n    ObservableValue$$1.prototype.toJSON = function () {\n        return this.get();\n    };\n    ObservableValue$$1.prototype.toString = function () {\n        return this.name + \"[\" + this.value + \"]\";\n    };\n    ObservableValue$$1.prototype.valueOf = function () {\n        return toPrimitive$$1(this.get());\n    };\n    ObservableValue$$1.prototype[Symbol.toPrimitive] = function () {\n        return this.valueOf();\n    };\n    return ObservableValue$$1;\n}(Atom$$1));\nvar isObservableValue$$1 = createInstanceofPredicate$$1(\"ObservableValue\", ObservableValue$$1);\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nvar ComputedValue$$1 = /** @class */ (function () {\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structualComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    function ComputedValue$$1(options) {\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = null; // during tracking it's an array with new observed observers\n        this.isBeingObserved = false;\n        this.isPendingUnobservation = false;\n        this.observers = new Set();\n        this.diffValue = 0;\n        this.runId = 0;\n        this.lastAccessedBy = 0;\n        this.lowestObserverState = IDerivationState.UP_TO_DATE;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId$$1();\n        this.value = new CaughtException$$1(null);\n        this.isComputing = false; // to check for cycles\n        this.isRunningSetter = false;\n        this.isTracing = TraceMode$$1.NONE;\n        if (process.env.NODE_ENV !== \"production\" && !options.get)\n            throw \"[mobx] missing option for computed: get\";\n        this.derivation = options.get;\n        this.name = options.name || \"ComputedValue@\" + getNextId$$1();\n        if (options.set)\n            this.setter = createAction$$1(this.name + \"-setter\", options.set);\n        this.equals =\n            options.equals ||\n                (options.compareStructural || options.struct\n                    ? comparer$$1.structural\n                    : comparer$$1.default);\n        this.scope = options.context;\n        this.requiresReaction = !!options.requiresReaction;\n        this.keepAlive = !!options.keepAlive;\n    }\n    ComputedValue$$1.prototype.onBecomeStale = function () {\n        propagateMaybeChanged$$1(this);\n    };\n    ComputedValue$$1.prototype.onBecomeObserved = function () {\n        if (this.onBecomeObservedListeners) {\n            this.onBecomeObservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    ComputedValue$$1.prototype.onBecomeUnobserved = function () {\n        if (this.onBecomeUnobservedListeners) {\n            this.onBecomeUnobservedListeners.forEach(function (listener) { return listener(); });\n        }\n    };\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    ComputedValue$$1.prototype.get = function () {\n        if (this.isComputing)\n            fail$$1(\"Cycle detected in computation \" + this.name + \": \" + this.derivation);\n        if (globalState$$1.inBatch === 0 && this.observers.size === 0 && !this.keepAlive) {\n            if (shouldCompute$$1(this)) {\n                this.warnAboutUntrackedRead();\n                startBatch$$1(); // See perf test 'computed memoization'\n                this.value = this.computeValue(false);\n                endBatch$$1();\n            }\n        }\n        else {\n            reportObserved$$1(this);\n            if (shouldCompute$$1(this))\n                if (this.trackAndCompute())\n                    propagateChangeConfirmed$$1(this);\n        }\n        var result = this.value;\n        if (isCaughtException$$1(result))\n            throw result.cause;\n        return result;\n    };\n    ComputedValue$$1.prototype.peek = function () {\n        var res = this.computeValue(false);\n        if (isCaughtException$$1(res))\n            throw res.cause;\n        return res;\n    };\n    ComputedValue$$1.prototype.set = function (value) {\n        if (this.setter) {\n            invariant$$1(!this.isRunningSetter, \"The setter of computed value '\" + this.name + \"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?\");\n            this.isRunningSetter = true;\n            try {\n                this.setter.call(this.scope, value);\n            }\n            finally {\n                this.isRunningSetter = false;\n            }\n        }\n        else\n            invariant$$1(false, process.env.NODE_ENV !== \"production\" &&\n                \"[ComputedValue '\" + this.name + \"'] It is not possible to assign a new value to a computed value.\");\n    };\n    ComputedValue$$1.prototype.trackAndCompute = function () {\n        if (isSpyEnabled$$1() && process.env.NODE_ENV !== \"production\") {\n            spyReport$$1({\n                object: this.scope,\n                type: \"compute\",\n                name: this.name\n            });\n        }\n        var oldValue = this.value;\n        var wasSuspended = \n        /* see #1208 */ this.dependenciesState === IDerivationState.NOT_TRACKING;\n        var newValue = this.computeValue(true);\n        var changed = wasSuspended ||\n            isCaughtException$$1(oldValue) ||\n            isCaughtException$$1(newValue) ||\n            !this.equals(oldValue, newValue);\n        if (changed) {\n            this.value = newValue;\n        }\n        return changed;\n    };\n    ComputedValue$$1.prototype.computeValue = function (track) {\n        this.isComputing = true;\n        globalState$$1.computationDepth++;\n        var res;\n        if (track) {\n            res = trackDerivedFunction$$1(this, this.derivation, this.scope);\n        }\n        else {\n            if (globalState$$1.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope);\n            }\n            else {\n                try {\n                    res = this.derivation.call(this.scope);\n                }\n                catch (e) {\n                    res = new CaughtException$$1(e);\n                }\n            }\n        }\n        globalState$$1.computationDepth--;\n        this.isComputing = false;\n        return res;\n    };\n    ComputedValue$$1.prototype.suspend = function () {\n        if (!this.keepAlive) {\n            clearObserving$$1(this);\n            this.value = undefined; // don't hold on to computed value!\n        }\n    };\n    ComputedValue$$1.prototype.observe = function (listener, fireImmediately) {\n        var _this = this;\n        var firstTime = true;\n        var prevValue = undefined;\n        return autorun$$1(function () {\n            var newValue = _this.get();\n            if (!firstTime || fireImmediately) {\n                var prevU = untrackedStart$$1();\n                listener({\n                    type: \"update\",\n                    object: _this,\n                    newValue: newValue,\n                    oldValue: prevValue\n                });\n                untrackedEnd$$1(prevU);\n            }\n            firstTime = false;\n            prevValue = newValue;\n        });\n    };\n    ComputedValue$$1.prototype.warnAboutUntrackedRead = function () {\n        if (process.env.NODE_ENV === \"production\")\n            return;\n        if (this.requiresReaction === true) {\n            fail$$1(\"[mobx] Computed value \" + this.name + \" is read outside a reactive context\");\n        }\n        if (this.isTracing !== TraceMode$$1.NONE) {\n            console.log(\"[mobx.trace] '\" + this.name + \"' is being read outside a reactive context. Doing a full recompute\");\n        }\n        if (globalState$$1.computedRequiresReaction) {\n            console.warn(\"[mobx] Computed value \" + this.name + \" is being read outside a reactive context. Doing a full recompute\");\n        }\n    };\n    ComputedValue$$1.prototype.toJSON = function () {\n        return this.get();\n    };\n    ComputedValue$$1.prototype.toString = function () {\n        return this.name + \"[\" + this.derivation.toString() + \"]\";\n    };\n    ComputedValue$$1.prototype.valueOf = function () {\n        return toPrimitive$$1(this.get());\n    };\n    ComputedValue$$1.prototype[Symbol.toPrimitive] = function () {\n        return this.valueOf();\n    };\n    return ComputedValue$$1;\n}());\nvar isComputedValue$$1 = createInstanceofPredicate$$1(\"ComputedValue\", ComputedValue$$1);\n\nvar IDerivationState;\n(function (IDerivationState$$1) {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    IDerivationState$$1[IDerivationState$$1[\"NOT_TRACKING\"] = -1] = \"NOT_TRACKING\";\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    IDerivationState$$1[IDerivationState$$1[\"UP_TO_DATE\"] = 0] = \"UP_TO_DATE\";\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    IDerivationState$$1[IDerivationState$$1[\"POSSIBLY_STALE\"] = 1] = \"POSSIBLY_STALE\";\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    IDerivationState$$1[IDerivationState$$1[\"STALE\"] = 2] = \"STALE\";\n})(IDerivationState || (IDerivationState = {}));\nvar TraceMode$$1;\n(function (TraceMode$$1) {\n    TraceMode$$1[TraceMode$$1[\"NONE\"] = 0] = \"NONE\";\n    TraceMode$$1[TraceMode$$1[\"LOG\"] = 1] = \"LOG\";\n    TraceMode$$1[TraceMode$$1[\"BREAK\"] = 2] = \"BREAK\";\n})(TraceMode$$1 || (TraceMode$$1 = {}));\nvar CaughtException$$1 = /** @class */ (function () {\n    function CaughtException$$1(cause) {\n        this.cause = cause;\n        // Empty\n    }\n    return CaughtException$$1;\n}());\nfunction isCaughtException$$1(e) {\n    return e instanceof CaughtException$$1;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nfunction shouldCompute$$1(derivation) {\n    switch (derivation.dependenciesState) {\n        case IDerivationState.UP_TO_DATE:\n            return false;\n        case IDerivationState.NOT_TRACKING:\n        case IDerivationState.STALE:\n            return true;\n        case IDerivationState.POSSIBLY_STALE: {\n            var prevUntracked = untrackedStart$$1(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            var obs = derivation.observing, l = obs.length;\n            for (var i = 0; i < l; i++) {\n                var obj = obs[i];\n                if (isComputedValue$$1(obj)) {\n                    if (globalState$$1.disableErrorBoundaries) {\n                        obj.get();\n                    }\n                    else {\n                        try {\n                            obj.get();\n                        }\n                        catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd$$1(prevUntracked);\n                            return true;\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if (derivation.dependenciesState === IDerivationState.STALE) {\n                        untrackedEnd$$1(prevUntracked);\n                        return true;\n                    }\n                }\n            }\n            changeDependenciesStateTo0$$1(derivation);\n            untrackedEnd$$1(prevUntracked);\n            return false;\n        }\n    }\n}\n// function invariantShouldCompute(derivation: IDerivation) {\n//     const newDepState = (derivation as any).dependenciesState\n//     if (\n//         process.env.NODE_ENV === \"production\" &&\n//         (newDepState === IDerivationState.POSSIBLY_STALE ||\n//             newDepState === IDerivationState.NOT_TRACKING)\n//     )\n//         fail(\"Illegal dependency state\")\n// }\nfunction isComputingDerivation$$1() {\n    return globalState$$1.trackingDerivation !== null; // filter out actions inside computations\n}\nfunction checkIfStateModificationsAreAllowed$$1(atom) {\n    var hasObservers$$1 = atom.observers.size > 0;\n    // Should never be possible to change an observed observable from inside computed, see #798\n    if (globalState$$1.computationDepth > 0 && hasObservers$$1)\n        fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"Computed values are not allowed to cause side effects by changing observables that are already being observed. Tried to modify: \" + atom.name);\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (!globalState$$1.allowStateChanges && (hasObservers$$1 || globalState$$1.enforceActions === \"strict\"))\n        fail$$1(process.env.NODE_ENV !== \"production\" &&\n            (globalState$$1.enforceActions\n                ? \"Since strict-mode is enabled, changing observed observable values outside actions is not allowed. Please wrap the code in an `action` if this change is intended. Tried to modify: \"\n                : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, the render function of a React component? Tried to modify: \") +\n                atom.name);\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nfunction trackDerivedFunction$$1(derivation, f, context) {\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0$$1(derivation);\n    derivation.newObserving = new Array(derivation.observing.length + 100);\n    derivation.unboundDepsCount = 0;\n    derivation.runId = ++globalState$$1.runId;\n    var prevTracking = globalState$$1.trackingDerivation;\n    globalState$$1.trackingDerivation = derivation;\n    var result;\n    if (globalState$$1.disableErrorBoundaries === true) {\n        result = f.call(context);\n    }\n    else {\n        try {\n            result = f.call(context);\n        }\n        catch (e) {\n            result = new CaughtException$$1(e);\n        }\n    }\n    globalState$$1.trackingDerivation = prevTracking;\n    bindDependencies(derivation);\n    return result;\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    var prevObserving = derivation.observing;\n    var observing = (derivation.observing = derivation.newObserving);\n    var lowestNewObservingDerivationState = IDerivationState.UP_TO_DATE;\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    var i0 = 0, l = derivation.unboundDepsCount;\n    for (var i = 0; i < l; i++) {\n        var dep = observing[i];\n        if (dep.diffValue === 0) {\n            dep.diffValue = 1;\n            if (i0 !== i)\n                observing[i0] = dep;\n            i0++;\n        }\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if (dep.dependenciesState > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = dep.dependenciesState;\n        }\n    }\n    observing.length = i0;\n    derivation.newObserving = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length;\n    while (l--) {\n        var dep = prevObserving[l];\n        if (dep.diffValue === 0) {\n            removeObserver$$1(dep, derivation);\n        }\n        dep.diffValue = 0;\n    }\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        var dep = observing[i0];\n        if (dep.diffValue === 1) {\n            dep.diffValue = 0;\n            addObserver$$1(dep, derivation);\n        }\n    }\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState.UP_TO_DATE) {\n        derivation.dependenciesState = lowestNewObservingDerivationState;\n        derivation.onBecomeStale();\n    }\n}\nfunction clearObserving$$1(derivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    var obs = derivation.observing;\n    derivation.observing = [];\n    var i = obs.length;\n    while (i--)\n        removeObserver$$1(obs[i], derivation);\n    derivation.dependenciesState = IDerivationState.NOT_TRACKING;\n}\nfunction untracked$$1(action$$1) {\n    var prev = untrackedStart$$1();\n    try {\n        return action$$1();\n    }\n    finally {\n        untrackedEnd$$1(prev);\n    }\n}\nfunction untrackedStart$$1() {\n    var prev = globalState$$1.trackingDerivation;\n    globalState$$1.trackingDerivation = null;\n    return prev;\n}\nfunction untrackedEnd$$1(prev) {\n    globalState$$1.trackingDerivation = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nfunction changeDependenciesStateTo0$$1(derivation) {\n    if (derivation.dependenciesState === IDerivationState.UP_TO_DATE)\n        return;\n    derivation.dependenciesState = IDerivationState.UP_TO_DATE;\n    var obs = derivation.observing;\n    var i = obs.length;\n    while (i--)\n        obs[i].lowestObserverState = IDerivationState.UP_TO_DATE;\n}\n\n/**\n * These values will persist if global state is reset\n */\nvar persistentKeys = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\"\n];\nvar MobXGlobals$$1 = /** @class */ (function () {\n    function MobXGlobals$$1() {\n        /**\n         * MobXGlobals version.\n         * MobX compatiblity with other versions loaded in memory as long as this version matches.\n         * It indicates that the global state still stores similar information\n         *\n         * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n         * internal state storage of MobX, and can be the same across many different package versions\n         */\n        this.version = 5;\n        /**\n         * globally unique token to signal unchanged\n         */\n        this.UNCHANGED = {};\n        /**\n         * Currently running derivation\n         */\n        this.trackingDerivation = null;\n        /**\n         * Are we running a computation currently? (not a reaction)\n         */\n        this.computationDepth = 0;\n        /**\n         * Each time a derivation is tracked, it is assigned a unique run-id\n         */\n        this.runId = 0;\n        /**\n         * 'guid' for general purpose. Will be persisted amongst resets.\n         */\n        this.mobxGuid = 0;\n        /**\n         * Are we in a batch block? (and how many of them)\n         */\n        this.inBatch = 0;\n        /**\n         * Observables that don't have observers anymore, and are about to be\n         * suspended, unless somebody else accesses it in the same batch\n         *\n         * @type {IObservable[]}\n         */\n        this.pendingUnobservations = [];\n        /**\n         * List of scheduled, not yet executed, reactions.\n         */\n        this.pendingReactions = [];\n        /**\n         * Are we currently processing reactions?\n         */\n        this.isRunningReactions = false;\n        /**\n         * Is it allowed to change observables at this point?\n         * In general, MobX doesn't allow that when running computations and React.render.\n         * To ensure that those functions stay pure.\n         */\n        this.allowStateChanges = true;\n        /**\n         * If strict mode is enabled, state changes are by default not allowed\n         */\n        this.enforceActions = false;\n        /**\n         * Spy callbacks\n         */\n        this.spyListeners = [];\n        /**\n         * Globally attached error handlers that react specifically to errors in reactions\n         */\n        this.globalReactionErrorHandlers = [];\n        /**\n         * Warn if computed values are accessed outside a reactive context\n         */\n        this.computedRequiresReaction = false;\n        /*\n         * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n         * the stack when an exception occurs while debugging.\n         */\n        this.disableErrorBoundaries = false;\n        /*\n         * If true, we are already handling an exception in an action. Any errors in reactions should be supressed, as\n         * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n         */\n        this.suppressReactionErrors = false;\n    }\n    return MobXGlobals$$1;\n}());\nvar canMergeGlobalState = true;\nvar isolateCalled = false;\nvar globalState$$1 = (function () {\n    var global = getGlobal$$1();\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals)\n        canMergeGlobalState = false;\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals$$1().version)\n        canMergeGlobalState = false;\n    if (!canMergeGlobalState) {\n        setTimeout(function () {\n            if (!isolateCalled) {\n                fail$$1(\"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\");\n            }\n        }, 1);\n        return new MobXGlobals$$1();\n    }\n    else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1;\n        if (!global.__mobxGlobals.UNCHANGED)\n            global.__mobxGlobals.UNCHANGED = {}; // make merge backward compatible\n        return global.__mobxGlobals;\n    }\n    else {\n        global.__mobxInstanceCount = 1;\n        return (global.__mobxGlobals = new MobXGlobals$$1());\n    }\n})();\nfunction isolateGlobalState$$1() {\n    if (globalState$$1.pendingReactions.length ||\n        globalState$$1.inBatch ||\n        globalState$$1.isRunningReactions)\n        fail$$1(\"isolateGlobalState should be called before MobX is running any reactions\");\n    isolateCalled = true;\n    if (canMergeGlobalState) {\n        if (--getGlobal$$1().__mobxInstanceCount === 0)\n            getGlobal$$1().__mobxGlobals = undefined;\n        globalState$$1 = new MobXGlobals$$1();\n    }\n}\nfunction getGlobalState$$1() {\n    return globalState$$1;\n}\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nfunction resetGlobalState$$1() {\n    var defaultGlobals = new MobXGlobals$$1();\n    for (var key in defaultGlobals)\n        if (persistentKeys.indexOf(key) === -1)\n            globalState$$1[key] = defaultGlobals[key];\n    globalState$$1.allowStateChanges = !globalState$$1.enforceActions;\n}\nfunction getGlobal$$1() {\n    return typeof window !== \"undefined\" ? window : global;\n}\n\nfunction hasObservers$$1(observable$$1) {\n    return observable$$1.observers && observable$$1.observers.size > 0;\n}\nfunction getObservers$$1(observable$$1) {\n    return observable$$1.observers;\n}\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nfunction addObserver$$1(observable$$1, node) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n    observable$$1.observers.add(node);\n    if (observable$$1.lowestObserverState > node.dependenciesState)\n        observable$$1.lowestObserverState = node.dependenciesState;\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\nfunction removeObserver$$1(observable$$1, node) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable$$1.observers.delete(node);\n    if (observable$$1.observers.size === 0) {\n        // deleting last observer\n        queueForUnobservation$$1(observable$$1);\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\nfunction queueForUnobservation$$1(observable$$1) {\n    if (observable$$1.isPendingUnobservation === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable$$1.isPendingUnobservation = true;\n        globalState$$1.pendingUnobservations.push(observable$$1);\n    }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nfunction startBatch$$1() {\n    globalState$$1.inBatch++;\n}\nfunction endBatch$$1() {\n    if (--globalState$$1.inBatch === 0) {\n        runReactions$$1();\n        // the batch is actually about to finish, all unobserving should happen here.\n        var list = globalState$$1.pendingUnobservations;\n        for (var i = 0; i < list.length; i++) {\n            var observable$$1 = list[i];\n            observable$$1.isPendingUnobservation = false;\n            if (observable$$1.observers.size === 0) {\n                if (observable$$1.isBeingObserved) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable$$1.isBeingObserved = false;\n                    observable$$1.onBecomeUnobserved();\n                }\n                if (observable$$1 instanceof ComputedValue$$1) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable$$1.suspend();\n                }\n            }\n        }\n        globalState$$1.pendingUnobservations = [];\n    }\n}\nfunction reportObserved$$1(observable$$1) {\n    var derivation = globalState$$1.trackingDerivation;\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId !== observable$$1.lastAccessedBy) {\n            observable$$1.lastAccessedBy = derivation.runId;\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving[derivation.unboundDepsCount++] = observable$$1;\n            if (!observable$$1.isBeingObserved) {\n                observable$$1.isBeingObserved = true;\n                observable$$1.onBecomeObserved();\n            }\n        }\n        return true;\n    }\n    else if (observable$$1.observers.size === 0 && globalState$$1.inBatch > 0) {\n        queueForUnobservation$$1(observable$$1);\n    }\n    return false;\n}\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\nfunction propagateChanged$$1(observable$$1) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable$$1.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable$$1.lowestObserverState = IDerivationState.STALE;\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable$$1.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            if (d.isTracing !== TraceMode$$1.NONE) {\n                logTraceInfo(d, observable$$1);\n            }\n            d.onBecomeStale();\n        }\n        d.dependenciesState = IDerivationState.STALE;\n    });\n    // invariantLOS(observable, \"changed end\");\n}\n// Called by ComputedValue when it recalculate and its value changed\nfunction propagateChangeConfirmed$$1(observable$$1) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable$$1.lowestObserverState === IDerivationState.STALE)\n        return;\n    observable$$1.lowestObserverState = IDerivationState.STALE;\n    observable$$1.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.POSSIBLY_STALE)\n            d.dependenciesState = IDerivationState.STALE;\n        else if (d.dependenciesState === IDerivationState.UP_TO_DATE // this happens during computing of `d`, just keep lowestObserverState up to date.\n        )\n            observable$$1.lowestObserverState = IDerivationState.UP_TO_DATE;\n    });\n    // invariantLOS(observable, \"confirmed end\");\n}\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nfunction propagateMaybeChanged$$1(observable$$1) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable$$1.lowestObserverState !== IDerivationState.UP_TO_DATE)\n        return;\n    observable$$1.lowestObserverState = IDerivationState.POSSIBLY_STALE;\n    observable$$1.observers.forEach(function (d) {\n        if (d.dependenciesState === IDerivationState.UP_TO_DATE) {\n            d.dependenciesState = IDerivationState.POSSIBLY_STALE;\n            if (d.isTracing !== TraceMode$$1.NONE) {\n                logTraceInfo(d, observable$$1);\n            }\n            d.onBecomeStale();\n        }\n    });\n    // invariantLOS(observable, \"maybe end\");\n}\nfunction logTraceInfo(derivation, observable$$1) {\n    console.log(\"[mobx.trace] '\" + derivation.name + \"' is invalidated due to a change in: '\" + observable$$1.name + \"'\");\n    if (derivation.isTracing === TraceMode$$1.BREAK) {\n        var lines = [];\n        printDepTree(getDependencyTree$$1(derivation), lines, 1);\n        // prettier-ignore\n        new Function(\"debugger;\\n/*\\nTracing '\" + derivation.name + \"'\\n\\nYou are entering this break point because derivation '\" + derivation.name + \"' is being traced and '\" + observable$$1.name + \"' is now forcing it to update.\\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\\n\\n\" + (derivation instanceof ComputedValue$$1 ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\") + \"\\n\\nThe dependencies for this derivation are:\\n\\n\" + lines.join(\"\\n\") + \"\\n*/\\n    \")();\n    }\n}\nfunction printDepTree(tree, lines, depth) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\");\n        return;\n    }\n    lines.push(\"\" + new Array(depth).join(\"\\t\") + tree.name); // MWE: not the fastest, but the easiest way :)\n    if (tree.dependencies)\n        tree.dependencies.forEach(function (child) { return printDepTree(child, lines, depth + 1); });\n}\n\nvar Reaction$$1 = /** @class */ (function () {\n    function Reaction$$1(name, onInvalidate, errorHandler) {\n        if (name === void 0) { name = \"Reaction@\" + getNextId$$1(); }\n        this.name = name;\n        this.onInvalidate = onInvalidate;\n        this.errorHandler = errorHandler;\n        this.observing = []; // nodes we are looking at. Our value depends on these nodes\n        this.newObserving = [];\n        this.dependenciesState = IDerivationState.NOT_TRACKING;\n        this.diffValue = 0;\n        this.runId = 0;\n        this.unboundDepsCount = 0;\n        this.__mapid = \"#\" + getNextId$$1();\n        this.isDisposed = false;\n        this._isScheduled = false;\n        this._isTrackPending = false;\n        this._isRunning = false;\n        this.isTracing = TraceMode$$1.NONE;\n    }\n    Reaction$$1.prototype.onBecomeStale = function () {\n        this.schedule();\n    };\n    Reaction$$1.prototype.schedule = function () {\n        if (!this._isScheduled) {\n            this._isScheduled = true;\n            globalState$$1.pendingReactions.push(this);\n            runReactions$$1();\n        }\n    };\n    Reaction$$1.prototype.isScheduled = function () {\n        return this._isScheduled;\n    };\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    Reaction$$1.prototype.runReaction = function () {\n        if (!this.isDisposed) {\n            startBatch$$1();\n            this._isScheduled = false;\n            if (shouldCompute$$1(this)) {\n                this._isTrackPending = true;\n                try {\n                    this.onInvalidate();\n                    if (this._isTrackPending &&\n                        isSpyEnabled$$1() &&\n                        process.env.NODE_ENV !== \"production\") {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport$$1({\n                            name: this.name,\n                            type: \"scheduled-reaction\"\n                        });\n                    }\n                }\n                catch (e) {\n                    this.reportExceptionInDerivation(e);\n                }\n            }\n            endBatch$$1();\n        }\n    };\n    Reaction$$1.prototype.track = function (fn) {\n        if (this.isDisposed) {\n            fail$$1(\"Reaction already disposed\");\n        }\n        startBatch$$1();\n        var notify = isSpyEnabled$$1();\n        var startTime;\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            startTime = Date.now();\n            spyReportStart$$1({\n                name: this.name,\n                type: \"reaction\"\n            });\n        }\n        this._isRunning = true;\n        var result = trackDerivedFunction$$1(this, fn, undefined);\n        this._isRunning = false;\n        this._isTrackPending = false;\n        if (this.isDisposed) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving$$1(this);\n        }\n        if (isCaughtException$$1(result))\n            this.reportExceptionInDerivation(result.cause);\n        if (notify && process.env.NODE_ENV !== \"production\") {\n            spyReportEnd$$1({\n                time: Date.now() - startTime\n            });\n        }\n        endBatch$$1();\n    };\n    Reaction$$1.prototype.reportExceptionInDerivation = function (error) {\n        var _this = this;\n        if (this.errorHandler) {\n            this.errorHandler(error, this);\n            return;\n        }\n        if (globalState$$1.disableErrorBoundaries)\n            throw error;\n        var message = \"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '\" + this + \"'\";\n        if (globalState$$1.suppressReactionErrors) {\n            console.warn(\"[mobx] (error in reaction '\" + this.name + \"' suppressed, fix error of causing action below)\"); // prettier-ignore\n        }\n        else {\n            console.error(message, error);\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        }\n        if (isSpyEnabled$$1()) {\n            spyReport$$1({\n                type: \"error\",\n                name: this.name,\n                message: message,\n                error: \"\" + error\n            });\n        }\n        globalState$$1.globalReactionErrorHandlers.forEach(function (f) { return f(error, _this); });\n    };\n    Reaction$$1.prototype.dispose = function () {\n        if (!this.isDisposed) {\n            this.isDisposed = true;\n            if (!this._isRunning) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch$$1();\n                clearObserving$$1(this);\n                endBatch$$1();\n            }\n        }\n    };\n    Reaction$$1.prototype.getDisposer = function () {\n        var r = this.dispose.bind(this);\n        r[$mobx$$1] = this;\n        return r;\n    };\n    Reaction$$1.prototype.toString = function () {\n        return \"Reaction[\" + this.name + \"]\";\n    };\n    Reaction$$1.prototype.trace = function (enterBreakPoint) {\n        if (enterBreakPoint === void 0) { enterBreakPoint = false; }\n        trace$$1(this, enterBreakPoint);\n    };\n    return Reaction$$1;\n}());\nfunction onReactionError$$1(handler) {\n    globalState$$1.globalReactionErrorHandlers.push(handler);\n    return function () {\n        var idx = globalState$$1.globalReactionErrorHandlers.indexOf(handler);\n        if (idx >= 0)\n            globalState$$1.globalReactionErrorHandlers.splice(idx, 1);\n    };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nvar MAX_REACTION_ITERATIONS = 100;\nvar reactionScheduler = function (f) { return f(); };\nfunction runReactions$$1() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState$$1.inBatch > 0 || globalState$$1.isRunningReactions)\n        return;\n    reactionScheduler(runReactionsHelper);\n}\nfunction runReactionsHelper() {\n    globalState$$1.isRunningReactions = true;\n    var allReactions = globalState$$1.pendingReactions;\n    var iterations = 0;\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\"Reaction doesn't converge to a stable state after \" + MAX_REACTION_ITERATIONS + \" iterations.\" +\n                (\" Probably there is a cycle in the reactive function: \" + allReactions[0]));\n            allReactions.splice(0); // clear reactions\n        }\n        var remainingReactions = allReactions.splice(0);\n        for (var i = 0, l = remainingReactions.length; i < l; i++)\n            remainingReactions[i].runReaction();\n    }\n    globalState$$1.isRunningReactions = false;\n}\nvar isReaction$$1 = createInstanceofPredicate$$1(\"Reaction\", Reaction$$1);\nfunction setReactionScheduler$$1(fn) {\n    var baseScheduler = reactionScheduler;\n    reactionScheduler = function (f) { return fn(function () { return baseScheduler(f); }); };\n}\n\nfunction isSpyEnabled$$1() {\n    return process.env.NODE_ENV !== \"production\" && !!globalState$$1.spyListeners.length;\n}\nfunction spyReport$$1(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return; // dead code elimination can do the rest\n    if (!globalState$$1.spyListeners.length)\n        return;\n    var listeners = globalState$$1.spyListeners;\n    for (var i = 0, l = listeners.length; i < l; i++)\n        listeners[i](event);\n}\nfunction spyReportStart$$1(event) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    var change = __assign({}, event, { spyReportStart: true });\n    spyReport$$1(change);\n}\nvar END_EVENT = { spyReportEnd: true };\nfunction spyReportEnd$$1(change) {\n    if (process.env.NODE_ENV === \"production\")\n        return;\n    if (change)\n        spyReport$$1(__assign({}, change, { spyReportEnd: true }));\n    else\n        spyReport$$1(END_EVENT);\n}\nfunction spy$$1(listener) {\n    if (process.env.NODE_ENV === \"production\") {\n        console.warn(\"[mobx.spy] Is a no-op in production builds\");\n        return function () { };\n    }\n    else {\n        globalState$$1.spyListeners.push(listener);\n        return once$$1(function () {\n            globalState$$1.spyListeners = globalState$$1.spyListeners.filter(function (l) { return l !== listener; });\n        });\n    }\n}\n\nfunction dontReassignFields() {\n    fail$$1(process.env.NODE_ENV !== \"production\" && \"@action fields are not reassignable\");\n}\nfunction namedActionDecorator$$1(name) {\n    return function (target, prop, descriptor) {\n        if (descriptor) {\n            if (process.env.NODE_ENV !== \"production\" && descriptor.get !== undefined) {\n                return fail$$1(\"@action cannot be used with getters\");\n            }\n            // babel / typescript\n            // @action method() { }\n            if (descriptor.value) {\n                // typescript\n                return {\n                    value: createAction$$1(name, descriptor.value),\n                    enumerable: false,\n                    configurable: true,\n                    writable: true // for typescript, this must be writable, otherwise it cannot inherit :/ (see inheritable actions test)\n                };\n            }\n            // babel only: @action method = () => {}\n            var initializer_1 = descriptor.initializer;\n            return {\n                enumerable: false,\n                configurable: true,\n                writable: true,\n                initializer: function () {\n                    // N.B: we can't immediately invoke initializer; this would be wrong\n                    return createAction$$1(name, initializer_1.call(this));\n                }\n            };\n        }\n        // bound instance methods\n        return actionFieldDecorator$$1(name).apply(this, arguments);\n    };\n}\nfunction actionFieldDecorator$$1(name) {\n    // Simple property that writes on first invocation to the current instance\n    return function (target, prop, descriptor) {\n        Object.defineProperty(target, prop, {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                return undefined;\n            },\n            set: function (value) {\n                addHiddenProp$$1(this, prop, action$$1(name, value));\n            }\n        });\n    };\n}\nfunction boundActionDecorator$$1(target, propertyName, descriptor, applyToInstance) {\n    if (applyToInstance === true) {\n        defineBoundAction$$1(target, propertyName, descriptor.value);\n        return null;\n    }\n    if (descriptor) {\n        // if (descriptor.value)\n        // Typescript / Babel: @action.bound method() { }\n        // also: babel @action.bound method = () => {}\n        return {\n            configurable: true,\n            enumerable: false,\n            get: function () {\n                defineBoundAction$$1(this, propertyName, descriptor.value || descriptor.initializer.call(this));\n                return this[propertyName];\n            },\n            set: dontReassignFields\n        };\n    }\n    // field decorator Typescript @action.bound method = () => {}\n    return {\n        enumerable: false,\n        configurable: true,\n        set: function (v) {\n            defineBoundAction$$1(this, propertyName, v);\n        },\n        get: function () {\n            return undefined;\n        }\n    };\n}\n\nvar action$$1 = function action$$1(arg1, arg2, arg3, arg4) {\n    // action(fn() {})\n    if (arguments.length === 1 && typeof arg1 === \"function\")\n        return createAction$$1(arg1.name || \"<unnamed action>\", arg1);\n    // action(\"name\", fn() {})\n    if (arguments.length === 2 && typeof arg2 === \"function\")\n        return createAction$$1(arg1, arg2);\n    // @action(\"name\") fn() {}\n    if (arguments.length === 1 && typeof arg1 === \"string\")\n        return namedActionDecorator$$1(arg1);\n    // @action fn() {}\n    if (arg4 === true) {\n        // apply to instance immediately\n        addHiddenProp$$1(arg1, arg2, createAction$$1(arg1.name || arg2, arg3.value, this));\n    }\n    else {\n        return namedActionDecorator$$1(arg2).apply(null, arguments);\n    }\n};\naction$$1.bound = boundActionDecorator$$1;\nfunction runInAction$$1(arg1, arg2) {\n    var actionName = typeof arg1 === \"string\" ? arg1 : arg1.name || \"<unnamed action>\";\n    var fn = typeof arg1 === \"function\" ? arg1 : arg2;\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(typeof fn === \"function\" && fn.length === 0, \"`runInAction` expects a function without arguments\");\n        if (typeof actionName !== \"string\" || !actionName)\n            fail$$1(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n    return executeAction$$1(actionName, fn, this, undefined);\n}\nfunction isAction$$1(thing) {\n    return typeof thing === \"function\" && thing.isMobxAction === true;\n}\nfunction defineBoundAction$$1(target, propertyName, fn) {\n    addHiddenProp$$1(target, propertyName, createAction$$1(propertyName, fn.bind(target)));\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nfunction autorun$$1(view, opts) {\n    if (opts === void 0) { opts = EMPTY_OBJECT$$1; }\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(typeof view === \"function\", \"Autorun expects a function as first argument\");\n        invariant$$1(isAction$$1(view) === false, \"Autorun does not accept actions since actions are untrackable\");\n    }\n    var name = (opts && opts.name) || view.name || \"Autorun@\" + getNextId$$1();\n    var runSync = !opts.scheduler && !opts.delay;\n    var reaction$$1;\n    if (runSync) {\n        // normal autorun\n        reaction$$1 = new Reaction$$1(name, function () {\n            this.track(reactionRunner);\n        }, opts.onError);\n    }\n    else {\n        var scheduler_1 = createSchedulerFromOptions(opts);\n        // debounced autorun\n        var isScheduled_1 = false;\n        reaction$$1 = new Reaction$$1(name, function () {\n            if (!isScheduled_1) {\n                isScheduled_1 = true;\n                scheduler_1(function () {\n                    isScheduled_1 = false;\n                    if (!reaction$$1.isDisposed)\n                        reaction$$1.track(reactionRunner);\n                });\n            }\n        }, opts.onError);\n    }\n    function reactionRunner() {\n        view(reaction$$1);\n    }\n    reaction$$1.schedule();\n    return reaction$$1.getDisposer();\n}\nvar run = function (f) { return f(); };\nfunction createSchedulerFromOptions(opts) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n            ? function (f) { return setTimeout(f, opts.delay); }\n            : run;\n}\nfunction reaction$$1(expression, effect, opts) {\n    if (opts === void 0) { opts = EMPTY_OBJECT$$1; }\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(typeof expression === \"function\", \"First argument to reaction should be a function\");\n        invariant$$1(typeof opts === \"object\", \"Third argument of reactions should be an object\");\n    }\n    var name = opts.name || \"Reaction@\" + getNextId$$1();\n    var effectAction = action$$1(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\n    var runSync = !opts.scheduler && !opts.delay;\n    var scheduler = createSchedulerFromOptions(opts);\n    var firstTime = true;\n    var isScheduled = false;\n    var value;\n    var equals = opts.compareStructural\n        ? comparer$$1.structural\n        : opts.equals || comparer$$1.default;\n    var r = new Reaction$$1(name, function () {\n        if (firstTime || runSync) {\n            reactionRunner();\n        }\n        else if (!isScheduled) {\n            isScheduled = true;\n            scheduler(reactionRunner);\n        }\n    }, opts.onError);\n    function reactionRunner() {\n        isScheduled = false; // Q: move into reaction runner?\n        if (r.isDisposed)\n            return;\n        var changed = false;\n        r.track(function () {\n            var nextValue = expression(r);\n            changed = firstTime || !equals(value, nextValue);\n            value = nextValue;\n        });\n        if (firstTime && opts.fireImmediately)\n            effectAction(value, r);\n        if (!firstTime && changed === true)\n            effectAction(value, r);\n        if (firstTime)\n            firstTime = false;\n    }\n    r.schedule();\n    return r.getDisposer();\n}\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments);\n        }\n        catch (e) {\n            errorHandler.call(this, e);\n        }\n    };\n}\n\nfunction onBecomeObserved$$1(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeObserved\", thing, arg2, arg3);\n}\nfunction onBecomeUnobserved$$1(thing, arg2, arg3) {\n    return interceptHook(\"onBecomeUnobserved\", thing, arg2, arg3);\n}\nfunction interceptHook(hook, thing, arg2, arg3) {\n    var atom = typeof arg2 === \"string\" ? getAtom$$1(thing, arg2) : getAtom$$1(thing);\n    var cb = typeof arg2 === \"string\" ? arg3 : arg2;\n    var listenersKey = hook + \"Listeners\";\n    if (atom[listenersKey]) {\n        atom[listenersKey].add(cb);\n    }\n    else {\n        atom[listenersKey] = new Set([cb]);\n    }\n    var orig = atom[hook];\n    if (typeof orig !== \"function\")\n        return fail$$1(process.env.NODE_ENV !== \"production\" && \"Not an atom that can be (un)observed\");\n    return function () {\n        var hookListeners = atom[listenersKey];\n        if (hookListeners) {\n            hookListeners.delete(cb);\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey];\n            }\n        }\n    };\n}\n\nfunction configure$$1(options) {\n    var enforceActions = options.enforceActions, computedRequiresReaction = options.computedRequiresReaction, disableErrorBoundaries = options.disableErrorBoundaries, reactionScheduler = options.reactionScheduler;\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState$$1();\n    }\n    if (enforceActions !== undefined) {\n        if (typeof enforceActions === \"boolean\" || enforceActions === \"strict\")\n            deprecated$$1(\"Deprecated value for 'enforceActions', use 'false' => '\\\"never\\\"', 'true' => '\\\"observed\\\"', '\\\"strict\\\"' => \\\"'always'\\\" instead\");\n        var ea = void 0;\n        switch (enforceActions) {\n            case true:\n            case \"observed\":\n                ea = true;\n                break;\n            case false:\n            case \"never\":\n                ea = false;\n                break;\n            case \"strict\":\n            case \"always\":\n                ea = \"strict\";\n                break;\n            default:\n                fail$$1(\"Invalid value for 'enforceActions': '\" + enforceActions + \"', expected 'never', 'always' or 'observed'\");\n        }\n        globalState$$1.enforceActions = ea;\n        globalState$$1.allowStateChanges = ea === true || ea === \"strict\" ? false : true;\n    }\n    if (computedRequiresReaction !== undefined) {\n        globalState$$1.computedRequiresReaction = !!computedRequiresReaction;\n    }\n    if (disableErrorBoundaries !== undefined) {\n        if (disableErrorBoundaries === true)\n            console.warn(\"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\");\n        globalState$$1.disableErrorBoundaries = !!disableErrorBoundaries;\n    }\n    if (reactionScheduler) {\n        setReactionScheduler$$1(reactionScheduler);\n    }\n}\n\nfunction decorate$$1(thing, decorators) {\n    process.env.NODE_ENV !== \"production\" &&\n        invariant$$1(isPlainObject$$1(decorators), \"Decorators should be a key value map\");\n    var target = typeof thing === \"function\" ? thing.prototype : thing;\n    var _loop_1 = function (prop) {\n        var propertyDecorators = decorators[prop];\n        if (!Array.isArray(propertyDecorators)) {\n            propertyDecorators = [propertyDecorators];\n        }\n        process.env.NODE_ENV !== \"production\" &&\n            invariant$$1(propertyDecorators.every(function (decorator) { return typeof decorator === \"function\"; }), \"Decorate: expected a decorator function or array of decorator functions for '\" + prop + \"'\");\n        var descriptor = Object.getOwnPropertyDescriptor(target, prop);\n        var newDescriptor = propertyDecorators.reduce(function (accDescriptor, decorator) { return decorator(target, prop, accDescriptor); }, descriptor);\n        if (newDescriptor)\n            Object.defineProperty(target, prop, newDescriptor);\n    };\n    for (var prop in decorators) {\n        _loop_1(prop);\n    }\n    return thing;\n}\n\nfunction extendObservable$$1(target, properties, decorators, options) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(arguments.length >= 2 && arguments.length <= 4, \"'extendObservable' expected 2-4 arguments\");\n        invariant$$1(typeof target === \"object\", \"'extendObservable' expects an object as first argument\");\n        invariant$$1(!isObservableMap$$1(target), \"'extendObservable' should not be used on maps, use map.merge instead\");\n    }\n    options = asCreateObservableOptions$$1(options);\n    var defaultDecorator = getDefaultDecoratorFromObjectOptions$$1(options);\n    initializeInstance$$1(target); // Fixes #1740\n    asObservableObject$$1(target, options.name, defaultDecorator.enhancer); // make sure object is observable, even without initial props\n    if (properties)\n        extendObservableObjectWithProperties$$1(target, properties, decorators, defaultDecorator);\n    return target;\n}\nfunction getDefaultDecoratorFromObjectOptions$$1(options) {\n    return options.defaultDecorator || (options.deep === false ? refDecorator$$1 : deepDecorator$$1);\n}\nfunction extendObservableObjectWithProperties$$1(target, properties, decorators, defaultDecorator) {\n    if (process.env.NODE_ENV !== \"production\") {\n        invariant$$1(!isObservable$$1(properties), \"Extending an object with another observable (object) is not supported. Please construct an explicit propertymap, using `toJS` if need. See issue #540\");\n        if (decorators)\n            for (var key in decorators)\n                if (!(key in properties))\n                    fail$$1(\"Trying to declare a decorator for unspecified property '\" + key + \"'\");\n    }\n    startBatch$$1();\n    try {\n        for (var key in properties) {\n            var descriptor = Object.getOwnPropertyDescriptor(properties, key);\n            if (process.env.NODE_ENV !== \"production\") {\n                if (Object.getOwnPropertyDescriptor(target, key))\n                    fail$$1(\"'extendObservable' can only be used to introduce new properties. Use 'set' or 'decorate' instead. The property '\" + key + \"' already exists on '\" + target + \"'\");\n                if (isComputed$$1(descriptor.value))\n                    fail$$1(\"Passing a 'computed' as initial property value is no longer supported by extendObservable. Use a getter or decorator instead\");\n            }\n            var decorator = decorators && key in decorators\n                ? decorators[key]\n                : descriptor.get\n                    ? computedDecorator$$1\n                    : defaultDecorator;\n            if (process.env.NODE_ENV !== \"production\" && typeof decorator !== \"function\")\n                fail$$1(\"Not a valid decorator for '\" + key + \"', got: \" + decorator);\n            var resultDescriptor = decorator(target, key, descriptor, true);\n            if (resultDescriptor // otherwise, assume already applied, due to `applyToInstance`\n            )\n                Object.defineProperty(target, key, resultDescriptor);\n        }\n    }\n    finally {\n        endBatch$$1();\n    }\n}\n\nfunction getDependencyTree$$1(thing, property) {\n    return nodeToDependencyTree(getAtom$$1(thing, property));\n}\nfunction nodeToDependencyTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (node.observing && node.observing.length > 0)\n        result.dependencies = unique$$1(node.observing).map(nodeToDependencyTree);\n    return result;\n}\nfunction getObserverTree$$1(thing, property) {\n    return nodeToObserverTree(getAtom$$1(thing, property));\n}\nfunction nodeToObserverTree(node) {\n    var result = {\n        name: node.name\n    };\n    if (hasObservers$$1(node))\n        result.observers = Array.from(getObservers$$1(node)).map(nodeToObserverTree);\n    return result;\n}\n\nvar generatorId = 0;\nfunction flow$$1(generator) {\n    if (arguments.length !== 1)\n        fail$$1(process.env.NODE_ENV && \"Flow expects one 1 argument and cannot be used as decorator\");\n    var name = generator.name || \"<unnamed flow>\";\n    // Implementation based on https://github.com/tj/co/blob/master/index.js\n    return function () {\n        var ctx = this;\n        var args = arguments;\n        var runId = ++generatorId;\n        var gen = action$$1(name + \" - runid: \" + runId + \" - init\", generator).apply(ctx, args);\n        var rejector;\n        var pendingPromise = undefined;\n        var promise = new Promise(function (resolve, reject) {\n            var stepId = 0;\n            rejector = reject;\n            function onFulfilled(res) {\n                pendingPromise = undefined;\n                var ret;\n                try {\n                    ret = action$$1(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.next).call(gen, res);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function onRejected(err) {\n                pendingPromise = undefined;\n                var ret;\n                try {\n                    ret = action$$1(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.throw).call(gen, err);\n                }\n                catch (e) {\n                    return reject(e);\n                }\n                next(ret);\n            }\n            function next(ret) {\n                if (ret && typeof ret.then === \"function\") {\n                    // an async iterator\n                    ret.then(next, reject);\n                    return;\n                }\n                if (ret.done)\n                    return resolve(ret.value);\n                pendingPromise = Promise.resolve(ret.value);\n                return pendingPromise.then(onFulfilled, onRejected);\n            }\n            onFulfilled(undefined); // kick off the process\n        });\n        promise.cancel = action$$1(name + \" - runid: \" + runId + \" - cancel\", function () {\n            try {\n                if (pendingPromise)\n                    cancelPromise(pendingPromise);\n                // Finally block can return (or yield) stuff..\n                var res = gen.return();\n                // eat anything that promise would do, it's cancelled!\n                var yieldedPromise = Promise.resolve(res.value);\n                yieldedPromise.then(noop$$1, noop$$1);\n                cancelPromise(yieldedPromise); // maybe it can be cancelled :)\n                // reject our original promise\n                rejector(new Error(\"FLOW_CANCELLED\"));\n            }\n            catch (e) {\n                rejector(e); // there could be a throwing finally block\n            }\n        });\n        return promise;\n    };\n}\nfunction cancelPromise(promise) {\n    if (typeof promise.cancel === \"function\")\n        promise.cancel();\n}\n\nfunction interceptReads$$1(thing, propOrHandler, handler) {\n    var target;\n    if (isObservableMap$$1(thing) || isObservableArray$$1(thing) || isObservableValue$$1(thing)) {\n        target = getAdministration$$1(thing);\n    }\n    else if (isObservableObject$$1(thing)) {\n        if (typeof propOrHandler !== \"string\")\n            return fail$$1(process.env.NODE_ENV !== \"production\" &&\n                \"InterceptReads can only be used with a specific property, not with an object in general\");\n        target = getAdministration$$1(thing, propOrHandler);\n    }\n    else {\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"Expected observable map, object or array as first array\");\n    }\n    if (target.dehancer !== undefined)\n        return fail$$1(process.env.NODE_ENV !== \"production\" && \"An intercept reader was already established\");\n    target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n    return function () {\n        target.dehancer = undefined;\n    };\n}\n\nfunction intercept$$1(thing, propOrHandler, handler) {\n    if (typeof handler === \"function\")\n        return interceptProperty(thing, propOrHandler, handler);\n    else\n        return interceptInterceptable(thing, propOrHandler);\n}\nfunction interceptInterceptable(thing, handler) {\n    return getAdministration$$1(thing).intercept(handler);\n}\nfunction interceptProperty(thing, property, handler) {\n    return getAdministration$$1(thing, property).intercept(handler);\n}\n\nfunction _isComputed$$1(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (isObservableObject$$1(value) === false)\n            return false;\n        if (!value[$mobx$$1].values.has(property))\n            return false;\n        var atom = getAtom$$1(value, property);\n        return isComputedValue$$1(atom);\n    }\n    return isComputedValue$$1(value);\n}\nfunction isComputed$$1(value) {\n    if (arguments.length > 1)\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"isComputed expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n    return _isComputed$$1(value);\n}\nfunction isComputedProp$$1(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"isComputed expected a property name as second argument\");\n    return _isComputed$$1(value, propName);\n}\n\nfunction _isObservable(value, property) {\n    if (value === null || value === undefined)\n        return false;\n    if (property !== undefined) {\n        if (process.env.NODE_ENV !== \"production\" &&\n            (isObservableMap$$1(value) || isObservableArray$$1(value)))\n            return fail$$1(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n        if (isObservableObject$$1(value)) {\n            return value[$mobx$$1].values.has(property);\n        }\n        return false;\n    }\n    // For first check, see #701\n    return (isObservableObject$$1(value) ||\n        !!value[$mobx$$1] ||\n        isAtom$$1(value) ||\n        isReaction$$1(value) ||\n        isComputedValue$$1(value));\n}\nfunction isObservable$$1(value) {\n    if (arguments.length !== 1)\n        fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n    return _isObservable(value);\n}\nfunction isObservableProp$$1(value, propName) {\n    if (typeof propName !== \"string\")\n        return fail$$1(process.env.NODE_ENV !== \"production\" && \"expected a property name as second argument\");\n    return _isObservable(value, propName);\n}\n\nfunction keys$$1(obj) {\n    if (isObservableObject$$1(obj)) {\n        return obj[$mobx$$1].getKeys();\n    }\n    if (isObservableMap$$1(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableSet$$1(obj)) {\n        return Array.from(obj.keys());\n    }\n    if (isObservableArray$$1(obj)) {\n        return obj.map(function (_, index) { return index; });\n    }\n    return fail$$1(process.env.NODE_ENV !== \"production\" &&\n        \"'keys()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction values$$1(obj) {\n    if (isObservableObject$$1(obj)) {\n        return keys$$1(obj).map(function (key) { return obj[key]; });\n    }\n    if (isObservableMap$$1(obj)) {\n        return keys$$1(obj).map(function (key) { return obj.get(key); });\n    }\n    if (isObservableSet$$1(obj)) {\n        return Array.from(obj.values());\n    }\n    if (isObservableArray$$1(obj)) {\n        return obj.slice();\n    }\n    return fail$$1(process.env.NODE_ENV !== \"production\" &&\n        \"'values()' can only be used on observable objects, arrays, sets and maps\");\n}\nfunction entries$$1(obj) {\n    if (isObservableObject$$1(obj)) {\n        return keys$$1(obj).map(function (key) { return [key, obj[key]]; });\n    }\n    if (isObservableMap$$1(obj)) {\n        return keys$$1(obj).map(function (key) { return [key, obj.get(key)]; });\n    }\n    if (isObservableSet$$1(obj)) {\n        return Array.from(obj.entries());\n    }\n    if (isObservableArray$$1(obj)) {\n        return obj.map(function (key, index) { return [index, key]; });\n    }\n    return fail$$1(process.env.NODE_ENV !== \"production\" &&\n        \"'entries()' can only be used on observable objects, arrays and maps\");\n}\nfunction set$$1(obj, key, value) {\n    if (arguments.length === 2) {\n        startBatch$$1();\n        var values_1 = key;\n        try {\n            for (var key_1 in values_1)\n                set$$1(obj, key_1, values_1[key_1]);\n        }\n        finally {\n            endBatch$$1();\n        }\n        return;\n    }\n    if (isObservableObject$$1(obj)) {\n        var adm = obj[$mobx$$1];\n        var existingObservable = adm.values.get(key);\n        if (existingObservable) {\n            adm.write(key, value);\n        }\n        else {\n            adm.addObservableProp(key, value, adm.defaultEnhancer);\n        }\n    }\n    else if (isObservableMap$$1(obj)) {\n        obj.set(key, value);\n    }\n    else if (isObservableArray$$1(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant$$1(key >= 0, \"Not a valid index: '\" + key + \"'\");\n        startBatch$$1();\n        if (key >= obj.length)\n            obj.length = key + 1;\n        obj[key] = value;\n        endBatch$$1();\n    }\n    else {\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"'set()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction remove$$1(obj, key) {\n    if (isObservableObject$$1(obj)) {\n        \n        obj[$mobx$$1].remove(key);\n    }\n    else if (isObservableMap$$1(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableSet$$1(obj)) {\n        obj.delete(key);\n    }\n    else if (isObservableArray$$1(obj)) {\n        if (typeof key !== \"number\")\n            key = parseInt(key, 10);\n        invariant$$1(key >= 0, \"Not a valid index: '\" + key + \"'\");\n        obj.splice(key, 1);\n    }\n    else {\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"'remove()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction has$$1(obj, key) {\n    if (isObservableObject$$1(obj)) {\n        // return keys(obj).indexOf(key) >= 0\n        var adm = getAdministration$$1(obj);\n        return adm.has(key);\n    }\n    else if (isObservableMap$$1(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableSet$$1(obj)) {\n        return obj.has(key);\n    }\n    else if (isObservableArray$$1(obj)) {\n        return key >= 0 && key < obj.length;\n    }\n    else {\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"'has()' can only be used on observable objects, arrays and maps\");\n    }\n}\nfunction get$$1(obj, key) {\n    if (!has$$1(obj, key))\n        return undefined;\n    if (isObservableObject$$1(obj)) {\n        return obj[key];\n    }\n    else if (isObservableMap$$1(obj)) {\n        return obj.get(key);\n    }\n    else if (isObservableArray$$1(obj)) {\n        return obj[key];\n    }\n    else {\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"'get()' can only be used on observable objects, arrays and maps\");\n    }\n}\n\nfunction observe$$1(thing, propOrCb, cbOrFire, fireImmediately) {\n    if (typeof cbOrFire === \"function\")\n        return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n    else\n        return observeObservable(thing, propOrCb, cbOrFire);\n}\nfunction observeObservable(thing, listener, fireImmediately) {\n    return getAdministration$$1(thing).observe(listener, fireImmediately);\n}\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n    return getAdministration$$1(thing, property).observe(listener, fireImmediately);\n}\n\nvar defaultOptions = {\n    detectCycles: true,\n    exportMapsAsObjects: true,\n    recurseEverything: false\n};\nfunction cache(map, key, value, options) {\n    if (options.detectCycles)\n        map.set(key, value);\n    return value;\n}\nfunction toJSHelper(source, options, __alreadySeen) {\n    if (!options.recurseEverything && !isObservable$$1(source))\n        return source;\n    if (typeof source !== \"object\")\n        return source;\n    // Directly return null if source is null\n    if (source === null)\n        return null;\n    // Directly return the Date object itself if contained in the observable\n    if (source instanceof Date)\n        return source;\n    if (isObservableValue$$1(source))\n        return toJSHelper(source.get(), options, __alreadySeen);\n    // make sure we track the keys of the object\n    if (isObservable$$1(source))\n        keys$$1(source);\n    var detectCycles = options.detectCycles === true;\n    if (detectCycles && source !== null && __alreadySeen.has(source)) {\n        return __alreadySeen.get(source);\n    }\n    if (isObservableArray$$1(source) || Array.isArray(source)) {\n        var res_1 = cache(__alreadySeen, source, [], options);\n        var toAdd = source.map(function (value) { return toJSHelper(value, options, __alreadySeen); });\n        res_1.length = toAdd.length;\n        for (var i = 0, l = toAdd.length; i < l; i++)\n            res_1[i] = toAdd[i];\n        return res_1;\n    }\n    if (isObservableSet$$1(source) || Object.getPrototypeOf(source) === Set.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            var res_2 = cache(__alreadySeen, source, new Set(), options);\n            source.forEach(function (value) {\n                res_2.add(toJSHelper(value, options, __alreadySeen));\n            });\n            return res_2;\n        }\n        else {\n            var res_3 = cache(__alreadySeen, source, [], options);\n            source.forEach(function (value) {\n                res_3.push(toJSHelper(value, options, __alreadySeen));\n            });\n            return res_3;\n        }\n    }\n    if (isObservableMap$$1(source) || Object.getPrototypeOf(source) === Map.prototype) {\n        if (options.exportMapsAsObjects === false) {\n            var res_4 = cache(__alreadySeen, source, new Map(), options);\n            source.forEach(function (value, key) {\n                res_4.set(key, toJSHelper(value, options, __alreadySeen));\n            });\n            return res_4;\n        }\n        else {\n            var res_5 = cache(__alreadySeen, source, {}, options);\n            source.forEach(function (value, key) {\n                res_5[key] = toJSHelper(value, options, __alreadySeen);\n            });\n            return res_5;\n        }\n    }\n    // Fallback to the situation that source is an ObservableObject or a plain object\n    var res = cache(__alreadySeen, source, {}, options);\n    for (var key in source) {\n        res[key] = toJSHelper(source[key], options, __alreadySeen);\n    }\n    return res;\n}\nfunction toJS$$1(source, options) {\n    // backward compatibility\n    if (typeof options === \"boolean\")\n        options = { detectCycles: options };\n    if (!options)\n        options = defaultOptions;\n    options.detectCycles =\n        options.detectCycles === undefined\n            ? options.recurseEverything === true\n            : options.detectCycles === true;\n    var __alreadySeen;\n    if (options.detectCycles)\n        __alreadySeen = new Map();\n    return toJSHelper(source, options, __alreadySeen);\n}\n\nfunction trace$$1() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var enterBreakPoint = false;\n    if (typeof args[args.length - 1] === \"boolean\")\n        enterBreakPoint = args.pop();\n    var derivation = getAtomFromArgs(args);\n    if (!derivation) {\n        return fail$$1(process.env.NODE_ENV !== \"production\" &&\n            \"'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly\");\n    }\n    if (derivation.isTracing === TraceMode$$1.NONE) {\n        console.log(\"[mobx.trace] '\" + derivation.name + \"' tracing enabled\");\n    }\n    derivation.isTracing = enterBreakPoint ? TraceMode$$1.BREAK : TraceMode$$1.LOG;\n}\nfunction getAtomFromArgs(args) {\n    switch (args.length) {\n        case 0:\n            return globalState$$1.trackingDerivation;\n        case 1:\n            return getAtom$$1(args[0]);\n        case 2:\n            return getAtom$$1(args[0], args[1]);\n    }\n}\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nfunction transaction$$1(action$$1, thisArg) {\n    if (thisArg === void 0) { thisArg = undefined; }\n    startBatch$$1();\n    try {\n        return action$$1.apply(thisArg);\n    }\n    finally {\n        endBatch$$1();\n    }\n}\n\nfunction when$$1(predicate, arg1, arg2) {\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\n        return whenPromise(predicate, arg1);\n    return _when(predicate, arg1, arg2 || {});\n}\nfunction _when(predicate, effect, opts) {\n    var timeoutHandle;\n    if (typeof opts.timeout === \"number\") {\n        timeoutHandle = setTimeout(function () {\n            if (!disposer[$mobx$$1].isDisposed) {\n                disposer();\n                var error = new Error(\"WHEN_TIMEOUT\");\n                if (opts.onError)\n                    opts.onError(error);\n                else\n                    throw error;\n            }\n        }, opts.timeout);\n    }\n    opts.name = opts.name || \"When@\" + getNextId$$1();\n    var effectAction = createAction$$1(opts.name + \"-effect\", effect);\n    var disposer = autorun$$1(function (r) {\n        if (predicate()) {\n            r.dispose();\n            if (timeoutHandle)\n                clearTimeout(timeoutHandle);\n            effectAction();\n        }\n    }, opts);\n    return disposer;\n}\nfunction whenPromise(predicate, opts) {\n    if (process.env.NODE_ENV !== \"production\" && opts && opts.onError)\n        return fail$$1(\"the options 'onError' and 'promise' cannot be combined\");\n    var cancel;\n    var res = new Promise(function (resolve, reject) {\n        var disposer = _when(predicate, resolve, __assign({}, opts, { onError: reject }));\n        cancel = function () {\n            disposer();\n            reject(\"WHEN_CANCELLED\");\n        };\n    });\n    res.cancel = cancel;\n    return res;\n}\n\nfunction getAdm(target) {\n    return target[$mobx$$1];\n}\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nvar objectProxyTraps = {\n    has: function (target, name) {\n        if (name === $mobx$$1 || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol$$1)\n            return true;\n        var adm = getAdm(target);\n        // MWE: should `in` operator be reactive? If not, below code path will be faster / more memory efficient\n        // TODO: check performance stats!\n        // if (adm.values.get(name as string)) return true\n        if (typeof name === \"string\")\n            return adm.has(name);\n        return name in target;\n    },\n    get: function (target, name) {\n        if (name === $mobx$$1 || name === \"constructor\" || name === mobxDidRunLazyInitializersSymbol$$1)\n            return target[name];\n        var adm = getAdm(target);\n        var observable$$1 = adm.values.get(name);\n        if (observable$$1 instanceof Atom$$1) {\n            var result = observable$$1.get();\n            if (result === undefined) {\n                // This fixes #1796, because deleting a prop that has an\n                // undefined value won't retrigger a observer (no visible effect),\n                // the autorun wouldn't subscribe to future key changes (see also next comment)\n                adm.has(name);\n            }\n            return result;\n        }\n        // make sure we start listening to future keys\n        // note that we only do this here for optimization\n        if (typeof name === \"string\")\n            adm.has(name);\n        return target[name];\n    },\n    set: function (target, name, value) {\n        if (typeof name !== \"string\")\n            return false;\n        set$$1(target, name, value);\n        return true;\n    },\n    deleteProperty: function (target, name) {\n        if (typeof name !== \"string\")\n            return false;\n        var adm = getAdm(target);\n        adm.remove(name);\n        return true;\n    },\n    ownKeys: function (target) {\n        var adm = getAdm(target);\n        adm.keysAtom.reportObserved();\n        return Reflect.ownKeys(target);\n    },\n    preventExtensions: function (target) {\n        fail$$1(\"Dynamic observable objects cannot be frozen\");\n        return false;\n    }\n};\nfunction createDynamicObservableObject$$1(base) {\n    var proxy = new Proxy(base, objectProxyTraps);\n    base[$mobx$$1].proxy = proxy;\n    return proxy;\n}\n\nfunction hasInterceptors$$1(interceptable) {\n    return interceptable.interceptors !== undefined && interceptable.interceptors.length > 0;\n}\nfunction registerInterceptor$$1(interceptable, handler) {\n    var interceptors = interceptable.interceptors || (interceptable.interceptors = []);\n    interceptors.push(handler);\n    return once$$1(function () {\n        var idx = interceptors.indexOf(handler);\n        if (idx !== -1)\n            interceptors.splice(idx, 1);\n    });\n}\nfunction interceptChange$$1(interceptable, change) {\n    var prevU = untrackedStart$$1();\n    try {\n        var interceptors = interceptable.interceptors;\n        if (interceptors)\n            for (var i = 0, l = interceptors.length; i < l; i++) {\n                change = interceptors[i](change);\n                invariant$$1(!change || change.type, \"Intercept handlers should return nothing or a change object\");\n                if (!change)\n                    break;\n            }\n        return change;\n    }\n    finally {\n        untrackedEnd$$1(prevU);\n    }\n}\n\nfunction hasListeners$$1(listenable) {\n    return listenable.changeListeners !== undefined && listenable.changeListeners.length > 0;\n}\nfunction registerListener$$1(listenable, handler) {\n    var listeners = listenable.changeListeners || (listenable.changeListeners = []);\n    listeners.push(handler);\n    return once$$1(function () {\n        var idx = listeners.indexOf(handler);\n        if (idx !== -1)\n            listeners.splice(idx, 1);\n    });\n}\nfunction notifyListeners$$1(listenable, change) {\n    var prevU = untrackedStart$$1();\n    var listeners = listenable.changeListeners;\n    if (!listeners)\n        return;\n    listeners = listeners.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change);\n    }\n    untrackedEnd$$1(prevU);\n}\n\nvar MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\nvar arrayTraps = {\n    get: function (target, name) {\n        if (name === $mobx$$1)\n            return target[$mobx$$1];\n        if (name === \"length\")\n            return target[$mobx$$1].getArrayLength();\n        if (typeof name === \"number\") {\n            return arrayExtensions.get.call(target, name);\n        }\n        if (typeof name === \"string\" && !isNaN(name)) {\n            return arrayExtensions.get.call(target, parseInt(name));\n        }\n        if (arrayExtensions.hasOwnProperty(name)) {\n            return arrayExtensions[name];\n        }\n        return target[name];\n    },\n    set: function (target, name, value) {\n        if (name === \"length\") {\n            target[$mobx$$1].setArrayLength(value);\n            return true;\n        }\n        if (typeof name === \"number\") {\n            arrayExtensions.set.call(target, name, value);\n            return true;\n        }\n        if (!isNaN(name)) {\n            arrayExtensions.set.call(target, parseInt(name), value);\n            return true;\n        }\n        return false;\n    },\n    preventExtensions: function (target) {\n        fail$$1(\"Observable arrays cannot be frozen\");\n        return false;\n    }\n};\nfunction createObservableArray$$1(initialValues, enhancer, name, owned) {\n    if (name === void 0) { name = \"ObservableArray@\" + getNextId$$1(); }\n    if (owned === void 0) { owned = false; }\n    var adm = new ObservableArrayAdministration(name, enhancer, owned);\n    addHiddenFinalProp$$1(adm.values, $mobx$$1, adm);\n    var proxy = new Proxy(adm.values, arrayTraps);\n    adm.proxy = proxy;\n    if (initialValues && initialValues.length) {\n        var prev = allowStateChangesStart$$1(true);\n        adm.spliceWithArray(0, 0, initialValues);\n        allowStateChangesEnd$$1(prev);\n    }\n    return proxy;\n}\nvar ObservableArrayAdministration = /** @class */ (function () {\n    function ObservableArrayAdministration(name, enhancer, owned) {\n        this.owned = owned;\n        this.values = [];\n        this.proxy = undefined;\n        this.lastKnownLength = 0;\n        this.atom = new Atom$$1(name || \"ObservableArray@\" + getNextId$$1());\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name + \"[..]\"); };\n    }\n    ObservableArrayAdministration.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined)\n            return this.dehancer(value);\n        return value;\n    };\n    ObservableArrayAdministration.prototype.dehanceValues = function (values$$1) {\n        if (this.dehancer !== undefined && values$$1.length > 0)\n            return values$$1.map(this.dehancer);\n        return values$$1;\n    };\n    ObservableArrayAdministration.prototype.intercept = function (handler) {\n        return registerInterceptor$$1(this, handler);\n    };\n    ObservableArrayAdministration.prototype.observe = function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        if (fireImmediately) {\n            listener({\n                object: this.proxy,\n                type: \"splice\",\n                index: 0,\n                added: this.values.slice(),\n                addedCount: this.values.length,\n                removed: [],\n                removedCount: 0\n            });\n        }\n        return registerListener$$1(this, listener);\n    };\n    ObservableArrayAdministration.prototype.getArrayLength = function () {\n        this.atom.reportObserved();\n        return this.values.length;\n    };\n    ObservableArrayAdministration.prototype.setArrayLength = function (newLength) {\n        if (typeof newLength !== \"number\" || newLength < 0)\n            throw new Error(\"[mobx.array] Out of range: \" + newLength);\n        var currentLength = this.values.length;\n        if (newLength === currentLength)\n            return;\n        else if (newLength > currentLength) {\n            var newItems = new Array(newLength - currentLength);\n            for (var i = 0; i < newLength - currentLength; i++)\n                newItems[i] = undefined; // No Array.fill everywhere...\n            this.spliceWithArray(currentLength, 0, newItems);\n        }\n        else\n            this.spliceWithArray(newLength, currentLength - newLength);\n    };\n    ObservableArrayAdministration.prototype.updateArrayLength = function (oldLength, delta) {\n        if (oldLength !== this.lastKnownLength)\n            throw new Error(\"[mobx] Modification exception: the internal structure of an observable array was changed.\");\n        this.lastKnownLength += delta;\n    };\n    ObservableArrayAdministration.prototype.spliceWithArray = function (index, deleteCount, newItems) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed$$1(this.atom);\n        var length = this.values.length;\n        if (index === undefined)\n            index = 0;\n        else if (index > length)\n            index = length;\n        else if (index < 0)\n            index = Math.max(0, length + index);\n        if (arguments.length === 1)\n            deleteCount = length - index;\n        else if (deleteCount === undefined || deleteCount === null)\n            deleteCount = 0;\n        else\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n        if (newItems === undefined)\n            newItems = EMPTY_ARRAY$$1;\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                object: this.proxy,\n                type: \"splice\",\n                index: index,\n                removedCount: deleteCount,\n                added: newItems\n            });\n            if (!change)\n                return EMPTY_ARRAY$$1;\n            deleteCount = change.removedCount;\n            newItems = change.added;\n        }\n        newItems = newItems.length === 0 ? newItems : newItems.map(function (v) { return _this.enhancer(v, undefined); });\n        if (process.env.NODE_ENV !== \"production\") {\n            var lengthDelta = newItems.length - deleteCount;\n            this.updateArrayLength(length, lengthDelta); // checks if internal array wasn't modified\n        }\n        var res = this.spliceItemsIntoValues(index, deleteCount, newItems);\n        if (deleteCount !== 0 || newItems.length !== 0)\n            this.notifyArraySplice(index, newItems, res);\n        return this.dehanceValues(res);\n    };\n    ObservableArrayAdministration.prototype.spliceItemsIntoValues = function (index, deleteCount, newItems) {\n        var _a;\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return (_a = this.values).splice.apply(_a, __spread([index, deleteCount], newItems));\n        }\n        else {\n            var res = this.values.slice(index, index + deleteCount);\n            this.values = this.values\n                .slice(0, index)\n                .concat(newItems, this.values.slice(index + deleteCount));\n            return res;\n        }\n    };\n    ObservableArrayAdministration.prototype.notifyArrayChildUpdate = function (index, newValue, oldValue) {\n        var notifySpy = !this.owned && isSpyEnabled$$1();\n        var notify = hasListeners$$1(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"update\",\n                index: index,\n                newValue: newValue,\n                oldValue: oldValue\n            }\n            : null;\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart$$1(__assign({}, change, { name: this.atom.name }));\n        this.atom.reportChanged();\n        if (notify)\n            notifyListeners$$1(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd$$1();\n    };\n    ObservableArrayAdministration.prototype.notifyArraySplice = function (index, added, removed) {\n        var notifySpy = !this.owned && isSpyEnabled$$1();\n        var notify = hasListeners$$1(this);\n        var change = notify || notifySpy\n            ? {\n                object: this.proxy,\n                type: \"splice\",\n                index: index,\n                removed: removed,\n                added: added,\n                removedCount: removed.length,\n                addedCount: added.length\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart$$1(__assign({}, change, { name: this.atom.name }));\n        this.atom.reportChanged();\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify)\n            notifyListeners$$1(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd$$1();\n    };\n    return ObservableArrayAdministration;\n}());\nvar arrayExtensions = {\n    intercept: function (handler) {\n        return this[$mobx$$1].intercept(handler);\n    },\n    observe: function (listener, fireImmediately) {\n        if (fireImmediately === void 0) { fireImmediately = false; }\n        var adm = this[$mobx$$1];\n        return adm.observe(listener, fireImmediately);\n    },\n    clear: function () {\n        return this.splice(0);\n    },\n    replace: function (newItems) {\n        var adm = this[$mobx$$1];\n        return adm.spliceWithArray(0, adm.values.length, newItems);\n    },\n    /**\n     * Converts this array back to a (shallow) javascript structure.\n     * For a deep clone use mobx.toJS\n     */\n    toJS: function () {\n        return this.slice();\n    },\n    toJSON: function () {\n        // Used by JSON.stringify\n        return this.toJS();\n    },\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice: function (index, deleteCount) {\n        var newItems = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            newItems[_i - 2] = arguments[_i];\n        }\n        var adm = this[$mobx$$1];\n        switch (arguments.length) {\n            case 0:\n                return [];\n            case 1:\n                return adm.spliceWithArray(index);\n            case 2:\n                return adm.spliceWithArray(index, deleteCount);\n        }\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    spliceWithArray: function (index, deleteCount, newItems) {\n        var adm = this[$mobx$$1];\n        return adm.spliceWithArray(index, deleteCount, newItems);\n    },\n    push: function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this[$mobx$$1];\n        adm.spliceWithArray(adm.values.length, 0, items);\n        return adm.values.length;\n    },\n    pop: function () {\n        return this.splice(Math.max(this[$mobx$$1].values.length - 1, 0), 1)[0];\n    },\n    shift: function () {\n        return this.splice(0, 1)[0];\n    },\n    unshift: function () {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var adm = this[$mobx$$1];\n        adm.spliceWithArray(0, 0, items);\n        return adm.values.length;\n    },\n    reverse: function () {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        // so we deviate from the default and just make it an dervitation\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.reverse()` will not update the array in place. Use `observableArray.slice().reverse()` to supress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().reverse())` to reverse & update in place\");\n        }\n        var clone = this.slice();\n        return clone.reverse.apply(clone, arguments);\n    },\n    sort: function (compareFn) {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (process.env.NODE_ENV !== \"production\") {\n            console.warn(\"[mobx] `observableArray.sort()` will not update the array in place. Use `observableArray.slice().sort()` to supress this warning and perform the operation on a copy, or `observableArray.replace(observableArray.slice().sort())` to sort & update in place\");\n        }\n        var clone = this.slice();\n        return clone.sort.apply(clone, arguments);\n    },\n    remove: function (value) {\n        var adm = this[$mobx$$1];\n        var idx = adm.dehanceValues(adm.values).indexOf(value);\n        if (idx > -1) {\n            this.splice(idx, 1);\n            return true;\n        }\n        return false;\n    },\n    get: function (index) {\n        var adm = this[$mobx$$1];\n        if (adm) {\n            if (index < adm.values.length) {\n                adm.atom.reportObserved();\n                return adm.dehanceValue(adm.values[index]);\n            }\n            console.warn(\"[mobx.array] Attempt to read an array index (\" + index + \") that is out of bounds (\" + adm.values.length + \"). Please check length first. Out of bound indices will not be tracked by MobX\");\n        }\n        return undefined;\n    },\n    set: function (index, newValue) {\n        var adm = this[$mobx$$1];\n        var values$$1 = adm.values;\n        if (index < values$$1.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed$$1(adm.atom);\n            var oldValue = values$$1[index];\n            if (hasInterceptors$$1(adm)) {\n                var change = interceptChange$$1(adm, {\n                    type: \"update\",\n                    object: this,\n                    index: index,\n                    newValue: newValue\n                });\n                if (!change)\n                    return;\n                newValue = change.newValue;\n            }\n            newValue = adm.enhancer(newValue, oldValue);\n            var changed = newValue !== oldValue;\n            if (changed) {\n                values$$1[index] = newValue;\n                adm.notifyArrayChildUpdate(index, newValue, oldValue);\n            }\n        }\n        else if (index === values$$1.length) {\n            // add a new item\n            adm.spliceWithArray(index, 0, [newValue]);\n        }\n        else {\n            // out of bounds\n            throw new Error(\"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + values$$1.length);\n        }\n    }\n};\n[\n    \"concat\",\n    \"every\",\n    \"filter\",\n    \"forEach\",\n    \"indexOf\",\n    \"join\",\n    \"lastIndexOf\",\n    \"map\",\n    \"reduce\",\n    \"reduceRight\",\n    \"slice\",\n    \"some\",\n    \"toString\",\n    \"toLocaleString\"\n].forEach(function (funcName) {\n    arrayExtensions[funcName] = function () {\n        var adm = this[$mobx$$1];\n        adm.atom.reportObserved();\n        var res = adm.dehanceValues(adm.values);\n        return res[funcName].apply(res, arguments);\n    };\n});\nvar isObservableArrayAdministration = createInstanceofPredicate$$1(\"ObservableArrayAdministration\", ObservableArrayAdministration);\nfunction isObservableArray$$1(thing) {\n    return isObject$$1(thing) && isObservableArrayAdministration(thing[$mobx$$1]);\n}\n\nvar _a;\nvar ObservableMapMarker = {};\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nvar ObservableMap$$1 = /** @class */ (function () {\n    function ObservableMap$$1(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer$$1; }\n        if (name === void 0) { name = \"ObservableMap@\" + getNextId$$1(); }\n        this.enhancer = enhancer;\n        this.name = name;\n        this[_a] = ObservableMapMarker;\n        this._keysAtom = createAtom$$1(this.name + \".keys()\");\n        this[Symbol.toStringTag] = \"Map\";\n        if (typeof Map !== \"function\") {\n            throw new Error(\"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\");\n        }\n        this._data = new Map();\n        this._hasMap = new Map();\n        this.merge(initialData);\n    }\n    ObservableMap$$1.prototype._has = function (key) {\n        return this._data.has(key);\n    };\n    ObservableMap$$1.prototype.has = function (key) {\n        if (this._hasMap.has(key))\n            return this._hasMap.get(key).get();\n        return this._updateHasMapEntry(key, false).get();\n    };\n    ObservableMap$$1.prototype.set = function (key, value) {\n        var hasKey = this._has(key);\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                type: hasKey ? \"update\" : \"add\",\n                object: this,\n                newValue: value,\n                name: key\n            });\n            if (!change)\n                return this;\n            value = change.newValue;\n        }\n        if (hasKey) {\n            this._updateValue(key, value);\n        }\n        else {\n            this._addValue(key, value);\n        }\n        return this;\n    };\n    ObservableMap$$1.prototype.delete = function (key) {\n        var _this = this;\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                type: \"delete\",\n                object: this,\n                name: key\n            });\n            if (!change)\n                return false;\n        }\n        if (this._has(key)) {\n            var notifySpy = isSpyEnabled$$1();\n            var notify = hasListeners$$1(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: this._data.get(key).value,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));\n            transaction$$1(function () {\n                _this._keysAtom.reportChanged();\n                _this._updateHasMapEntry(key, false);\n                var observable$$1 = _this._data.get(key);\n                observable$$1.setNewValue(undefined);\n                _this._data.delete(key);\n            });\n            if (notify)\n                notifyListeners$$1(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n            return true;\n        }\n        return false;\n    };\n    ObservableMap$$1.prototype._updateHasMapEntry = function (key, value) {\n        // optimization; don't fill the hasMap if we are not observing, or remove entry if there are no observers anymore\n        var entry = this._hasMap.get(key);\n        if (entry) {\n            entry.setNewValue(value);\n        }\n        else {\n            entry = new ObservableValue$$1(value, referenceEnhancer$$1, this.name + \".\" + stringifyKey(key) + \"?\", false);\n            this._hasMap.set(key, entry);\n        }\n        return entry;\n    };\n    ObservableMap$$1.prototype._updateValue = function (key, newValue) {\n        var observable$$1 = this._data.get(key);\n        newValue = observable$$1.prepareNewValue(newValue);\n        if (newValue !== globalState$$1.UNCHANGED) {\n            var notifySpy = isSpyEnabled$$1();\n            var notify = hasListeners$$1(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this,\n                    oldValue: observable$$1.value,\n                    name: key,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));\n            observable$$1.setNewValue(newValue);\n            if (notify)\n                notifyListeners$$1(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n        }\n    };\n    ObservableMap$$1.prototype._addValue = function (key, newValue) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed$$1(this._keysAtom);\n        transaction$$1(function () {\n            var observable$$1 = new ObservableValue$$1(newValue, _this.enhancer, _this.name + \".\" + stringifyKey(key), false);\n            _this._data.set(key, observable$$1);\n            newValue = observable$$1.value; // value might have been changed\n            _this._updateHasMapEntry(key, true);\n            _this._keysAtom.reportChanged();\n        });\n        var notifySpy = isSpyEnabled$$1();\n        var notify = hasListeners$$1(this);\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this,\n                name: key,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));\n        if (notify)\n            notifyListeners$$1(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd$$1();\n    };\n    ObservableMap$$1.prototype.get = function (key) {\n        if (this.has(key))\n            return this.dehanceValue(this._data.get(key).get());\n        return this.dehanceValue(undefined);\n    };\n    ObservableMap$$1.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableMap$$1.prototype.keys = function () {\n        this._keysAtom.reportObserved();\n        return this._data.keys();\n    };\n    ObservableMap$$1.prototype.values = function () {\n        var self = this;\n        var nextIndex = 0;\n        var keys$$1 = Array.from(this.keys());\n        return makeIterable({\n            next: function () {\n                return nextIndex < keys$$1.length\n                    ? { value: self.get(keys$$1[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableMap$$1.prototype.entries = function () {\n        var self = this;\n        var nextIndex = 0;\n        var keys$$1 = Array.from(this.keys());\n        return makeIterable({\n            next: function () {\n                if (nextIndex < keys$$1.length) {\n                    var key = keys$$1[nextIndex++];\n                    return {\n                        value: [key, self.get(key)],\n                        done: false\n                    };\n                }\n                return { done: true };\n            }\n        });\n    };\n    ObservableMap$$1.prototype[(_a = $mobx$$1, Symbol.iterator)] = function () {\n        return this.entries();\n    };\n    ObservableMap$$1.prototype.forEach = function (callback, thisArg) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                callback.call(thisArg, value, key, this);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    /** Merge another object into this object, returns this. */\n    ObservableMap$$1.prototype.merge = function (other) {\n        var _this = this;\n        if (isObservableMap$$1(other)) {\n            other = other.toJS();\n        }\n        transaction$$1(function () {\n            if (isPlainObject$$1(other))\n                Object.keys(other).forEach(function (key) { return _this.set(key, other[key]); });\n            else if (Array.isArray(other))\n                other.forEach(function (_a) {\n                    var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                    return _this.set(key, value);\n                });\n            else if (isES6Map$$1(other)) {\n                if (other.constructor !== Map)\n                    fail$$1(\"Cannot initialize from classes that inherit from Map: \" + other.constructor.name); // prettier-ignore\n                other.forEach(function (value, key) { return _this.set(key, value); });\n            }\n            else if (other !== null && other !== undefined)\n                fail$$1(\"Cannot initialize map from \" + other);\n        });\n        return this;\n    };\n    ObservableMap$$1.prototype.clear = function () {\n        var _this = this;\n        transaction$$1(function () {\n            untracked$$1(function () {\n                var e_2, _a;\n                try {\n                    for (var _b = __values(_this.keys()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var key = _c.value;\n                        _this.delete(key);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            });\n        });\n    };\n    ObservableMap$$1.prototype.replace = function (values$$1) {\n        var _this = this;\n        transaction$$1(function () {\n            // grab all the keys that are present in the new map but not present in the current map\n            // and delete them from the map, then merge the new map\n            // this will cause reactions only on changed values\n            var newKeys = getMapLikeKeys$$1(values$$1);\n            var oldKeys = Array.from(_this.keys());\n            var missingKeys = oldKeys.filter(function (k) { return newKeys.indexOf(k) === -1; });\n            missingKeys.forEach(function (k) { return _this.delete(k); });\n            _this.merge(values$$1);\n        });\n        return this;\n    };\n    Object.defineProperty(ObservableMap$$1.prototype, \"size\", {\n        get: function () {\n            this._keysAtom.reportObserved();\n            return this._data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns a plain object that represents this map.\n     * Note that all the keys being stringified.\n     * If there are duplicating keys after converting them to strings, behaviour is undetermined.\n     */\n    ObservableMap$$1.prototype.toPOJO = function () {\n        var e_3, _a;\n        var res = {};\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                // We lie about symbol key types due to https://github.com/Microsoft/TypeScript/issues/1863\n                res[typeof key === \"symbol\" ? key : stringifyKey(key)] = value;\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return res;\n    };\n    /**\n     * Returns a shallow non observable object clone of this map.\n     * Note that the values migth still be observable. For a deep clone use mobx.toJS.\n     */\n    ObservableMap$$1.prototype.toJS = function () {\n        return new Map(this);\n    };\n    ObservableMap$$1.prototype.toJSON = function () {\n        // Used by JSON.stringify\n        return this.toPOJO();\n    };\n    ObservableMap$$1.prototype.toString = function () {\n        var _this = this;\n        return (this.name +\n            \"[{ \" +\n            Array.from(this.keys())\n                .map(function (key) { return stringifyKey(key) + \": \" + (\"\" + _this.get(key)); })\n                .join(\", \") +\n            \" }]\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableMap$$1.prototype.observe = function (listener, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant$$1(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with maps.\");\n        return registerListener$$1(this, listener);\n    };\n    ObservableMap$$1.prototype.intercept = function (handler) {\n        return registerInterceptor$$1(this, handler);\n    };\n    return ObservableMap$$1;\n}());\nfunction stringifyKey(key) {\n    if (key && key.toString)\n        return key.toString();\n    else\n        return new String(key).toString();\n}\n/* 'var' fixes small-build issue */\nvar isObservableMap$$1 = createInstanceofPredicate$$1(\"ObservableMap\", ObservableMap$$1);\n\nvar _a$1;\nvar ObservableSetMarker = {};\nvar ObservableSet$$1 = /** @class */ (function () {\n    function ObservableSet$$1(initialData, enhancer, name) {\n        if (enhancer === void 0) { enhancer = deepEnhancer$$1; }\n        if (name === void 0) { name = \"ObservableSet@\" + getNextId$$1(); }\n        this.name = name;\n        this[_a$1] = ObservableSetMarker;\n        this._data = new Set();\n        this._atom = createAtom$$1(this.name);\n        this[Symbol.toStringTag] = \"Set\";\n        if (typeof Set !== \"function\") {\n            throw new Error(\"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\");\n        }\n        this.enhancer = function (newV, oldV) { return enhancer(newV, oldV, name); };\n        if (initialData) {\n            this.replace(initialData);\n        }\n    }\n    ObservableSet$$1.prototype.dehanceValue = function (value) {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value);\n        }\n        return value;\n    };\n    ObservableSet$$1.prototype.clear = function () {\n        var _this = this;\n        transaction$$1(function () {\n            untracked$$1(function () {\n                var e_1, _a;\n                try {\n                    for (var _b = __values(_this._data.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var value = _c.value;\n                        _this.delete(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            });\n        });\n    };\n    ObservableSet$$1.prototype.forEach = function (callbackFn, thisArg) {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var value = _c.value;\n                callbackFn.call(thisArg, value, value, this);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    Object.defineProperty(ObservableSet$$1.prototype, \"size\", {\n        get: function () {\n            this._atom.reportObserved();\n            return this._data.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ObservableSet$$1.prototype.add = function (value) {\n        var _this = this;\n        checkIfStateModificationsAreAllowed$$1(this._atom);\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                type: \"add\",\n                object: this,\n                newValue: value\n            });\n            if (!change)\n                return this;\n            // TODO: ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction$$1(function () {\n                _this._data.add(_this.enhancer(value, undefined));\n                _this._atom.reportChanged();\n            });\n            var notifySpy = isSpyEnabled$$1();\n            var notify = hasListeners$$1(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"add\",\n                    object: this,\n                    newValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart$$1(change);\n            if (notify)\n                notifyListeners$$1(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n        }\n        return this;\n    };\n    ObservableSet$$1.prototype.delete = function (value) {\n        var _this = this;\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                type: \"delete\",\n                object: this,\n                oldValue: value\n            });\n            if (!change)\n                return false;\n        }\n        if (this.has(value)) {\n            var notifySpy = isSpyEnabled$$1();\n            var notify = hasListeners$$1(this);\n            var change = notify || notifySpy\n                ? {\n                    type: \"delete\",\n                    object: this,\n                    oldValue: value\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart$$1(__assign({}, change, { name: this.name }));\n            transaction$$1(function () {\n                _this._atom.reportChanged();\n                _this._data.delete(value);\n            });\n            if (notify)\n                notifyListeners$$1(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n            return true;\n        }\n        return false;\n    };\n    ObservableSet$$1.prototype.has = function (value) {\n        this._atom.reportObserved();\n        return this._data.has(this.dehanceValue(value));\n    };\n    ObservableSet$$1.prototype.entries = function () {\n        var nextIndex = 0;\n        var keys$$1 = Array.from(this.keys());\n        var values$$1 = Array.from(this.values());\n        return makeIterable({\n            next: function () {\n                var index = nextIndex;\n                nextIndex += 1;\n                return index < values$$1.length\n                    ? { value: [keys$$1[index], values$$1[index]], done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableSet$$1.prototype.keys = function () {\n        return this.values();\n    };\n    ObservableSet$$1.prototype.values = function () {\n        this._atom.reportObserved();\n        var self = this;\n        var nextIndex = 0;\n        var observableValues = Array.from(this._data.values());\n        return makeIterable({\n            next: function () {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue(observableValues[nextIndex++]), done: false }\n                    : { done: true };\n            }\n        });\n    };\n    ObservableSet$$1.prototype.replace = function (other) {\n        var _this = this;\n        if (isObservableSet$$1(other)) {\n            other = other.toJS();\n        }\n        transaction$$1(function () {\n            if (Array.isArray(other)) {\n                _this.clear();\n                other.forEach(function (value) { return _this.add(value); });\n            }\n            else if (isES6Set$$1(other)) {\n                _this.clear();\n                other.forEach(function (value) { return _this.add(value); });\n            }\n            else if (other !== null && other !== undefined) {\n                fail$$1(\"Cannot initialize set from \" + other);\n            }\n        });\n        return this;\n    };\n    ObservableSet$$1.prototype.observe = function (listener, fireImmediately) {\n        // TODO 'fireImmediately' can be true?\n        process.env.NODE_ENV !== \"production\" &&\n            invariant$$1(fireImmediately !== true, \"`observe` doesn't support fireImmediately=true in combination with sets.\");\n        return registerListener$$1(this, listener);\n    };\n    ObservableSet$$1.prototype.intercept = function (handler) {\n        return registerInterceptor$$1(this, handler);\n    };\n    ObservableSet$$1.prototype.toJS = function () {\n        return new Set(this);\n    };\n    ObservableSet$$1.prototype.toString = function () {\n        return this.name + \"[ \" + Array.from(this).join(\", \") + \" ]\";\n    };\n    ObservableSet$$1.prototype[(_a$1 = $mobx$$1, Symbol.iterator)] = function () {\n        return this.values();\n    };\n    return ObservableSet$$1;\n}());\nvar isObservableSet$$1 = createInstanceofPredicate$$1(\"ObservableSet\", ObservableSet$$1);\n\nvar ObservableObjectAdministration$$1 = /** @class */ (function () {\n    function ObservableObjectAdministration$$1(target, values$$1, name, defaultEnhancer) {\n        if (values$$1 === void 0) { values$$1 = new Map(); }\n        this.target = target;\n        this.values = values$$1;\n        this.name = name;\n        this.defaultEnhancer = defaultEnhancer;\n        this.keysAtom = new Atom$$1(name + \".keys\");\n    }\n    ObservableObjectAdministration$$1.prototype.read = function (key) {\n        return this.values.get(key).get();\n    };\n    ObservableObjectAdministration$$1.prototype.write = function (key, newValue) {\n        var instance = this.target;\n        var observable$$1 = this.values.get(key);\n        if (observable$$1 instanceof ComputedValue$$1) {\n            observable$$1.set(newValue);\n            return;\n        }\n        // intercept\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                type: \"update\",\n                object: this.proxy || instance,\n                name: key,\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        newValue = observable$$1.prepareNewValue(newValue);\n        // notify spy & observers\n        if (newValue !== globalState$$1.UNCHANGED) {\n            var notify = hasListeners$$1(this);\n            var notifySpy = isSpyEnabled$$1();\n            var change = notify || notifySpy\n                ? {\n                    type: \"update\",\n                    object: this.proxy || instance,\n                    oldValue: observable$$1.value,\n                    name: key,\n                    newValue: newValue\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));\n            observable$$1.setNewValue(newValue);\n            if (notify)\n                notifyListeners$$1(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n        }\n    };\n    ObservableObjectAdministration$$1.prototype.has = function (key) {\n        var map = this.pendingKeys || (this.pendingKeys = new Map());\n        var entry = map.get(key);\n        if (entry)\n            return entry.get();\n        else {\n            var exists = !!this.values.get(key);\n            // Possible optimization: Don't have a separate map for non existing keys,\n            // but store them in the values map instead, using a special symbol to denote \"not existing\"\n            entry = new ObservableValue$$1(exists, referenceEnhancer$$1, this.name + \".\" + key.toString() + \"?\", false);\n            map.set(key, entry);\n            return entry.get(); // read to subscribe\n        }\n    };\n    ObservableObjectAdministration$$1.prototype.addObservableProp = function (propName, newValue, enhancer) {\n        if (enhancer === void 0) { enhancer = this.defaultEnhancer; }\n        var target = this.target;\n        assertPropertyConfigurable$$1(target, propName);\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                object: this.proxy || target,\n                name: propName,\n                type: \"add\",\n                newValue: newValue\n            });\n            if (!change)\n                return;\n            newValue = change.newValue;\n        }\n        var observable$$1 = new ObservableValue$$1(newValue, enhancer, this.name + \".\" + propName, false);\n        this.values.set(propName, observable$$1);\n        newValue = observable$$1.value; // observableValue might have changed it\n        Object.defineProperty(target, propName, generateObservablePropConfig$$1(propName));\n        this.notifyPropertyAddition(propName, newValue);\n    };\n    ObservableObjectAdministration$$1.prototype.addComputedProp = function (propertyOwner, // where is the property declared?\n    propName, options) {\n        var target = this.target;\n        options.name = options.name || this.name + \".\" + propName;\n        this.values.set(propName, new ComputedValue$$1(options));\n        if (propertyOwner === target || isPropertyConfigurable$$1(propertyOwner, propName))\n            Object.defineProperty(propertyOwner, propName, generateComputedPropConfig$$1(propName));\n    };\n    ObservableObjectAdministration$$1.prototype.remove = function (key) {\n        if (!this.values.has(key))\n            return;\n        var target = this.target;\n        if (hasInterceptors$$1(this)) {\n            var change = interceptChange$$1(this, {\n                object: this.proxy || target,\n                name: key,\n                type: \"remove\"\n            });\n            if (!change)\n                return;\n        }\n        try {\n            startBatch$$1();\n            var notify = hasListeners$$1(this);\n            var notifySpy = isSpyEnabled$$1();\n            var oldObservable = this.values.get(key);\n            var oldValue = oldObservable && oldObservable.get();\n            oldObservable && oldObservable.set(undefined);\n            // notify key and keyset listeners\n            this.keysAtom.reportChanged();\n            this.values.delete(key);\n            if (this.pendingKeys) {\n                var entry = this.pendingKeys.get(key);\n                if (entry)\n                    entry.set(false);\n            }\n            // delete the prop\n            delete this.target[key];\n            var change = notify || notifySpy\n                ? {\n                    type: \"remove\",\n                    object: this.proxy || target,\n                    oldValue: oldValue,\n                    name: key\n                }\n                : null;\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));\n            if (notify)\n                notifyListeners$$1(this, change);\n            if (notifySpy && process.env.NODE_ENV !== \"production\")\n                spyReportEnd$$1();\n        }\n        finally {\n            endBatch$$1();\n        }\n    };\n    ObservableObjectAdministration$$1.prototype.illegalAccess = function (owner, propName) {\n        /**\n         * This happens if a property is accessed through the prototype chain, but the property was\n         * declared directly as own property on the prototype.\n         *\n         * E.g.:\n         * class A {\n         * }\n         * extendObservable(A.prototype, { x: 1 })\n         *\n         * classB extens A {\n         * }\n         * console.log(new B().x)\n         *\n         * It is unclear whether the property should be considered 'static' or inherited.\n         * Either use `console.log(A.x)`\n         * or: decorate(A, { x: observable })\n         *\n         * When using decorate, the property will always be redeclared as own property on the actual instance\n         */\n        console.warn(\"Property '\" + propName + \"' of '\" + owner + \"' was accessed through the prototype chain. Use 'decorate' instead to declare the prop or access it statically through it's owner\");\n    };\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    ObservableObjectAdministration$$1.prototype.observe = function (callback, fireImmediately) {\n        process.env.NODE_ENV !== \"production\" &&\n            invariant$$1(fireImmediately !== true, \"`observe` doesn't support the fire immediately property for observable objects.\");\n        return registerListener$$1(this, callback);\n    };\n    ObservableObjectAdministration$$1.prototype.intercept = function (handler) {\n        return registerInterceptor$$1(this, handler);\n    };\n    ObservableObjectAdministration$$1.prototype.notifyPropertyAddition = function (key, newValue) {\n        var notify = hasListeners$$1(this);\n        var notifySpy = isSpyEnabled$$1();\n        var change = notify || notifySpy\n            ? {\n                type: \"add\",\n                object: this.proxy || this.target,\n                name: key,\n                newValue: newValue\n            }\n            : null;\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportStart$$1(__assign({}, change, { name: this.name, key: key }));\n        if (notify)\n            notifyListeners$$1(this, change);\n        if (notifySpy && process.env.NODE_ENV !== \"production\")\n            spyReportEnd$$1();\n        if (this.pendingKeys) {\n            var entry = this.pendingKeys.get(key);\n            if (entry)\n                entry.set(true);\n        }\n        this.keysAtom.reportChanged();\n    };\n    ObservableObjectAdministration$$1.prototype.getKeys = function () {\n        var e_1, _a;\n        this.keysAtom.reportObserved();\n        // return Reflect.ownKeys(this.values) as any\n        var res = [];\n        try {\n            for (var _b = __values(this.values), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (value instanceof ObservableValue$$1)\n                    res.push(key);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    };\n    return ObservableObjectAdministration$$1;\n}());\nfunction asObservableObject$$1(target, name, defaultEnhancer) {\n    if (name === void 0) { name = \"\"; }\n    if (defaultEnhancer === void 0) { defaultEnhancer = deepEnhancer$$1; }\n    if (Object.prototype.hasOwnProperty.call(target, $mobx$$1))\n        return target[$mobx$$1];\n    process.env.NODE_ENV !== \"production\" &&\n        invariant$$1(Object.isExtensible(target), \"Cannot make the designated object observable; it is not extensible\");\n    if (!isPlainObject$$1(target))\n        name = (target.constructor.name || \"ObservableObject\") + \"@\" + getNextId$$1();\n    if (!name)\n        name = \"ObservableObject@\" + getNextId$$1();\n    var adm = new ObservableObjectAdministration$$1(target, new Map(), name, defaultEnhancer);\n    addHiddenProp$$1(target, $mobx$$1, adm);\n    return adm;\n}\nvar observablePropertyConfigs = Object.create(null);\nvar computedPropertyConfigs = Object.create(null);\nfunction generateObservablePropConfig$$1(propName) {\n    return (observablePropertyConfigs[propName] ||\n        (observablePropertyConfigs[propName] = {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return this[$mobx$$1].read(propName);\n            },\n            set: function (v) {\n                this[$mobx$$1].write(propName, v);\n            }\n        }));\n}\nfunction getAdministrationForComputedPropOwner(owner) {\n    var adm = owner[$mobx$$1];\n    if (!adm) {\n        // because computed props are declared on proty,\n        // the current instance might not have been initialized yet\n        initializeInstance$$1(owner);\n        return owner[$mobx$$1];\n    }\n    return adm;\n}\nfunction generateComputedPropConfig$$1(propName) {\n    return (computedPropertyConfigs[propName] ||\n        (computedPropertyConfigs[propName] = {\n            configurable: false,\n            enumerable: false,\n            get: function () {\n                return getAdministrationForComputedPropOwner(this).read(propName);\n            },\n            set: function (v) {\n                getAdministrationForComputedPropOwner(this).write(propName, v);\n            }\n        }));\n}\nvar isObservableObjectAdministration = createInstanceofPredicate$$1(\"ObservableObjectAdministration\", ObservableObjectAdministration$$1);\nfunction isObservableObject$$1(thing) {\n    if (isObject$$1(thing)) {\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance$$1(thing);\n        return isObservableObjectAdministration(thing[$mobx$$1]);\n    }\n    return false;\n}\n\nfunction getAtom$$1(thing, property) {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray$$1(thing)) {\n            if (property !== undefined)\n                fail$$1(process.env.NODE_ENV !== \"production\" &&\n                    \"It is not possible to get index atoms from arrays\");\n            return thing[$mobx$$1].atom;\n        }\n        if (isObservableSet$$1(thing)) {\n            return thing[$mobx$$1];\n        }\n        if (isObservableMap$$1(thing)) {\n            var anyThing = thing;\n            if (property === undefined)\n                return anyThing._keysAtom;\n            var observable$$1 = anyThing._data.get(property) || anyThing._hasMap.get(property);\n            if (!observable$$1)\n                fail$$1(process.env.NODE_ENV !== \"production\" &&\n                    \"the entry '\" + property + \"' does not exist in the observable map '\" + getDebugName$$1(thing) + \"'\");\n            return observable$$1;\n        }\n        // Initializers run lazily when transpiling to babel, so make sure they are run...\n        initializeInstance$$1(thing);\n        if (property && !thing[$mobx$$1])\n            thing[property]; // See #1072\n        if (isObservableObject$$1(thing)) {\n            if (!property)\n                return fail$$1(process.env.NODE_ENV !== \"production\" && \"please specify a property\");\n            var observable$$1 = thing[$mobx$$1].values.get(property);\n            if (!observable$$1)\n                fail$$1(process.env.NODE_ENV !== \"production\" &&\n                    \"no observable property '\" + property + \"' found on the observable object '\" + getDebugName$$1(thing) + \"'\");\n            return observable$$1;\n        }\n        if (isAtom$$1(thing) || isComputedValue$$1(thing) || isReaction$$1(thing)) {\n            return thing;\n        }\n    }\n    else if (typeof thing === \"function\") {\n        if (isReaction$$1(thing[$mobx$$1])) {\n            // disposer function\n            return thing[$mobx$$1];\n        }\n    }\n    return fail$$1(process.env.NODE_ENV !== \"production\" && \"Cannot obtain atom from \" + thing);\n}\nfunction getAdministration$$1(thing, property) {\n    if (!thing)\n        fail$$1(\"Expecting some object\");\n    if (property !== undefined)\n        return getAdministration$$1(getAtom$$1(thing, property));\n    if (isAtom$$1(thing) || isComputedValue$$1(thing) || isReaction$$1(thing))\n        return thing;\n    if (isObservableMap$$1(thing) || isObservableSet$$1(thing))\n        return thing;\n    // Initializers run lazily when transpiling to babel, so make sure they are run...\n    initializeInstance$$1(thing);\n    if (thing[$mobx$$1])\n        return thing[$mobx$$1];\n    fail$$1(process.env.NODE_ENV !== \"production\" && \"Cannot obtain administration from \" + thing);\n}\nfunction getDebugName$$1(thing, property) {\n    var named;\n    if (property !== undefined)\n        named = getAtom$$1(thing, property);\n    else if (isObservableObject$$1(thing) || isObservableMap$$1(thing) || isObservableSet$$1(thing))\n        named = getAdministration$$1(thing);\n    else\n        named = getAtom$$1(thing); // valid for arrays as well\n    return named.name;\n}\n\nvar toString = Object.prototype.toString;\nfunction deepEqual$$1(a, b) {\n    return eq(a, b);\n}\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b)\n        return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null)\n        return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a)\n        return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\")\n        return false;\n    return deepEq(a, b, aStack, bStack);\n}\n// Internal recursive comparison function for `isEqual`.\nfunction deepEq(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    a = unwrap(a);\n    b = unwrap(b);\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b))\n        return false;\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b;\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a)\n                return +b !== +b;\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b;\n        case \"[object Symbol]\":\n            return (typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));\n    }\n    var areArrays = className === \"[object Array]\";\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\")\n            return false;\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        var aCtor = a.constructor, bCtor = b.constructor;\n        if (aCtor !== bCtor &&\n            !(typeof aCtor === \"function\" &&\n                aCtor instanceof aCtor &&\n                typeof bCtor === \"function\" &&\n                bCtor instanceof bCtor) &&\n            (\"constructor\" in a && \"constructor\" in b)) {\n            return false;\n        }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a)\n            return bStack[length] === b;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length;\n        if (length !== b.length)\n            return false;\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], aStack, bStack))\n                return false;\n        }\n    }\n    else {\n        // Deep compare objects.\n        var keys$$1 = Object.keys(a);\n        var key = void 0;\n        length = keys$$1.length;\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length)\n            return false;\n        while (length--) {\n            // Deep compare each member\n            key = keys$$1[length];\n            if (!(has$1(b, key) && eq(a[key], b[key], aStack, bStack)))\n                return false;\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n}\nfunction unwrap(a) {\n    if (isObservableArray$$1(a))\n        return a.slice();\n    if (isES6Map$$1(a) || isObservableMap$$1(a))\n        return Array.from(a.entries());\n    if (isES6Set$$1(a) || isObservableSet$$1(a))\n        return Array.from(a.entries());\n    return a;\n}\nfunction has$1(a, key) {\n    return Object.prototype.hasOwnProperty.call(a, key);\n}\n\nfunction makeIterable(iterator) {\n    iterator[Symbol.iterator] = self;\n    return iterator;\n}\nfunction self() {\n    return this;\n}\n\n/*\nThe only reason for this file to exist is pure horror:\nWithout it rollup can make the bundling fail at any point in time; when it rolls up the files in the wrong order\nit will cause undefined errors (for example because super classes or local variables not being hosted).\nWith this file that will still happen,\nbut at least in this file we can magically reorder the imports with trial and error until the build succeeds again.\n*/\n\n/**\n * (c) Michel Weststrate 2015 - 2018\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get an global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nif (typeof Proxy === \"undefined\" || typeof Symbol === \"undefined\") {\n    throw new Error(\"[mobx] MobX 5+ requires Proxy and Symbol objects. If your environment doesn't support Symbol or Proxy objects, please downgrade to MobX 4. For React Native Android, consider upgrading JSCore.\");\n}\ntry {\n    // define process.env if needed\n    // if this is not a production build in the first place\n    // (in which case the expression below would be substituted with 'production')\n    process.env.NODE_ENV;\n}\ncatch (e) {\n    var g = typeof window !== \"undefined\" ? window : global;\n    if (typeof process === \"undefined\")\n        g.process = {};\n    g.process.env = {};\n}\n\n(function () {\n    function testCodeMinification() { }\n    if (testCodeMinification.name !== \"testCodeMinification\" &&\n        process.env.NODE_ENV !== \"production\" &&\n        process.env.IGNORE_MOBX_MINIFY_WARNING !== \"true\") {\n        console.warn(\n        // Template literal(backtick) is used for fix issue with rollup-plugin-commonjs https://github.com/rollup/rollup-plugin-commonjs/issues/344\n        \"[mobx] you are running a minified build, but 'process.env.NODE_ENV' was not set to 'production' in your bundler. This results in an unnecessarily large and slow bundle\");\n    }\n})();\n// Devtools support\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy: spy$$1,\n        extras: {\n            getDebugName: getDebugName$$1\n        },\n        $mobx: $mobx$$1\n    });\n}\n\nexport { Reaction$$1 as Reaction, untracked$$1 as untracked, IDerivationState, createAtom$$1 as createAtom, spy$$1 as spy, comparer$$1 as comparer, isObservableObject$$1 as isObservableObject, isObservableValue$$1 as isBoxedObservable, isObservableArray$$1 as isObservableArray, ObservableMap$$1 as ObservableMap, isObservableMap$$1 as isObservableMap, ObservableSet$$1 as ObservableSet, isObservableSet$$1 as isObservableSet, transaction$$1 as transaction, observable$$1 as observable, computed$$1 as computed, isObservable$$1 as isObservable, isObservableProp$$1 as isObservableProp, isComputed$$1 as isComputed, isComputedProp$$1 as isComputedProp, extendObservable$$1 as extendObservable, observe$$1 as observe, intercept$$1 as intercept, autorun$$1 as autorun, reaction$$1 as reaction, when$$1 as when, action$$1 as action, isAction$$1 as isAction, runInAction$$1 as runInAction, keys$$1 as keys, values$$1 as values, entries$$1 as entries, set$$1 as set, remove$$1 as remove, has$$1 as has, get$$1 as get, decorate$$1 as decorate, configure$$1 as configure, onBecomeObserved$$1 as onBecomeObserved, onBecomeUnobserved$$1 as onBecomeUnobserved, flow$$1 as flow, toJS$$1 as toJS, trace$$1 as trace, getDependencyTree$$1 as getDependencyTree, getObserverTree$$1 as getObserverTree, resetGlobalState$$1 as _resetGlobalState, getGlobalState$$1 as _getGlobalState, getDebugName$$1 as getDebugName, getAtom$$1 as getAtom, getAdministration$$1 as _getAdministration, allowStateChanges$$1 as _allowStateChanges, allowStateChangesInsideComputed$$1 as _allowStateChangesInsideComputed, isArrayLike$$1 as isArrayLike, $mobx$$1 as $mobx, isComputingDerivation$$1 as _isComputingDerivation, onReactionError$$1 as onReactionError, interceptReads$$1 as _interceptReads };\n","import {observable, autorun, computed, action} from \"mobx\";\nconst KEY = 'time-schedule';\n\nexport interface TsItem {\n  text: string;\n  time: number;\n  checked: boolean;\n}\n\nexport class Store {\n  @observable plans: TsItem[];\n  handler: {};\n\n  constructor() {\n    const storage = localStorage.getItem(KEY);\n    if (storage) {\n      this.plans = this.sort(JSON.parse(storage));\n    } else {\n      this.plans = [];\n    }\n    this.handler = {};\n  }\n\n  init() {\n    //\n  }\n\n  @computed get all() {\n    return this.plans;\n  }\n\n  @action\n  add(plan) {\n    let plans = [].concat(this.plans, [plan]);\n    this.plans = this.sort(plans);\n  }\n\n  @action\n  remove(index) {\n    this.plans = this.plans.filter((plan, i) => i !== index);\n  }\n\n  @action\n  update(index, plan) {\n    this.plans[index] = Object.assign(this.plans[index], plan);\n  }\n\n  sort(plans) {\n    const now = new Date();\n    plans = plans.map(v => {\n      const date = new Date(v.time);\n      date.setFullYear(now.getFullYear());\n      date.setMonth(now.getMonth());\n      date.setDate(now.getDate());\n      return {\n        ...v,\n        time: date.getTime()\n      };\n    });\n    return plans.sort((a, b) => a.time - b.time);\n  }\n\n  on(name, fn) {\n    if (!this.handler[name]) {\n      this.handler[name] = [];\n    }\n    this.handler[name].push(fn);\n  }\n\n  emit(name) {\n    if (!this.handler[name]) {\n      return;\n    }\n\n    this.handler[name].forEach(fn => {\n      fn();\n    });\n  }\n}\n\nconst store = new Store();\n\nautorun( reaction => {\n  // reaction.dispose();\n  localStorage.setItem(KEY, JSON.stringify(store.plans));\n  store.emit('change');\n});\n\nexport default store;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive so that lit-html will call the function\n * during template rendering, rather than passing as a value.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object\n *\n * @example\n *\n * ```\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n * ```\n */\n// tslint:disable-next-line:no-any\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), into another container (could be the same container), before\n * `beforeNode`. If `beforeNode` is null, it appends the nodes to the\n * container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      let node = start;\n      while (node !== end) {\n        const n = node!.nextSibling;\n        container.insertBefore(node!, before as Node);\n        node = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `startNode` (inclusive) to `endNode`\n * (exclusive), from `container`.\n */\nexport const removeNodes =\n    (container: Node, startNode: Node|null, endNode: Node|null = null):\n        void => {\n          let node = startNode;\n          while (node !== endNode) {\n            const n = node!.nextSibling;\n            container.removeChild(node!);\n            node = n;\n          }\n        };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, cause it to actually be written to the DOM.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange: object = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  parts: TemplatePart[] = [];\n  element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n    let index = -1;\n    let partIndex = 0;\n    const nodesToRemove: Node[] = [];\n    const _prepareTemplate = (template: HTMLTemplateElement) => {\n      const content = template.content;\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          content,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null,\n          false);\n      // Keeps track of the last index associated with a part. We try to delete\n      // unnecessary nodes, but we never want to associate two different parts\n      // to the same index. They must have a constant node between.\n      let lastPartIndex = 0;\n      while (walker.nextNode()) {\n        index++;\n        const node = walker.currentNode as Element | Comment | Text;\n        if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n          if ((node as Element).hasAttributes()) {\n            const attributes = (node as Element).attributes;\n            // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondance between part index and attribute index.\n            let count = 0;\n            for (let i = 0; i < attributes.length; i++) {\n              if (attributes[i].value.indexOf(marker) >= 0) {\n                count++;\n              }\n            }\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              const stringForPart = result.strings[partIndex];\n              // Find the attribute name\n              const name = lastAttributeNameRegex.exec(stringForPart)![2];\n              // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n              const attributeLookupName =\n                  name.toLowerCase() + boundAttributeSuffix;\n              const attributeValue =\n                  (node as Element).getAttribute(attributeLookupName)!;\n              const strings = attributeValue.split(markerRegex);\n              this.parts.push({type: 'attribute', index, name, strings});\n              (node as Element).removeAttribute(attributeLookupName);\n              partIndex += strings.length - 1;\n            }\n          }\n          if ((node as Element).tagName === 'TEMPLATE') {\n            _prepareTemplate(node as HTMLTemplateElement);\n          }\n        } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n          const data = (node as Text).data!;\n          if (data.indexOf(marker) >= 0) {\n            const parent = node.parentNode!;\n            const strings = data.split(markerRegex);\n            const lastIndex = strings.length - 1;\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            for (let i = 0; i < lastIndex; i++) {\n              parent.insertBefore(\n                  (strings[i] === '') ? createMarker() :\n                                        document.createTextNode(strings[i]),\n                  node);\n              this.parts.push({type: 'node', index: ++index});\n            }\n            // If there's no text, we must insert a comment to mark our place.\n            // Else, we can trust it will stick around after cloning.\n            if (strings[lastIndex] === '') {\n              parent.insertBefore(createMarker(), node);\n              nodesToRemove.push(node);\n            } else {\n              (node as Text).data = strings[lastIndex];\n            }\n            // We have a part for each match found\n            partIndex += lastIndex;\n          }\n        } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n          if ((node as Comment).data === marker) {\n            const parent = node.parentNode!;\n            // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * The previousSibling is already the start of a previous part\n            if (node.previousSibling === null || index === lastPartIndex) {\n              index++;\n              parent.insertBefore(createMarker(), node);\n            }\n            lastPartIndex = index;\n            this.parts.push({type: 'node', index});\n            // If we don't have a nextSibling, keep this node so we have an end.\n            // Else, we can remove it to save future costs.\n            if (node.nextSibling === null) {\n              (node as Comment).data = '';\n            } else {\n              nodesToRemove.push(node);\n              index--;\n            }\n            partIndex++;\n          } else {\n            let i = -1;\n            while ((i = (node as Comment).data!.indexOf(marker, i + 1)) !==\n                   -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({type: 'node', index: -1});\n            }\n          }\n        }\n      }\n    };\n    _prepareTemplate(element);\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  type: 'node',\n  index: number\n}|{type: 'attribute', index: number, name: string, strings: string[]};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#attributes-0\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-character\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \\x09\\x0a\\x0c\\x0d\"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  _parts: Array<Part|undefined> = [];\n  processor: TemplateProcessor;\n  options: RenderOptions;\n  template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: unknown[]) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // When using the Custom Elements polyfill, clone the node, rather than\n    // importing it, to keep the fragment in the template's document. This\n    // leaves the fragment inert so custom elements won't upgrade and\n    // potentially modify their contents by creating a polyfilled ShadowRoot\n    // while we traverse the tree.\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const parts = this.template.parts;\n    let partIndex = 0;\n    let nodeIndex = 0;\n    const _prepareInstance = (fragment: DocumentFragment) => {\n      // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be\n      // null\n      const walker = document.createTreeWalker(\n          fragment,\n          133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n          null,\n          false);\n      let node = walker.nextNode();\n      // Loop through all the nodes and parts of a template\n      while (partIndex < parts.length && node !== null) {\n        const part = parts[partIndex];\n        // Consecutive Parts may have the same node index, in the case of\n        // multiple bound attributes on an element. So each iteration we either\n        // increment the nodeIndex, if we aren't on a node with a part, or the\n        // partIndex if we are. By not incrementing the nodeIndex when we find a\n        // part, we allow for the next part to be associated with the current\n        // node if neccessasry.\n        if (!isTemplatePartActive(part)) {\n          this._parts.push(undefined);\n          partIndex++;\n        } else if (nodeIndex === part.index) {\n          if (part.type === 'node') {\n            const part = this.processor.handleTextExpression(this.options);\n            part.insertAfterNode(node.previousSibling!);\n            this._parts.push(part);\n          } else {\n            this._parts.push(...this.processor.handleAttributeExpressions(\n                node as Element, part.name, part.strings, this.options));\n          }\n          partIndex++;\n        } else {\n          nodeIndex++;\n          if (node.nodeName === 'TEMPLATE') {\n            _prepareInstance((node as HTMLTemplateElement).content);\n          }\n          node = walker.nextNode();\n        }\n      }\n    };\n    _prepareInstance(fragment);\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  strings: TemplateStringsArray;\n  values: unknown[];\n  type: string;\n  processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: unknown[], type: string,\n      processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const endIndex = this.strings.length - 1;\n    let html = '';\n    for (let i = 0; i < endIndex; i++) {\n      const s = this.strings[i];\n      // This exec() call does two things:\n      // 1) Appends a suffix to the bound attribute name to opt out of special\n      // attribute value parsing that IE11 and Edge do, like for style and\n      // many SVG attributes. The Template class also appends the same suffix\n      // when looking up attributes to create Parts.\n      // 2) Adds an unquoted-attribute-safe marker for the first expression in\n      // an attribute. Subsequent attribute expressions will use node markers,\n      // and this is safe since attributes with multiple expressions are\n      // guaranteed to be quoted.\n      const match = lastAttributeNameRegex.exec(s);\n      if (match) {\n        // We're starting a new bound attribute.\n        // Add the safe attribute suffix, and use unquoted-attribute-safe\n        // marker.\n        html += s.substr(0, match.index) + match[1] + match[2] +\n            boundAttributeSuffix + match[3] + marker;\n      } else {\n        // We're either in a bound node, or trailing bound attribute.\n        // Either way, nodeMarker is safe to use.\n        html += s + nodeMarker;\n      }\n    }\n    return html + this.strings[endIndex];\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTMl in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\n\n/**\n * Sets attribute values for AttributeParts, so that the value is only set once\n * even if there are multiple parts for an attribute.\n */\nexport class AttributeCommitter {\n  element: Element;\n  name: string;\n  strings: string[];\n  parts: AttributePart[];\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      this.parts[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (v != null &&\n            (Array.isArray(v) ||\n             // tslint:disable-next-line:no-any\n             typeof v !== 'string' && (v as any)[Symbol.iterator])) {\n          for (const t of v as Iterable<unknown>) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        } else {\n          text += typeof v === 'string' ? v : String(v);\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\nexport class AttributePart implements Part {\n  committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(comitter: AttributeCommitter) {\n    this.committer = comitter;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\nexport class NodePart implements Part {\n  options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  _pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Inserts this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part between `ref` and `ref`'s next sibling. Both `ref` and\n   * its next sibling must be static, unchanging nodes such as those that appear\n   * in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part._insert(this.startNode = createMarker());\n    part._insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Appends this part after `ref`\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref._insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    const value = this._pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this._commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this._commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this._commitNode(value);\n    } else if (\n        Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        (value as any)[Symbol.iterator]) {\n      this._commitIterable(value as Iterable<unknown>);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this._insert(value);\n    this.value = value;\n  }\n\n  private _commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = value as string;\n    } else {\n      this._commitNode(document.createTextNode(\n          typeof value === 'string' ? value : String(value)));\n    }\n    this.value = value;\n  }\n\n  private _commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this._commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart!.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  element: Element;\n  name: string;\n  strings: string[];\n  value: unknown = undefined;\n  _pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n    const value = !!this._pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    }\n    this.value = value;\n    this._pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  single: boolean;\n\n  constructor(element: Element, name: string, strings: string[]) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  element: Element;\n  eventName: string;\n  eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  _options?: AddEventListenerOptions;\n  _pendingValue: undefined|EventHandlerWithOptions = undefined;\n  _boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this._boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this._pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this._pendingValue)) {\n      const directive = this._pendingValue;\n      this._pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this._pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this._pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    if (shouldAddListener) {\n      this._options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this._boundHandleEvent, this._options);\n    }\n    this.value = newListener;\n    this._pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): Part[] {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const comitter = new PropertyCommitter(element, name.slice(1), strings);\n      return comitter.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const comitter = new AttributeCommitter(element, name, strings);\n    return comitter.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  stringsArray: WeakMap<TemplateStringsArray, Template>;\n  keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\nimport {TemplateResult} from './template-result.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result a TemplateResult created by evaluating a template tag like\n *     `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: TemplateResult,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.0.0');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {DirectiveFn} from '../lib/directive.js';\nimport {createMarker, directive, NodePart, Part, removeNodes, reparentNodes} from '../lit-html.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart =\n    (containerPart: NodePart, beforePart?: NodePart): NodePart => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = beforePart === undefined ? containerPart.endNode :\n                                                    beforePart.startNode;\n      const startNode = container.insertBefore(createMarker(), beforeNode);\n      container.insertBefore(createMarker(), beforeNode);\n      const newPart = new NodePart(containerPart.options);\n      newPart.insertAfterNode(startNode);\n      return newPart;\n    };\n\nconst updatePart = (part: NodePart, value: unknown) => {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nconst insertPartBefore =\n    (containerPart: NodePart, part: NodePart, ref?: NodePart) => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = ref ? ref.startNode : containerPart.endNode;\n      const endNode = part.endNode.nextSibling;\n      if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n      }\n    };\n\nconst removePart = (part: NodePart) => {\n  removeNodes(\n      part.startNode.parentNode!, part.startNode, part.endNode.nextSibling);\n};\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap<NodePart, (NodePart | null)[]>();\nconst keyListCache = new WeakMap<NodePart, unknown[]>();\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat =\n    directive(\n        <T>(items: Iterable<T>,\n            keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n            template?: ItemTemplate<T>):\n            DirectiveFn => {\n              let keyFn: KeyFn<T>;\n              if (template === undefined) {\n                template = keyFnOrTemplate;\n              } else if (keyFnOrTemplate !== undefined) {\n                keyFn = keyFnOrTemplate as KeyFn<T>;\n              }\n\n              return (containerPart: Part): void => {\n                if (!(containerPart instanceof NodePart)) {\n                  throw new Error('repeat can only be used in text bindings');\n                }\n                // Old part & key lists are retrieved from the last update\n                // (associated with the part for this instance of the directive)\n                const oldParts = partListCache.get(containerPart) || [];\n                const oldKeys = keyListCache.get(containerPart) || [];\n\n                // New part list will be built up as we go (either reused from\n                // old parts or created for new keys in this update). This is\n                // saved in the above cache at the end of the update.\n                const newParts: NodePart[] = [];\n\n                // New value list is eagerly generated from items along with a\n                // parallel array indicating its key.\n                const newValues: unknown[] = [];\n                const newKeys: unknown[] = [];\n                let index = 0;\n                for (const item of items) {\n                  newKeys[index] = keyFn ? keyFn(item, index) : index;\n                  newValues[index] = template !(item, index);\n                  index++;\n                }\n\n                // Maps from key to index for current and previous update; these\n                // are generated lazily only when needed as a performance\n                // optimization, since they are only required for multiple\n                // non-contiguous changes in the list, which are less common.\n                let newKeyToIndexMap!: Map<unknown, number>;\n                let oldKeyToIndexMap!: Map<unknown, number>;\n\n                // Head and tail pointers to old parts and new values\n                let oldHead = 0;\n                let oldTail = oldParts.length - 1;\n                let newHead = 0;\n                let newTail = newValues.length - 1;\n\n                // Overview of O(n) reconciliation algorithm (general approach\n                // based on ideas found in ivi, vue, snabbdom, etc.):\n                //\n                // * We start with the list of old parts and new values (and\n                // arrays of\n                //   their respective keys), head/tail pointers into each, and\n                //   we build up the new list of parts by updating (and when\n                //   needed, moving) old parts or creating new ones. The initial\n                //   scenario might look like this (for brevity of the diagrams,\n                //   the numbers in the array reflect keys associated with the\n                //   old parts or new values, although keys and parts/values are\n                //   actually stored in parallel arrays indexed using the same\n                //   head/tail pointers):\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n                //   item order\n                //      newHead ^                 ^ newTail\n                //\n                // * Iterate old & new lists from both sides, updating,\n                // swapping, or\n                //   removing parts at the head/tail locations until neither\n                //   head nor tail can move.\n                //\n                // * Example below: keys at head pointers match, so update old\n                // part 0 in-\n                //   place (no need to move it) and record part 0 in the\n                //   `newParts` list. The last thing we do is advance the\n                //   `oldHead` and `newHead` pointers (will be reflected in the\n                //   next diagram).\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n                //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead\n                //   & newHead\n                //      newHead ^                 ^ newTail\n                //\n                // * Example below: head pointers don't match, but tail pointers\n                // do, so\n                //   update part 6 in place (no need to move it), and record\n                //   part 6 in the `newParts` list. Last, advance the `oldTail`\n                //   and `oldHead` pointers.\n                //\n                //         oldHead v              v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n                //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldTail\n                //   & newTail\n                //         newHead ^              ^ newTail\n                //\n                // * If neither head nor tail match; next check if one of the\n                // old head/tail\n                //   items was removed. We first need to generate the reverse\n                //   map of new keys to index (`newKeyToIndexMap`), which is\n                //   done once lazily as a performance optimization, since we\n                //   only hit this case if multiple non-contiguous changes were\n                //   made. Note that for contiguous removal anywhere in the\n                //   list, the head and tails would advance from either end and\n                //   pass each other before we get to this case and removals\n                //   would be handled in the final while loop without needing to\n                //   generate the map.\n                //\n                // * Example below: The key at `oldTail` was removed (no longer\n                // in the\n                //   `newKeyToIndexMap`), so remove that part from the DOM and\n                //   advance just the `oldTail` pointer.\n                //\n                //         oldHead v           v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map; remove\n                //   5 and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance oldTail\n                //         newHead ^           ^ newTail\n                //\n                // * Once head and tail cannot move, any mismatches are due to\n                // either new or\n                //   moved items; if a new key is in the previous \"old key to\n                //   old index\" map, move the old part to the new location,\n                //   otherwise create and insert a new part. Note that when\n                //   moving an old part we null its position in the oldParts\n                //   array if it lies between the head and tail so we know to\n                //   skip it when the pointers get there.\n                //\n                // * Example below: neither head nor tail match, and neither\n                // were removed;\n                //   so find the `newHead` key in the `oldKeyToIndexMap`, and\n                //   move that old part's DOM into the next head position\n                //   (before `oldParts[oldHead]`). Last, null the part in the\n                //   `oldPart` array since it was somewhere in the remaining\n                //   oldParts still to be scanned (between the head and tail\n                //   pointers) so that we know to skip that old part on future\n                //   iterations.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck; update & move 2\n                //   into place newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance\n                //   newHead\n                //         newHead ^           ^ newTail\n                //\n                // * Note that for moves/insertions like the one above, a part\n                // inserted at\n                //   the head pointer is inserted before the current\n                //   `oldParts[oldHead]`, and a part inserted at the tail\n                //   pointer is inserted before `newParts[newTail+1]`. The\n                //   seeming asymmetry lies in the fact that new parts are moved\n                //   into place outside in, so to the right of the head pointer\n                //   are old parts, and to the right of the tail pointer are new\n                //   parts.\n                //\n                // * We always restart back from the top of the algorithm,\n                // allowing matching\n                //   and simple updates in place to continue...\n                //\n                // * Example below: the head pointers once again match, so\n                // simply update\n                //   part 1 and record it in the `newParts` array.  Last,\n                //   advance both head pointers.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched; update 1\n                //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead\n                //   & newHead\n                //            newHead ^        ^ newTail\n                //\n                // * As mentioned above, items that were moved as a result of\n                // being stuck\n                //   (the final else clause in the code below) are marked with\n                //   null, so we always advance old pointers over these so we're\n                //   comparing the next actual old value on either end.\n                //\n                // * Example below: `oldHead` is null (already placed in\n                // newParts), so\n                //   advance `oldHead`.\n                //\n                //            oldHead v     v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6] // old head already used;\n                //   advance newParts: [0, 2, 1,  ,  ,  , 6] // oldHead newKeys:\n                //   [0, 2, 1, 4, 3, 7, 6]\n                //               newHead ^     ^ newTail\n                //\n                // * Note it's not critical to mark old parts as null when they\n                // are moved\n                //   from head to tail or tail to head, since they will be\n                //   outside the pointer range and never visited again.\n                //\n                // * Example below: Here the old tail key matches the new head\n                // key, so\n                //   the part at the `oldTail` position and move its DOM to the\n                //   new head position (before `oldParts[oldHead]`). Last,\n                //   advance `oldTail` and `newHead` pointers.\n                //\n                //               oldHead v  v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n                //   head: update newKeys:  [0, 2, 1, 4, 3, 7, 6]   & move 4,\n                //   advance oldTail & newHead\n                //               newHead ^     ^ newTail\n                //\n                // * Example below: Old and new head keys match, so update the\n                // old head\n                //   part in place, and advance the `oldHead` and `newHead`\n                //   pointers.\n                //\n                //               oldHead v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n                //   and advance newKeys:  [0, 2, 1, 4, 3, 7, 6]    oldHead &\n                //   newHead\n                //                  newHead ^  ^ newTail\n                //\n                // * Once the new or old pointers move past each other then all\n                // we have\n                //   left is additions (if old list exhausted) or removals (if\n                //   new list exhausted). Those are handled in the final while\n                //   loops at the end.\n                //\n                // * Example below: `oldHead` exceeded `oldTail`, so we're done\n                // with the\n                //   main loop.  Create the remaining part and insert it at the\n                //   new head position, and the update is complete.\n                //\n                //                   (oldHead > oldTail)\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //                     newHead ^ newTail\n                //\n                // * Note that the order of the if/else clauses is not important\n                // to the\n                //   algorithm, as long as the null checks come first (to ensure\n                //   we're always working on valid old parts) and that the final\n                //   else clause comes last (since that's where the expensive\n                //   moves occur). The order of remaining clauses is is just a\n                //   simple guess at which cases will be most common.\n                //\n                // * TODO(kschaaf) Note, we could calculate the longest\n                // increasing\n                //   subsequence (LIS) of old items in new position, and only\n                //   move those not in the LIS set. However that costs O(nlogn)\n                //   time and adds a bit more code, and only helps make rare\n                //   types of mutations require fewer moves. The above handles\n                //   removes, adds, reversal, swaps, and single moves of\n                //   contiguous items in linear time, in the minimum number of\n                //   moves. As the number of multiple moves where LIS might help\n                //   approaches a random shuffle, the LIS optimization becomes\n                //   less helpful, so it seems not worth the code at this point.\n                //   Could reconsider if a compelling case arises.\n\n                while (oldHead <= oldTail && newHead <= newTail) {\n                  if (oldParts[oldHead] === null) {\n                    // `null` means old part at head has already been used\n                    // below; skip\n                    oldHead++;\n                  } else if (oldParts[oldTail] === null) {\n                    // `null` means old part at tail has already been used\n                    // below; skip\n                    oldTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newHead]) {\n                    // Old head matches new head; update in place\n                    newParts[newHead] =\n                        updatePart(oldParts[oldHead]!, newValues[newHead]);\n                    oldHead++;\n                    newHead++;\n                  } else if (oldKeys[oldTail] === newKeys[newTail]) {\n                    // Old tail matches new tail; update in place\n                    newParts[newTail] =\n                        updatePart(oldParts[oldTail]!, newValues[newTail]);\n                    oldTail--;\n                    newTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newTail]) {\n                    // Old head matches new tail; update and move to new tail\n                    newParts[newTail] =\n                        updatePart(oldParts[oldHead]!, newValues[newTail]);\n                    insertPartBefore(\n                        containerPart,\n                        oldParts[oldHead]!,\n                        newParts[newTail + 1]);\n                    oldHead++;\n                    newTail--;\n                  } else if (oldKeys[oldTail] === newKeys[newHead]) {\n                    // Old tail matches new head; update and move to new head\n                    newParts[newHead] =\n                        updatePart(oldParts[oldTail]!, newValues[newHead]);\n                    insertPartBefore(\n                        containerPart, oldParts[oldTail]!, oldParts[oldHead]!);\n                    oldTail--;\n                    newHead++;\n                  } else {\n                    if (newKeyToIndexMap === undefined) {\n                      // Lazily generate key-to-index maps, used for removals &\n                      // moves below\n                      newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                      oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                    }\n                    if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                      // Old head is no longer in new list; remove\n                      removePart(oldParts[oldHead]!);\n                      oldHead++;\n                    } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                      // Old tail is no longer in new list; remove\n                      removePart(oldParts[oldTail]!);\n                      oldTail--;\n                    } else {\n                      // Any mismatches at this point are due to additions or\n                      // moves; see if we have an old part we can reuse and move\n                      // into place\n                      const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                      const oldPart =\n                          oldIndex !== undefined ? oldParts[oldIndex] : null;\n                      if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(\n                            containerPart, oldParts[oldHead]!);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                      } else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(\n                            containerPart, oldPart, oldParts[oldHead]!);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex as number] = null;\n                      }\n                      newHead++;\n                    }\n                  }\n                }\n                // Add parts for any remaining new values\n                while (newHead <= newTail) {\n                  // For all remaining additions, we insert before last new\n                  // tail, since old pointers are no longer valid\n                  const newPart = createAndInsertPart(\n                      containerPart, newParts[newTail + 1]!);\n                  updatePart(newPart, newValues[newHead]);\n                  newParts[newHead++] = newPart;\n                }\n                // Remove any remaining unused old parts\n                while (oldHead <= oldTail) {\n                  const oldPart = oldParts[oldHead++];\n                  if (oldPart !== null) {\n                    removePart(oldPart);\n                  }\n                }\n                // Save order of new parts for next round\n                partListCache.set(containerPart, newParts);\n                keyListCache.set(containerPart, newKeys);\n              };\n            }) as\n    <T>(items: Iterable<T>,\n        keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n        template?: ItemTemplate<T>) => DirectiveFn;\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part, PropertyPart} from '../lit-html.js';\n\n\n// On IE11, classList.toggle doesn't accept a second argument.\n// Since this is so minor, we just polyfill it.\nif (window.navigator.userAgent.match('Trident')) {\n  DOMTokenList.prototype.toggle = function(\n      token: string, force?: boolean|undefined) {\n    if (force === undefined || force) {\n      this.add(token);\n    } else {\n      this.remove(token);\n    }\n    return force === undefined ? true : force;\n  };\n}\n\nexport interface ClassInfo {\n  [name: string]: string|boolean|number;\n}\n\n/**\n * Stores the ClassInfo object applied to a given AttributePart.\n * Used to unset existing values when a new ClassInfo object is applied.\n */\nconst classMapCache = new WeakMap();\n\n/**\n * Stores AttributeParts that have had static classes applied (e.g. `foo` in\n * class=\"foo ${classMap()}\"). Static classes are applied only the first time\n * the directive is run on a part.\n */\n// Note, could be a WeakSet, but prefer not requiring this polyfill.\nconst classMapStatics = new WeakMap();\n\n/**\n * A directive that applies CSS classes. This must be used in the `class`\n * attribute and must be the only part used in the attribute. It takes each\n * property in the `classInfo` argument and adds the property name to the\n * element's `classList` if the property value is truthy; if the property value\n * is falsey, the property name is removed from the element's `classList`. For\n * example\n * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n * @param classInfo {ClassInfo}\n */\nexport const classMap = directive((classInfo: ClassInfo) => (part: Part) => {\n  if (!(part instanceof AttributePart) || (part instanceof PropertyPart) ||\n      part.committer.name !== 'class' || part.committer.parts.length > 1) {\n    throw new Error(\n        'The `classMap` directive must be used in the `class` attribute ' +\n        'and must be the only part in the attribute.');\n  }\n  // handle static classes\n  if (!classMapStatics.has(part)) {\n    part.committer.element.className = part.committer.strings.join(' ');\n    classMapStatics.set(part, true);\n  }\n  // remove old classes that no longer apply\n  const oldInfo = classMapCache.get(part);\n  for (const name in oldInfo) {\n    if (!(name in classInfo)) {\n      part.committer.element.classList.remove(name);\n    }\n  }\n  // add new classes\n  for (const name in classInfo) {\n    if (!oldInfo || (oldInfo[name] !== classInfo[name])) {\n      // We explicitly want a loose truthy check here because\n      // it seems more convenient that '' and 0 are skipped.\n      part.committer.element.classList.toggle(name, Boolean(classInfo[name]));\n    }\n  }\n  classMapCache.set(part, classInfo);\n});\n","const debounce = (fn, interval) => {\n  let timerId;\n  return () => {\n    clearTimeout(timerId);\n    const context = this;\n    const args = arguments;\n    timerId = setTimeout(() => {\n      fn.apply(context, args);\n    }, interval);\n  };\n};\n\nexport default debounce;\n","import { html, render, svg } from 'lit-html';\nimport { repeat } from 'lit-html/directives/repeat';\nimport { classMap } from 'lit-html/directives/class-map';\nimport debounce from './_debounce';\nimport { Store, TsItem } from './_store';\n\nexport default class App {\n  store: Partial<Store>;\n  list: TsItem[];\n  selectedNo: number;\n  isSheetActive: boolean;\n  root: HTMLElement;\n  cpPickerRowHeight: number;\n  cpPickerRows: number;\n\n  constructor(store) {\n    this.store = store;\n    this.store.on('change', () => {\n      this.list = this.store.all;\n      this.__updateCustomProperty();\n      this.__render();\n    });\n\n    this.list = this.store.all;\n    this.selectedNo = -1;\n    this.isSheetActive = false;\n\n    // DOM・CustomProperty\n    this.root = document.querySelector('#app');\n    this.__getCustomProperty();\n    this.__updateCustomProperty();\n\n\n    // hanler系\n    this.handleAddClick = this.handleAddClick.bind(this);\n    this.handleLayerClick = this.handleLayerClick.bind(this);\n    this.handleSaveClick = this.handleSaveClick.bind(this);\n    this.handleHourScroll = this.handleHourScroll.bind(this);\n    this.handleTimeScroll = this.handleTimeScroll.bind(this);\n    this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    this.handleTimeClick = this.handleTimeClick.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleHourScrollEnd = debounce(\n      this.handleHourScrollEnd.bind(this),\n      100\n    );\n    this.handleTimeScrollEnd = debounce(\n      this.handleTimeScrollEnd.bind(this),\n      100\n    );\n    this.handleHourItemTap = this.handleHourItemTap.bind(this);\n    this.handleTimeItemTap = this.handleTimeItemTap.bind(this);\n    this.handleCheckClick = this.handleCheckClick.bind(this);\n    this.handleTextFocus = this.handleTextFocus.bind(this);\n    this.handleTextBlur = this.handleTextBlur.bind(this);\n  }\n\n  $(selector) {\n    return this.root.querySelector(selector);\n  }\n\n  $$(selector) {\n    return this.root.querySelectorAll(selector);\n  }\n\n  __template() {\n    return html`\n      <div class=\"container\">\n        <div class=\"head\">\n          <div class=\"head__icon\">\n            ${svg`\n              <svg viewBox=\"0 0 373.929 500\">\n                <g transform=\"translate(-64.548 0)\">\n                  <path class=\"cls-1\" d=\"M256,343.319A23.283,23.283,0,0,0,269.556,301.1l-8.42-112.928c-.225-3.032-2.456-5.37-5.137-5.37s-4.911,2.338-5.136,5.37L242.443,301.1A23.283,23.283,0,0,0,256,343.319Z\" transform=\"translate(-4.487 -6.241)\"/>\n                  <path class=\"cls-2\" d=\"M423.778,242.355A187.656,187.656,0,0,0,96.49,210.841a184.458,184.458,0,0,0-17.244,175.9A186.922,186.922,0,0,0,195.923,491.66a187.665,187.665,0,0,0,210.611-73.41,184.437,184.437,0,0,0,17.243-175.9ZM251.512,173.2A142.652,142.652,0,0,1,369.69,235.533a140.617,140.617,0,0,1,13.133,134.026,143.022,143.022,0,0,1-249.486,24A140.609,140.609,0,0,1,120.2,259.539,142.568,142.568,0,0,1,251.512,173.2Z\" transform=\"translate(0)\"/>\n                  <path class=\"cls-1\" d=\"M431.28,140.634l-28.532-23.956-29.969,35.716,28.54,23.956Z\" transform=\"translate(-8.974 -3.095)\"/>\n                  <path class=\"cls-2\" d=\"M228.578,99.74v16.938h54.843V99.74a53.653,53.653,0,1,0-54.843,0Zm0-30.664V83c-.334-.308-.668-.617-.994-.943a40.189,40.189,0,1,1,56.839,0c-.334.326-.668.635-1,.943V69.076Z\" transform=\"translate(-4.487)\"/>\n                </g>\n              </svg>\n            `}\n          </div>\n        </div>\n        <div class=\"body\">\n          <div class=\"list\">\n            ${repeat(this.list, (item, i) => {\n              const date = new Date(item.time);\n              return html`\n                <div\n                  class=\"${classMap({\n                    list__item: true,\n                    item: true,\n                    'item--selected': this.selectedNo === i\n                  })}\"\n                >\n                  <div class=\"item__checkWrap\" index=\"${i}\" @click=\"${this.handleCheckClick}\">\n                    <div\n                      class=\"${classMap({\n                        item__check: true,\n                        'item__check--checked': !!item.checked\n                      })}\"\n                    >\n                      <i class=\"material-icons\">check</i>\n                    </div>\n                  </div>\n                  <div class=\"item__timeWrap\" index=\"${i}\" @click=\"${this.handleTimeClick}\">\n                    <div class=\"item__time\">\n                      ${String(date.getHours()).padStart(2, '0')}:${String(\n                        date.getMinutes()\n                      ).padStart(2, '0')}\n                    </div>\n                  </div>\n                  <div class=\"item__text\">\n                    <input\n                      type=\"text\"\n                      value=\"${item.text}\"\n                      placeholder=\"テキストを入力\"\n                      index=\"${i}\"\n                      @change=\"${this.handleTextChange}\"\n                      @focus=\"${this.handleTextFocus}\"\n                      @blur=\"${this.handleTextBlur}\"\n                    />\n                  </div>\n                  <div\n                    class=\"item__delete\"\n                    index=\"${i}\"\n                    @click=\"${this.handleDeleteClick}\"\n                  >\n                    <i class=\"material-icons\">delete_outline</i>\n                  </div>\n                </div>\n              `;\n            })}\n          </div>\n          <div class=\"add\" @click=\"${this.handleAddClick}\">\n            <i class=\"material-icons\">add_circle</i>\n          </div>\n        </div>\n        <div class=\"tail\"></div>\n        <div\n          class=\"${classMap({\n            sheet: true,\n            'sheet--active': this.isSheetActive\n          })}\"\n          @click=\"${this.handleLayerClick}\"\n        >\n          <div class=\"sheet__container\">\n            <div class=\"wrap\">\n              <div class=\"hour\" @scroll=\"${this.handleHourScroll}\">\n                ${this.__getDummyPickerHourItem()}\n                ${repeat(\n                  Array.from({ length: 24 }, (v, i) => i),\n                  (item, i) => html`\n                    <div\n                      class=\"hour__item\"\n                      index=\"${i}\"\n                      @click=\"${this.handleHourItemTap}\"\n                    >\n                      ${item}\n                    </div>\n                  `\n                )}\n                ${this.__getDummyPickerHourItem()}\n              </div>\n              <div class=\"time\" @scroll=\"${this.handleTimeScroll}\">\n                ${this.__getDummyPickerTimeItem()}\n                ${repeat(\n                  Array.from({ length: 60 }, (v, i) => i),\n                  (item, i) => html`\n                    <div\n                      class=\"time__item\"\n                      index=\"${i}\"\n                      @click=\"${this.handleTimeItemTap}\"\n                    >\n                      ${item}\n                    </div>\n                  `\n                )}\n                ${this.__getDummyPickerTimeItem()}\n              </div>\n            </div>\n            <div class=\"save\" @click=\"${this.handleSaveClick}\">save</div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  __render() {\n    render(this.__template(), document.getElementById('app'));\n  }\n\n  /**\n   * 時間の押下時\n   * @param e\n   */\n  handleTimeClick(e) {\n    this.selectedNo = Number(e.currentTarget.getAttribute('index'));\n    this.isSheetActive = true;\n    const date = new Date(this.list[this.selectedNo].time);\n    this.__moveHourPicker(date.getHours());\n    this.__moveTimePicker(date.getMinutes());\n    this.__render();\n  }\n\n  /**\n   * 追加押下時\n   */\n  handleAddClick() {\n    this.store.add({\n      time: Date.now(),\n      text: ''\n    });\n  }\n\n  /**\n   * 保存押下時\n   */\n  handleSaveClick() {\n    const selectedNo = this.selectedNo;\n    this.selectedNo = -1;\n    this.isSheetActive = false;\n    const hour = Math.round(\n      this.$('.hour').scrollTop / this.cpPickerRowHeight\n    );\n    const time = Math.round(\n      this.$('.time').scrollTop / this.cpPickerRowHeight\n    );\n    const date = new Date();\n    date.setHours(hour);\n    date.setMinutes(time);\n    this.store.update(selectedNo, {\n      time: date.getTime()\n    });\n  }\n\n  /**\n   * Sheetのレイヤー押下時\n   * @param e\n   */\n  handleLayerClick(e) {\n    if (e.target.classList.contains('sheet')) {\n      this.selectedNo = -1;\n      this.isSheetActive = false;\n      this.__render();\n    }\n  }\n\n  handleHourScroll(e) {\n    // e.target.scrollTop\n    // console.log(e.target.scrollTop / this.cpPickerRowHeight);\n    this.handleHourScrollEnd(e);\n  }\n\n  handleTimeScroll(e) {\n    // e.target.scrollTop\n    // console.log(e.target.scrollTop / this.cpPickerRowHeight);\n    this.handleTimeScrollEnd(e);\n  }\n\n  handleHourScrollEnd(e) {\n    // console.log('Hour End', this.selectedNo);\n  }\n\n  handleTimeScrollEnd(e) {\n    // console.log('Time End', this.selectedNo);\n  }\n\n  /**\n   * 削除ボタン押下時\n   * @param e\n   */\n  handleDeleteClick(e) {\n    e.stopPropagation();\n    const index = Number(e.currentTarget.getAttribute('index'));\n    // const item = this.$$('.item')[index];\n    // const animation = item.animate({\n    //   height: ['42px', 0],\n    //   opacity: [1, 0],\n    //   backgroundColor:   ['rgba(194, 208, 204, 0.4)', 'transparent']\n    // }, 200);\n    // animation.onfinish = () => {\n    //   this.store.remove(index);\n    // };\n    this.store.remove(index);\n  }\n\n  /**\n   * テキストの変更時\n   * @param e\n   */\n  handleTextChange(e) {\n    const index = Number(e.currentTarget.getAttribute('index'));\n    this.store.update(index, {\n      text: e.target.value\n    });\n  }\n\n  /**\n   * HourPickerの押下時\n   * @param e\n   */\n  handleHourItemTap(e) {\n    const index = Number(e.currentTarget.getAttribute('index'));\n    this.__moveHourPicker(index);\n  }\n\n  /**\n   * TimePickerの押下時\n   * @param e\n   */\n  handleTimeItemTap(e) {\n    const index = Number(e.currentTarget.getAttribute('index'));\n    this.__moveTimePicker(index);\n  }\n\n  /**\n   * チェックボックスの押下時\n   * @param e\n   */\n  handleCheckClick(e) {\n    const index = Number(e.currentTarget.getAttribute('index'));\n    this.store.update(index, {\n      checked: !this.list[index].checked\n    });\n  }\n\n  /**\n   * textのfocus時\n   * @param e\n   */\n  handleTextFocus(e) {\n    const index = Number(e.currentTarget.getAttribute('index'));\n    this.selectedNo = index;\n    this.__render();\n  }\n\n  /**\n   * textのblur時\n   * @param e\n   */\n  handleTextBlur(e) {\n    this.selectedNo = -1;\n    this.__render();\n  }\n\n  /**\n   * Custom Propertyを取得\n   * @private\n   */\n  __getCustomProperty() {\n    const style = window.getComputedStyle(this.root);\n    this.cpPickerRowHeight = Number(\n      style.getPropertyValue('--ts-picker-row-height').split('px')[0]\n    );\n    this.cpPickerRows = Number(style.getPropertyValue('--ts-picker-rows'));\n  }\n\n  /**\n   * Custom Propertyを更新\n   * @private\n   */\n  __updateCustomProperty() {\n    const now = new Date().getTime();\n    const endedList = this.list.filter(v => v.time < now);\n    this.root.style.setProperty('--ts-ended-bar-height', `${endedList.length}`);\n    // listの要素数を設定\n    this.root.style.setProperty('--ts-list-rows', `${this.list.length}`);\n  }\n\n  /**\n   * HourPickerの更新\n   * @param index\n   * @private\n   */\n  __moveHourPicker(index) {\n    this.$('.hour').scrollTo(0, index * this.cpPickerRowHeight);\n  }\n\n  /**\n   * TimePickerの更新\n   * @param index\n   * @private\n   */\n  __moveTimePicker(index) {\n    this.$('.time').scrollTo(0, index * this.cpPickerRowHeight);\n  }\n\n  /**\n   * pickerのダミー用のtemplateを取得\n   * @private\n   */\n  __getDummyPickerHourItem() {\n    return html`\n      ${repeat(\n        Array.from({ length: Math.floor(this.cpPickerRows / 2) }, (v, i) => i),\n        () => html`\n          <div class=\"hour__item hour__item--dummy\"></div>\n        `\n      )}\n    `;\n  }\n\n  /**\n   * pickerのダミー用のtemplateを取得\n   * @private\n   */\n  __getDummyPickerTimeItem() {\n    return html`\n      ${repeat(\n        Array.from({ length: Math.floor(this.cpPickerRows / 2) }, (v, i) => i),\n        () => html`\n          <div class=\"time__item time__item--dummy\"></div>\n        `\n      )}\n    `;\n  }\n}\n","import store from './_store';\nimport App from './_app';\n\nPromise.resolve()\n  .then(() => store.init())\n  .then(() => {\n    const app = new App(store);\n    app.__render();\n  });\n"]}