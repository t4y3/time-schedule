{"id":"cGPc","dependencies":[{"name":"/Users/y41132/scm/github/etc/time-schedule/node_modules/lit-html/directives/repeat.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/y41132/scm/github/etc/time-schedule/package.json","includedInParent":true,"mtime":1557061513586},{"name":"/Users/y41132/scm/github/etc/time-schedule/node_modules/lit-html/package.json","includedInParent":true,"mtime":1556864977540},{"name":"../lit-html.js","loc":{"line":14,"column":78},"parent":"/Users/y41132/scm/github/etc/time-schedule/node_modules/lit-html/directives/repeat.js","resolved":"/Users/y41132/scm/github/etc/time-schedule/node_modules/lit-html/lit-html.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.repeat=void 0;var e=require(\"../lit-html.js\");const t=(t,o)=>{const r=t.startNode.parentNode,n=void 0===o?t.endNode:o.startNode,s=r.insertBefore((0,e.createMarker)(),n);r.insertBefore((0,e.createMarker)(),n);const i=new e.NodePart(t.options);return i.insertAfterNode(s),i},o=(e,t)=>(e.setValue(t),e.commit(),e),r=(t,o,r)=>{const n=t.startNode.parentNode,s=r?r.startNode:t.endNode,i=o.endNode.nextSibling;i!==s&&(0,e.reparentNodes)(n,o.startNode,i,s)},n=t=>{(0,e.removeNodes)(t.startNode.parentNode,t.startNode,t.endNode.nextSibling)},s=(e,t,o)=>{const r=new Map;for(let n=t;n<=o;n++)r.set(e[n],n);return r},i=new WeakMap,l=new WeakMap,d=(0,e.directive)((d,a,f)=>{let c;return void 0===f?f=a:void 0!==a&&(c=a),a=>{if(!(a instanceof e.NodePart))throw new Error(\"repeat can only be used in text bindings\");const N=i.get(a)||[],p=l.get(a)||[],u=[],v=[],g=[];let h,w,x=0;for(const e of d)g[x]=c?c(e,x):x,v[x]=f(e,x),x++;let M=0,b=N.length-1,k=0,m=v.length-1;for(;M<=b&&k<=m;)if(null===N[M])M++;else if(null===N[b])b--;else if(p[M]===g[k])u[k]=o(N[M],v[k]),M++,k++;else if(p[b]===g[m])u[m]=o(N[b],v[m]),b--,m--;else if(p[M]===g[m])u[m]=o(N[M],v[m]),r(a,N[M],u[m+1]),M++,m--;else if(p[b]===g[k])u[k]=o(N[b],v[k]),r(a,N[b],N[M]),b--,k++;else if(void 0===h&&(h=s(g,k,m),w=s(p,M,b)),h.has(p[M]))if(h.has(p[b])){const e=w.get(g[k]),n=void 0!==e?N[e]:null;if(null===n){const e=t(a,N[M]);o(e,v[k]),u[k]=e}else u[k]=o(n,v[k]),r(a,n,N[M]),N[e]=null;k++}else n(N[b]),b--;else n(N[M]),M++;for(;k<=m;){const e=t(a,u[m+1]);o(e,v[k]),u[k++]=e}for(;M<=b;){const e=N[M++];null!==e&&n(e)}i.set(a,u),l.set(a,g)}});exports.repeat=d;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":0}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":13}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":20}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":35}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":43}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":56}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":57}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":64}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":68}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":76}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":88}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":90}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":94}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":96}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":1,"column":104}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":1,"column":122}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":23,"column":6},"generated":{"line":1,"column":128}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":24,"column":4},"generated":{"line":1,"column":130}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":24,"column":5},"generated":{"line":1,"column":131}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":24,"column":30},"generated":{"line":1,"column":133}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":1,"column":138}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":25,"column":12},"generated":{"line":1,"column":144}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":25,"column":24},"generated":{"line":1,"column":146}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":25,"column":38},"generated":{"line":1,"column":148}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":25,"column":48},"generated":{"line":1,"column":158}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":26,"column":12},"generated":{"line":1,"column":169}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":26,"column":40},"generated":{"line":1,"column":176}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":26,"column":25},"generated":{"line":1,"column":180}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":26,"column":52},"generated":{"line":1,"column":182}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":26,"column":66},"generated":{"line":1,"column":184}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":27,"column":52},"generated":{"line":1,"column":192}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":27,"column":63},"generated":{"line":1,"column":194}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":12},"generated":{"line":1,"column":204}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":24},"generated":{"line":1,"column":206}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":34},"generated":{"line":1,"column":208}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":47},"generated":{"line":1,"column":222}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":24},"generated":{"line":1,"column":224}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":24},"generated":{"line":1,"column":226}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":28,"column":63},"generated":{"line":1,"column":242}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":245}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":29,"column":16},"generated":{"line":1,"column":247}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":29,"column":29},"generated":{"line":1,"column":261}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":263}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":29,"column":6},"generated":{"line":1,"column":265}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":29,"column":45},"generated":{"line":1,"column":281}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":1,"column":284}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":12},"generated":{"line":1,"column":290}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":1,"column":292}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":1,"column":296}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":22},"generated":{"line":1,"column":298}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":35},"generated":{"line":1,"column":307}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":30,"column":49},"generated":{"line":1,"column":309}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":32,"column":13},"generated":{"line":1,"column":318}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":31,"column":6},"generated":{"line":1,"column":325}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":31,"column":14},"generated":{"line":1,"column":327}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":31,"column":30},"generated":{"line":1,"column":343}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":32,"column":13},"generated":{"line":1,"column":346}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":349}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":35,"column":19},"generated":{"line":1,"column":351}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":35,"column":20},"generated":{"line":1,"column":352}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":35,"column":36},"generated":{"line":1,"column":354}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":36,"column":2},"generated":{"line":1,"column":359}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":36,"column":7},"generated":{"line":1,"column":361}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":36,"column":16},"generated":{"line":1,"column":370}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":373}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":37,"column":7},"generated":{"line":1,"column":375}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":38,"column":9},"generated":{"line":1,"column":384}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":41,"column":6},"generated":{"line":1,"column":387}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":1,"column":389}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":42,"column":5},"generated":{"line":1,"column":390}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":42,"column":30},"generated":{"line":1,"column":392}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":42,"column":46},"generated":{"line":1,"column":394}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":43,"column":12},"generated":{"line":1,"column":399}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":43,"column":12},"generated":{"line":1,"column":405}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":43,"column":24},"generated":{"line":1,"column":407}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":43,"column":38},"generated":{"line":1,"column":409}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":43,"column":48},"generated":{"line":1,"column":419}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":44,"column":12},"generated":{"line":1,"column":430}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":44,"column":25},"generated":{"line":1,"column":432}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":44,"column":31},"generated":{"line":1,"column":434}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":44,"column":35},"generated":{"line":1,"column":436}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":44,"column":47},"generated":{"line":1,"column":446}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":44,"column":61},"generated":{"line":1,"column":448}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":45,"column":12},"generated":{"line":1,"column":456}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":45,"column":22},"generated":{"line":1,"column":458}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":45,"column":27},"generated":{"line":1,"column":460}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":45,"column":35},"generated":{"line":1,"column":468}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":46,"column":10},"generated":{"line":1,"column":480}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":46,"column":22},"generated":{"line":1,"column":484}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":1,"column":488}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":1,"column":490}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":1,"column":492}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":22},"generated":{"line":1,"column":507}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":33},"generated":{"line":1,"column":509}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":38},"generated":{"line":1,"column":511}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":49},"generated":{"line":1,"column":521}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":47,"column":58},"generated":{"line":1,"column":523}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":1,"column":527}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":51,"column":20},"generated":{"line":1,"column":529}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":534}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":536}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":538}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":551}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":11},"generated":{"line":1,"column":553}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":21},"generated":{"line":1,"column":563}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":34},"generated":{"line":1,"column":574}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":39},"generated":{"line":1,"column":576}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":50},"generated":{"line":1,"column":586}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":55},"generated":{"line":1,"column":588}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":53,"column":63},"generated":{"line":1,"column":596}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":59,"column":6},"generated":{"line":1,"column":610}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":59,"column":20},"generated":{"line":1,"column":612}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":59,"column":21},"generated":{"line":1,"column":613}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":59,"column":38},"generated":{"line":1,"column":615}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":59,"column":53},"generated":{"line":1,"column":617}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":60,"column":8},"generated":{"line":1,"column":622}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":60,"column":8},"generated":{"line":1,"column":628}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":60,"column":14},"generated":{"line":1,"column":630}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":60,"column":18},"generated":{"line":1,"column":634}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":1,"column":638}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":7},"generated":{"line":1,"column":642}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":11},"generated":{"line":1,"column":646}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":15},"generated":{"line":1,"column":648}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":22},"generated":{"line":1,"column":650}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":27},"generated":{"line":1,"column":653}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":61,"column":32},"generated":{"line":1,"column":655}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":1,"column":659}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":661}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":62,"column":12},"generated":{"line":1,"column":665}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":1,"column":667}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":62,"column":21},"generated":{"line":1,"column":670}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":673}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":680}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":1,"column":683}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":68,"column":22},"generated":{"line":1,"column":685}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":68,"column":26},"generated":{"line":1,"column":689}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":69,"column":6},"generated":{"line":1,"column":697}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":69,"column":21},"generated":{"line":1,"column":699}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":69,"column":25},"generated":{"line":1,"column":703}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":13},"generated":{"line":1,"column":711}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":91,"column":4},"generated":{"line":1,"column":714}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":1,"column":716}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":1,"column":718}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":92,"column":8},"generated":{"line":1,"column":729}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":92,"column":12},"generated":{"line":1,"column":730}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":93,"column":12},"generated":{"line":1,"column":732}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":94,"column":12},"generated":{"line":1,"column":734}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":96,"column":18},"generated":{"line":1,"column":739}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":96,"column":18},"generated":{"line":1,"column":743}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":103,"column":22},"generated":{"line":1,"column":745}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":97,"column":31},"generated":{"line":1,"column":757}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":97,"column":18},"generated":{"line":1,"column":761}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":98,"column":16},"generated":{"line":1,"column":763}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":98,"column":27},"generated":{"line":1,"column":765}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":99,"column":45},"generated":{"line":1,"column":772}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":99,"column":25},"generated":{"line":1,"column":776}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":100,"column":16},"generated":{"line":1,"column":780}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":100,"column":24},"generated":{"line":1,"column":782}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":103,"column":22},"generated":{"line":1,"column":785}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":104,"column":20},"generated":{"line":1,"column":789}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":104,"column":22},"generated":{"line":1,"column":794}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":104,"column":47},"generated":{"line":1,"column":807}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":104,"column":20},"generated":{"line":1,"column":809}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":105,"column":24},"generated":{"line":1,"column":819}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":105,"column":24},"generated":{"line":1,"column":825}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":105,"column":28},"generated":{"line":1,"column":829}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":105,"column":34},"generated":{"line":1,"column":835}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":109,"column":22},"generated":{"line":1,"column":879}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":109,"column":22},"generated":{"line":1,"column":885}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":109,"column":33},"generated":{"line":1,"column":887}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":109,"column":47},"generated":{"line":1,"column":889}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":109,"column":51},"generated":{"line":1,"column":893}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":109,"column":69},"generated":{"line":1,"column":897}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":110,"column":22},"generated":{"line":1,"column":900}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":110,"column":32},"generated":{"line":1,"column":902}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":110,"column":45},"generated":{"line":1,"column":904}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":110,"column":49},"generated":{"line":1,"column":908}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":110,"column":67},"generated":{"line":1,"column":912}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":115,"column":22},"generated":{"line":1,"column":915}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":115,"column":45},"generated":{"line":1,"column":917}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":119,"column":22},"generated":{"line":1,"column":920}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":119,"column":45},"generated":{"line":1,"column":922}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":120,"column":22},"generated":{"line":1,"column":925}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":120,"column":43},"generated":{"line":1,"column":927}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":121,"column":20},"generated":{"line":1,"column":930}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":132,"column":20},"generated":{"line":1,"column":934}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":133,"column":20},"generated":{"line":1,"column":936}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":121,"column":20},"generated":{"line":1,"column":938}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":121,"column":28},"generated":{"line":1,"column":940}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":122,"column":21},"generated":{"line":1,"column":942}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":122,"column":21},"generated":{"line":1,"column":946}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":122,"column":27},"generated":{"line":1,"column":952}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":122,"column":35},"generated":{"line":1,"column":957}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":18},"generated":{"line":1,"column":959}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":26},"generated":{"line":1,"column":961}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":35},"generated":{"line":1,"column":964}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":43},"generated":{"line":1,"column":966}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":49},"generated":{"line":1,"column":968}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":55},"generated":{"line":1,"column":970}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":123,"column":64},"generated":{"line":1,"column":973}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":124,"column":18},"generated":{"line":1,"column":975}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":124,"column":28},"generated":{"line":1,"column":977}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":124,"column":37},"generated":{"line":1,"column":980}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":124,"column":48},"generated":{"line":1,"column":982}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":124,"column":54},"generated":{"line":1,"column":984}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":125,"column":18},"generated":{"line":1,"column":987}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":136,"column":20},"generated":{"line":1,"column":991}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":136,"column":20},"generated":{"line":1,"column":995}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":136,"column":30},"generated":{"line":1,"column":997}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":137,"column":20},"generated":{"line":1,"column":999}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":137,"column":30},"generated":{"line":1,"column":1001}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":137,"column":39},"generated":{"line":1,"column":1003}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":137,"column":48},"generated":{"line":1,"column":1010}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":138,"column":20},"generated":{"line":1,"column":1012}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":138,"column":30},"generated":{"line":1,"column":1014}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":139,"column":20},"generated":{"line":1,"column":1016}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":139,"column":30},"generated":{"line":1,"column":1018}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":139,"column":40},"generated":{"line":1,"column":1020}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":139,"column":49},"generated":{"line":1,"column":1027}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":353,"column":23},"generated":{"line":1,"column":1029}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":353,"column":23},"generated":{"line":1,"column":1034}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":353,"column":34},"generated":{"line":1,"column":1037}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":353,"column":45},"generated":{"line":1,"column":1040}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":353,"column":56},"generated":{"line":1,"column":1043}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":354,"column":22},"generated":{"line":1,"column":1046}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":354,"column":44},"generated":{"line":1,"column":1049}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":354,"column":22},"generated":{"line":1,"column":1056}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":354,"column":31},"generated":{"line":1,"column":1058}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":357,"column":20},"generated":{"line":1,"column":1061}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":358,"column":25},"generated":{"line":1,"column":1070}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":358,"column":51},"generated":{"line":1,"column":1073}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":358,"column":29},"generated":{"line":1,"column":1080}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":358,"column":38},"generated":{"line":1,"column":1082}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":361,"column":20},"generated":{"line":1,"column":1085}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":362,"column":25},"generated":{"line":1,"column":1094}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":362,"column":29},"generated":{"line":1,"column":1097}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":362,"column":37},"generated":{"line":1,"column":1099}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":362,"column":50},"generated":{"line":1,"column":1104}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":362,"column":58},"generated":{"line":1,"column":1106}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":364,"column":20},"generated":{"line":1,"column":1109}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":364,"column":29},"generated":{"line":1,"column":1111}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":365,"column":24},"generated":{"line":1,"column":1114}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":365,"column":35},"generated":{"line":1,"column":1116}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":365,"column":44},"generated":{"line":1,"column":1118}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":365,"column":55},"generated":{"line":1,"column":1121}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":365,"column":65},"generated":{"line":1,"column":1123}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":366,"column":20},"generated":{"line":1,"column":1127}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":367,"column":20},"generated":{"line":1,"column":1131}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":368,"column":25},"generated":{"line":1,"column":1140}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":368,"column":29},"generated":{"line":1,"column":1143}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":368,"column":37},"generated":{"line":1,"column":1145}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":368,"column":50},"generated":{"line":1,"column":1150}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":368,"column":58},"generated":{"line":1,"column":1152}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":370,"column":20},"generated":{"line":1,"column":1155}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":370,"column":29},"generated":{"line":1,"column":1157}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":371,"column":24},"generated":{"line":1,"column":1160}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":371,"column":35},"generated":{"line":1,"column":1162}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":371,"column":44},"generated":{"line":1,"column":1164}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":371,"column":55},"generated":{"line":1,"column":1167}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":371,"column":65},"generated":{"line":1,"column":1169}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":372,"column":20},"generated":{"line":1,"column":1173}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":373,"column":20},"generated":{"line":1,"column":1177}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":374,"column":25},"generated":{"line":1,"column":1186}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":374,"column":29},"generated":{"line":1,"column":1189}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":374,"column":37},"generated":{"line":1,"column":1191}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":374,"column":50},"generated":{"line":1,"column":1196}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":374,"column":58},"generated":{"line":1,"column":1198}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":376,"column":20},"generated":{"line":1,"column":1201}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":376,"column":29},"generated":{"line":1,"column":1203}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":377,"column":24},"generated":{"line":1,"column":1206}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":377,"column":35},"generated":{"line":1,"column":1208}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":377,"column":44},"generated":{"line":1,"column":1210}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":377,"column":55},"generated":{"line":1,"column":1213}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":377,"column":65},"generated":{"line":1,"column":1215}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":378,"column":20},"generated":{"line":1,"column":1219}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":379,"column":24},"generated":{"line":1,"column":1221}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":380,"column":24},"generated":{"line":1,"column":1223}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":380,"column":33},"generated":{"line":1,"column":1225}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":381,"column":24},"generated":{"line":1,"column":1228}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":381,"column":33},"generated":{"line":1,"column":1230}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":381,"column":43},"generated":{"line":1,"column":1232}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":382,"column":20},"generated":{"line":1,"column":1236}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":383,"column":20},"generated":{"line":1,"column":1240}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":384,"column":25},"generated":{"line":1,"column":1249}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":384,"column":29},"generated":{"line":1,"column":1252}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":384,"column":37},"generated":{"line":1,"column":1254}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":384,"column":50},"generated":{"line":1,"column":1259}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":384,"column":58},"generated":{"line":1,"column":1261}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":386,"column":20},"generated":{"line":1,"column":1264}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":386,"column":29},"generated":{"line":1,"column":1266}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":387,"column":24},"generated":{"line":1,"column":1269}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":387,"column":35},"generated":{"line":1,"column":1271}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":387,"column":44},"generated":{"line":1,"column":1273}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":387,"column":55},"generated":{"line":1,"column":1276}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":387,"column":65},"generated":{"line":1,"column":1278}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":388,"column":20},"generated":{"line":1,"column":1282}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":389,"column":24},"generated":{"line":1,"column":1284}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":389,"column":39},"generated":{"line":1,"column":1286}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":389,"column":48},"generated":{"line":1,"column":1288}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":389,"column":59},"generated":{"line":1,"column":1291}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":389,"column":68},"generated":{"line":1,"column":1293}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":390,"column":20},"generated":{"line":1,"column":1297}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":391,"column":20},"generated":{"line":1,"column":1301}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":399,"column":24},"generated":{"line":1,"column":1310}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":393,"column":45},"generated":{"line":1,"column":1318}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":393,"column":24},"generated":{"line":1,"column":1322}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":396,"column":22},"generated":{"line":1,"column":1326}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":396,"column":41},"generated":{"line":1,"column":1328}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":396,"column":53},"generated":{"line":1,"column":1330}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":396,"column":62},"generated":{"line":1,"column":1332}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":396,"column":71},"generated":{"line":1,"column":1334}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":397,"column":22},"generated":{"line":1,"column":1337}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":397,"column":41},"generated":{"line":1,"column":1339}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":397,"column":53},"generated":{"line":1,"column":1341}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":397,"column":62},"generated":{"line":1,"column":1343}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":397,"column":71},"generated":{"line":1,"column":1345}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":399,"column":25},"generated":{"line":1,"column":1349}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":399,"column":42},"generated":{"line":1,"column":1351}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":399,"column":46},"generated":{"line":1,"column":1355}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":399,"column":54},"generated":{"line":1,"column":1357}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":403,"column":27},"generated":{"line":1,"column":1361}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":403,"column":32},"generated":{"line":1,"column":1364}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":403,"column":49},"generated":{"line":1,"column":1366}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":403,"column":53},"generated":{"line":1,"column":1370}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":403,"column":61},"generated":{"line":1,"column":1372}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":407,"column":27},"generated":{"line":1,"column":1376}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":411,"column":28},"generated":{"line":1,"column":1377}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":411,"column":28},"generated":{"line":1,"column":1383}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":411,"column":39},"generated":{"line":1,"column":1385}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":411,"column":56},"generated":{"line":1,"column":1387}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":411,"column":60},"generated":{"line":1,"column":1391}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":411,"column":68},"generated":{"line":1,"column":1393}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":412,"column":28},"generated":{"line":1,"column":1397}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":413,"column":39},"generated":{"line":1,"column":1404}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":413,"column":26},"generated":{"line":1,"column":1408}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":413,"column":51},"generated":{"line":1,"column":1410}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":413,"column":60},"generated":{"line":1,"column":1412}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":413,"column":72},"generated":{"line":1,"column":1415}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":414,"column":26},"generated":{"line":1,"column":1420}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":414,"column":38},"generated":{"line":1,"column":1423}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":414,"column":26},"generated":{"line":1,"column":1430}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":414,"column":44},"generated":{"line":1,"column":1432}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":417,"column":30},"generated":{"line":1,"column":1433}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":417,"column":30},"generated":{"line":1,"column":1439}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":417,"column":40},"generated":{"line":1,"column":1441}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":418,"column":28},"generated":{"line":1,"column":1443}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":418,"column":43},"generated":{"line":1,"column":1445}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":418,"column":52},"generated":{"line":1,"column":1447}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":419,"column":24},"generated":{"line":1,"column":1451}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":419,"column":35},"generated":{"line":1,"column":1453}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":419,"column":44},"generated":{"line":1,"column":1455}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":419,"column":54},"generated":{"line":1,"column":1457}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":420,"column":24},"generated":{"line":1,"column":1461}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":420,"column":33},"generated":{"line":1,"column":1463}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":420,"column":44},"generated":{"line":1,"column":1466}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":423,"column":24},"generated":{"line":1,"column":1473}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":423,"column":33},"generated":{"line":1,"column":1475}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":424,"column":28},"generated":{"line":1,"column":1478}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":424,"column":39},"generated":{"line":1,"column":1480}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":424,"column":48},"generated":{"line":1,"column":1482}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":424,"column":58},"generated":{"line":1,"column":1484}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":425,"column":24},"generated":{"line":1,"column":1488}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":426,"column":28},"generated":{"line":1,"column":1490}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":426,"column":43},"generated":{"line":1,"column":1492}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":426,"column":52},"generated":{"line":1,"column":1494}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":426,"column":61},"generated":{"line":1,"column":1496}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":429,"column":24},"generated":{"line":1,"column":1500}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":429,"column":33},"generated":{"line":1,"column":1502}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":429,"column":55},"generated":{"line":1,"column":1505}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":431,"column":22},"generated":{"line":1,"column":1510}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":405,"column":22},"generated":{"line":1,"column":1519}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":405,"column":33},"generated":{"line":1,"column":1521}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":405,"column":42},"generated":{"line":1,"column":1523}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":406,"column":22},"generated":{"line":1,"column":1527}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":401,"column":22},"generated":{"line":1,"column":1536}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":401,"column":33},"generated":{"line":1,"column":1538}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":401,"column":42},"generated":{"line":1,"column":1540}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":402,"column":22},"generated":{"line":1,"column":1544}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":436,"column":23},"generated":{"line":1,"column":1548}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":436,"column":23},"generated":{"line":1,"column":1553}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":436,"column":34},"generated":{"line":1,"column":1556}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":436,"column":43},"generated":{"line":1,"column":1559}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":439,"column":24},"generated":{"line":1,"column":1560}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":439,"column":24},"generated":{"line":1,"column":1566}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":439,"column":34},"generated":{"line":1,"column":1568}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":440,"column":22},"generated":{"line":1,"column":1570}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":440,"column":37},"generated":{"line":1,"column":1572}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":440,"column":46},"generated":{"line":1,"column":1574}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":440,"column":56},"generated":{"line":1,"column":1576}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":441,"column":18},"generated":{"line":1,"column":1580}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":441,"column":29},"generated":{"line":1,"column":1582}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":441,"column":38},"generated":{"line":1,"column":1584}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":441,"column":48},"generated":{"line":1,"column":1586}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":442,"column":18},"generated":{"line":1,"column":1590}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":442,"column":27},"generated":{"line":1,"column":1592}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":442,"column":40},"generated":{"line":1,"column":1597}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":445,"column":23},"generated":{"line":1,"column":1599}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":445,"column":23},"generated":{"line":1,"column":1604}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":445,"column":34},"generated":{"line":1,"column":1607}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":445,"column":43},"generated":{"line":1,"column":1610}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":446,"column":24},"generated":{"line":1,"column":1611}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":446,"column":24},"generated":{"line":1,"column":1617}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":446,"column":34},"generated":{"line":1,"column":1619}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":446,"column":43},"generated":{"line":1,"column":1621}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":447,"column":34},"generated":{"line":1,"column":1626}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":447,"column":22},"generated":{"line":1,"column":1633}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":448,"column":20},"generated":{"line":1,"column":1636}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":448,"column":31},"generated":{"line":1,"column":1638}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":452,"column":16},"generated":{"line":1,"column":1641}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":452,"column":30},"generated":{"line":1,"column":1643}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":452,"column":34},"generated":{"line":1,"column":1647}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":452,"column":49},"generated":{"line":1,"column":1649}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":453,"column":16},"generated":{"line":1,"column":1652}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":453,"column":29},"generated":{"line":1,"column":1654}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":453,"column":33},"generated":{"line":1,"column":1658}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":453,"column":48},"generated":{"line":1,"column":1660}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":1666}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":1674}},{"source":"../src/directives/repeat.ts","name":null,"original":{"line":90,"column":7},"generated":{"line":1,"column":1681}}],"sources":{"../src/directives/repeat.ts":"/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {DirectiveFn} from '../lib/directive.js';\nimport {createMarker, directive, NodePart, Part, removeNodes, reparentNodes} from '../lit-html.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart =\n    (containerPart: NodePart, beforePart?: NodePart): NodePart => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = beforePart === undefined ? containerPart.endNode :\n                                                    beforePart.startNode;\n      const startNode = container.insertBefore(createMarker(), beforeNode);\n      container.insertBefore(createMarker(), beforeNode);\n      const newPart = new NodePart(containerPart.options);\n      newPart.insertAfterNode(startNode);\n      return newPart;\n    };\n\nconst updatePart = (part: NodePart, value: unknown) => {\n  part.setValue(value);\n  part.commit();\n  return part;\n};\n\nconst insertPartBefore =\n    (containerPart: NodePart, part: NodePart, ref?: NodePart) => {\n      const container = containerPart.startNode.parentNode as Node;\n      const beforeNode = ref ? ref.startNode : containerPart.endNode;\n      const endNode = part.endNode.nextSibling;\n      if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n      }\n    };\n\nconst removePart = (part: NodePart) => {\n  removeNodes(\n      part.startNode.parentNode!, part.startNode, part.endNode.nextSibling);\n};\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap<NodePart, (NodePart | null)[]>();\nconst keyListCache = new WeakMap<NodePart, unknown[]>();\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat =\n    directive(\n        <T>(items: Iterable<T>,\n            keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n            template?: ItemTemplate<T>):\n            DirectiveFn => {\n              let keyFn: KeyFn<T>;\n              if (template === undefined) {\n                template = keyFnOrTemplate;\n              } else if (keyFnOrTemplate !== undefined) {\n                keyFn = keyFnOrTemplate as KeyFn<T>;\n              }\n\n              return (containerPart: Part): void => {\n                if (!(containerPart instanceof NodePart)) {\n                  throw new Error('repeat can only be used in text bindings');\n                }\n                // Old part & key lists are retrieved from the last update\n                // (associated with the part for this instance of the directive)\n                const oldParts = partListCache.get(containerPart) || [];\n                const oldKeys = keyListCache.get(containerPart) || [];\n\n                // New part list will be built up as we go (either reused from\n                // old parts or created for new keys in this update). This is\n                // saved in the above cache at the end of the update.\n                const newParts: NodePart[] = [];\n\n                // New value list is eagerly generated from items along with a\n                // parallel array indicating its key.\n                const newValues: unknown[] = [];\n                const newKeys: unknown[] = [];\n                let index = 0;\n                for (const item of items) {\n                  newKeys[index] = keyFn ? keyFn(item, index) : index;\n                  newValues[index] = template !(item, index);\n                  index++;\n                }\n\n                // Maps from key to index for current and previous update; these\n                // are generated lazily only when needed as a performance\n                // optimization, since they are only required for multiple\n                // non-contiguous changes in the list, which are less common.\n                let newKeyToIndexMap!: Map<unknown, number>;\n                let oldKeyToIndexMap!: Map<unknown, number>;\n\n                // Head and tail pointers to old parts and new values\n                let oldHead = 0;\n                let oldTail = oldParts.length - 1;\n                let newHead = 0;\n                let newTail = newValues.length - 1;\n\n                // Overview of O(n) reconciliation algorithm (general approach\n                // based on ideas found in ivi, vue, snabbdom, etc.):\n                //\n                // * We start with the list of old parts and new values (and\n                // arrays of\n                //   their respective keys), head/tail pointers into each, and\n                //   we build up the new list of parts by updating (and when\n                //   needed, moving) old parts or creating new ones. The initial\n                //   scenario might look like this (for brevity of the diagrams,\n                //   the numbers in the array reflect keys associated with the\n                //   old parts or new values, although keys and parts/values are\n                //   actually stored in parallel arrays indexed using the same\n                //   head/tail pointers):\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n                //   item order\n                //      newHead ^                 ^ newTail\n                //\n                // * Iterate old & new lists from both sides, updating,\n                // swapping, or\n                //   removing parts at the head/tail locations until neither\n                //   head nor tail can move.\n                //\n                // * Example below: keys at head pointers match, so update old\n                // part 0 in-\n                //   place (no need to move it) and record part 0 in the\n                //   `newParts` list. The last thing we do is advance the\n                //   `oldHead` and `newHead` pointers (will be reflected in the\n                //   next diagram).\n                //\n                //      oldHead v                 v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n                //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead\n                //   & newHead\n                //      newHead ^                 ^ newTail\n                //\n                // * Example below: head pointers don't match, but tail pointers\n                // do, so\n                //   update part 6 in place (no need to move it), and record\n                //   part 6 in the `newParts` list. Last, advance the `oldTail`\n                //   and `oldHead` pointers.\n                //\n                //         oldHead v              v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n                //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldTail\n                //   & newTail\n                //         newHead ^              ^ newTail\n                //\n                // * If neither head nor tail match; next check if one of the\n                // old head/tail\n                //   items was removed. We first need to generate the reverse\n                //   map of new keys to index (`newKeyToIndexMap`), which is\n                //   done once lazily as a performance optimization, since we\n                //   only hit this case if multiple non-contiguous changes were\n                //   made. Note that for contiguous removal anywhere in the\n                //   list, the head and tails would advance from either end and\n                //   pass each other before we get to this case and removals\n                //   would be handled in the final while loop without needing to\n                //   generate the map.\n                //\n                // * Example below: The key at `oldTail` was removed (no longer\n                // in the\n                //   `newKeyToIndexMap`), so remove that part from the DOM and\n                //   advance just the `oldTail` pointer.\n                //\n                //         oldHead v           v oldTail\n                //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n                //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map; remove\n                //   5 and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance oldTail\n                //         newHead ^           ^ newTail\n                //\n                // * Once head and tail cannot move, any mismatches are due to\n                // either new or\n                //   moved items; if a new key is in the previous \"old key to\n                //   old index\" map, move the old part to the new location,\n                //   otherwise create and insert a new part. Note that when\n                //   moving an old part we null its position in the oldParts\n                //   array if it lies between the head and tail so we know to\n                //   skip it when the pointers get there.\n                //\n                // * Example below: neither head nor tail match, and neither\n                // were removed;\n                //   so find the `newHead` key in the `oldKeyToIndexMap`, and\n                //   move that old part's DOM into the next head position\n                //   (before `oldParts[oldHead]`). Last, null the part in the\n                //   `oldPart` array since it was somewhere in the remaining\n                //   oldParts still to be scanned (between the head and tail\n                //   pointers) so that we know to skip that old part on future\n                //   iterations.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck; update & move 2\n                //   into place newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance\n                //   newHead\n                //         newHead ^           ^ newTail\n                //\n                // * Note that for moves/insertions like the one above, a part\n                // inserted at\n                //   the head pointer is inserted before the current\n                //   `oldParts[oldHead]`, and a part inserted at the tail\n                //   pointer is inserted before `newParts[newTail+1]`. The\n                //   seeming asymmetry lies in the fact that new parts are moved\n                //   into place outside in, so to the right of the head pointer\n                //   are old parts, and to the right of the tail pointer are new\n                //   parts.\n                //\n                // * We always restart back from the top of the algorithm,\n                // allowing matching\n                //   and simple updates in place to continue...\n                //\n                // * Example below: the head pointers once again match, so\n                // simply update\n                //   part 1 and record it in the `newParts` array.  Last,\n                //   advance both head pointers.\n                //\n                //         oldHead v        v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched; update 1\n                //   and newKeys:  [0, 2, 1, 4, 3, 7, 6]    advance both oldHead\n                //   & newHead\n                //            newHead ^        ^ newTail\n                //\n                // * As mentioned above, items that were moved as a result of\n                // being stuck\n                //   (the final else clause in the code below) are marked with\n                //   null, so we always advance old pointers over these so we're\n                //   comparing the next actual old value on either end.\n                //\n                // * Example below: `oldHead` is null (already placed in\n                // newParts), so\n                //   advance `oldHead`.\n                //\n                //            oldHead v     v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6] // old head already used;\n                //   advance newParts: [0, 2, 1,  ,  ,  , 6] // oldHead newKeys:\n                //   [0, 2, 1, 4, 3, 7, 6]\n                //               newHead ^     ^ newTail\n                //\n                // * Note it's not critical to mark old parts as null when they\n                // are moved\n                //   from head to tail or tail to head, since they will be\n                //   outside the pointer range and never visited again.\n                //\n                // * Example below: Here the old tail key matches the new head\n                // key, so\n                //   the part at the `oldTail` position and move its DOM to the\n                //   new head position (before `oldParts[oldHead]`). Last,\n                //   advance `oldTail` and `newHead` pointers.\n                //\n                //               oldHead v  v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n                //   head: update newKeys:  [0, 2, 1, 4, 3, 7, 6]   & move 4,\n                //   advance oldTail & newHead\n                //               newHead ^     ^ newTail\n                //\n                // * Example below: Old and new head keys match, so update the\n                // old head\n                //   part in place, and advance the `oldHead` and `newHead`\n                //   pointers.\n                //\n                //               oldHead v oldTail\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n                //   and advance newKeys:  [0, 2, 1, 4, 3, 7, 6]    oldHead &\n                //   newHead\n                //                  newHead ^  ^ newTail\n                //\n                // * Once the new or old pointers move past each other then all\n                // we have\n                //   left is additions (if old list exhausted) or removals (if\n                //   new list exhausted). Those are handled in the final while\n                //   loops at the end.\n                //\n                // * Example below: `oldHead` exceeded `oldTail`, so we're done\n                // with the\n                //   main loop.  Create the remaining part and insert it at the\n                //   new head position, and the update is complete.\n                //\n                //                   (oldHead > oldTail)\n                //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n                //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n                //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n                //                     newHead ^ newTail\n                //\n                // * Note that the order of the if/else clauses is not important\n                // to the\n                //   algorithm, as long as the null checks come first (to ensure\n                //   we're always working on valid old parts) and that the final\n                //   else clause comes last (since that's where the expensive\n                //   moves occur). The order of remaining clauses is is just a\n                //   simple guess at which cases will be most common.\n                //\n                // * TODO(kschaaf) Note, we could calculate the longest\n                // increasing\n                //   subsequence (LIS) of old items in new position, and only\n                //   move those not in the LIS set. However that costs O(nlogn)\n                //   time and adds a bit more code, and only helps make rare\n                //   types of mutations require fewer moves. The above handles\n                //   removes, adds, reversal, swaps, and single moves of\n                //   contiguous items in linear time, in the minimum number of\n                //   moves. As the number of multiple moves where LIS might help\n                //   approaches a random shuffle, the LIS optimization becomes\n                //   less helpful, so it seems not worth the code at this point.\n                //   Could reconsider if a compelling case arises.\n\n                while (oldHead <= oldTail && newHead <= newTail) {\n                  if (oldParts[oldHead] === null) {\n                    // `null` means old part at head has already been used\n                    // below; skip\n                    oldHead++;\n                  } else if (oldParts[oldTail] === null) {\n                    // `null` means old part at tail has already been used\n                    // below; skip\n                    oldTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newHead]) {\n                    // Old head matches new head; update in place\n                    newParts[newHead] =\n                        updatePart(oldParts[oldHead]!, newValues[newHead]);\n                    oldHead++;\n                    newHead++;\n                  } else if (oldKeys[oldTail] === newKeys[newTail]) {\n                    // Old tail matches new tail; update in place\n                    newParts[newTail] =\n                        updatePart(oldParts[oldTail]!, newValues[newTail]);\n                    oldTail--;\n                    newTail--;\n                  } else if (oldKeys[oldHead] === newKeys[newTail]) {\n                    // Old head matches new tail; update and move to new tail\n                    newParts[newTail] =\n                        updatePart(oldParts[oldHead]!, newValues[newTail]);\n                    insertPartBefore(\n                        containerPart,\n                        oldParts[oldHead]!,\n                        newParts[newTail + 1]);\n                    oldHead++;\n                    newTail--;\n                  } else if (oldKeys[oldTail] === newKeys[newHead]) {\n                    // Old tail matches new head; update and move to new head\n                    newParts[newHead] =\n                        updatePart(oldParts[oldTail]!, newValues[newHead]);\n                    insertPartBefore(\n                        containerPart, oldParts[oldTail]!, oldParts[oldHead]!);\n                    oldTail--;\n                    newHead++;\n                  } else {\n                    if (newKeyToIndexMap === undefined) {\n                      // Lazily generate key-to-index maps, used for removals &\n                      // moves below\n                      newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                      oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                    }\n                    if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                      // Old head is no longer in new list; remove\n                      removePart(oldParts[oldHead]!);\n                      oldHead++;\n                    } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                      // Old tail is no longer in new list; remove\n                      removePart(oldParts[oldTail]!);\n                      oldTail--;\n                    } else {\n                      // Any mismatches at this point are due to additions or\n                      // moves; see if we have an old part we can reuse and move\n                      // into place\n                      const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                      const oldPart =\n                          oldIndex !== undefined ? oldParts[oldIndex] : null;\n                      if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(\n                            containerPart, oldParts[oldHead]!);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                      } else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(\n                            containerPart, oldPart, oldParts[oldHead]!);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex as number] = null;\n                      }\n                      newHead++;\n                    }\n                  }\n                }\n                // Add parts for any remaining new values\n                while (newHead <= newTail) {\n                  // For all remaining additions, we insert before last new\n                  // tail, since old pointers are no longer valid\n                  const newPart = createAndInsertPart(\n                      containerPart, newParts[newTail + 1]!);\n                  updatePart(newPart, newValues[newHead]);\n                  newParts[newHead++] = newPart;\n                }\n                // Remove any remaining unused old parts\n                while (oldHead <= oldTail) {\n                  const oldPart = oldParts[oldHead++];\n                  if (oldPart !== null) {\n                    removePart(oldPart);\n                  }\n                }\n                // Save order of new parts for next round\n                partListCache.set(containerPart, newParts);\n                keyListCache.set(containerPart, newKeys);\n              };\n            }) as\n    <T>(items: Iterable<T>,\n        keyFnOrTemplate: KeyFn<T>|ItemTemplate<T>,\n        template?: ItemTemplate<T>) => DirectiveFn;\n"},"lineCount":null}},"error":null,"hash":"705b9d7c7d2055e2debffb092b7479be","cacheData":{"env":{}}}